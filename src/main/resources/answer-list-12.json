[
  {
    "url": "https://hyperskill.org/learn/step/8740",
    "checked": true,
    "mode": 1,
    "answerStr": "Each programming language is suited better for some particular set of problems"
  },
  {
    "url": "https://hyperskill.org/learn/step/8741",
    "checked": true,
    "mode": 1,
    "answerStr": "To study and practice a lot"
  },
  {
    "url": "https://hyperskill.org/learn/step/14854",
    "checked": true,
    "mode": 1,
    "answerStr": "S--"
  },
  {
    "url": "https://hyperskill.org/learn/step/14855",
    "checked": true,
    "mode": 1,
    "answerStr": "a set of instructions for the computer"
  },
  {
    "url": "https://hyperskill.org/learn/step/14856",
    "checked": true,
    "mode": 1,
    "answerStr": "to write the course of actions understandable for the machine"
  },
  {
    "url": "https://hyperskill.org/learn/step/14858",
    "checked": true,
    "mode": 1,
    "answerStr": "open the browser"
  },
  {
    "url": "https://hyperskill.org/learn/step/14859",
    "checked": true,
    "mode": 7,
    "answerArr": [
      "open the calculator",
      "write input data",
      "perform calculation",
      "display the result on the screen"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15769",
    "checked": true,
    "mode": 1,
    "answerStr": "A"
  },
  {
    "url": "https://hyperskill.org/learn/step/24446",
    "checked": true,
    "mode": 1,
    "answerStr": "Object-oriented"
  },
  {
    "url": "https://hyperskill.org/learn/step/15861",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "declarative",
      "imperative"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15862",
    "checked": true,
    "mode": 1,
    "answerStr": "step by step instructions that change the data sequentially"
  },
  {
    "url": "https://hyperskill.org/learn/step/15864",
    "checked": true,
    "mode": 1,
    "answerStr": "Procedural"
  },
  {
    "url": "https://hyperskill.org/learn/step/15865",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "change speed",
      "open the door"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15867",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "Functional",
        "a program is a computation of the functions\u0027 values"
      ],
      [
        "Procedural",
        "a program is a list of step-by-step actions"
      ],
      [
        "OOP",
        "a program is written as a collection of classes"
      ],
      [
        "Logic",
        "a program is a set of logical sentences that express facts and rules about a certain problem"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3745",
    "checked": true,
    "mode": 1,
    "answerStr": "Java has a mechanism that cleans memory automatically."
  },
  {
    "url": "https://hyperskill.org/learn/step/4709",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, Sergey!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/18460",
    "checked": true,
    "mode": 1,
    "answerStr": "Oracle Corporation"
  },
  {
    "url": "https://hyperskill.org/learn/step/18461",
    "checked": true,
    "mode": 1,
    "answerStr": "A programming language popularity index"
  },
  {
    "url": "https://hyperskill.org/learn/step/18462",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "Financial services industry",
      "Computer games",
      "Medical applications",
      "Android smartphones"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18463",
    "checked": true,
    "mode": 5,
    "answerStr": "Oak"
  },
  {
    "url": "https://hyperskill.org/learn/step/18464",
    "checked": true,
    "mode": 1,
    "answerStr": "Write Once Run Anywhere"
  },
  {
    "url": "https://hyperskill.org/learn/step/3222",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "\u0027B\u0027",
      "\u0027#\u0027",
      "\u00270\u0027"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3224",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "String",
        "\"464531######0207\""
      ],
      [
        "Number",
        "100_000_000"
      ],
      [
        "Character",
        "\u0027H\u0027"
      ],
      [
        "Invalid literal",
        "\u0027text\u0027"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5644",
    "checked": true,
    "mode": 1,
    "answerStr": "\u0027A\u0027, \u0027B\u0027, \u0027C\u0027, ..."
  },
  {
    "url": "https://hyperskill.org/learn/step/3227",
    "checked": true,
    "mode": 1,
    "answerStr": "\u002710000000\u0027"
  },
  {
    "url": "https://hyperskill.org/learn/step/3229",
    "checked": true,
    "mode": 1,
    "answerStr": "a string literal"
  },
  {
    "url": "https://hyperskill.org/learn/step/3231",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "\"123456\" is a correct number"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3232",
    "checked": true,
    "mode": 1,
    "answerStr": "\u0027abc\u0027"
  },
  {
    "url": "https://hyperskill.org/learn/step/3480",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "\"short string\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2506",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        // put your code here\n        System.out.println(\"Cats are robots!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3757",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "class is a keyword",
      "HelloWorldProgram is a name"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3758",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "public",
      "class",
      "static"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3772",
    "checked": true,
    "mode": 1,
    "answerStr": "class"
  },
  {
    "url": "https://hyperskill.org/learn/step/3773",
    "checked": true,
    "mode": 1,
    "answerStr": "Main"
  },
  {
    "url": "https://hyperskill.org/learn/step/2509",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        // put your code here\n        System.out.println(\"\"\"\n                        first\n                        second\n                        third\"\"\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3236",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        // put your code here\n        int[] arr \u003d new int[]{0,1,2,3,4};\n        for(int i : arr) {\n            System.out.println(i);\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3759",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        // put your code here\n        for (int i \u003d 9; i \u003e\u003d 0; i--) {\n            System.out.print(i + \" \");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3761",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        // put your code here\n        System.out.println(\"O X X\" + \"\\n\" + \"O X O\" + \"\\n\" + \"X O X\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3763",
    "checked": true,
    "mode": 1,
    "answerStr": "b"
  },
  {
    "url": "https://hyperskill.org/learn/step/3764",
    "checked": true,
    "mode": 1,
    "answerStr": "d"
  },
  {
    "url": "https://hyperskill.org/learn/step/26367",
    "checked": true,
    "mode": 1,
    "answerStr": "System.out.print(\"Goodbye, world!\");"
  },
  {
    "url": "https://hyperskill.org/learn/step/2084",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "A variable has a specific type",
      "You can read the value of a variable"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2085",
    "checked": true,
    "mode": 1,
    "answerStr": "\u003d"
  },
  {
    "url": "https://hyperskill.org/learn/step/2082",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "A variable can store a value",
      "A variable has a name (identifier)",
      "A variable has a type"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2314",
    "checked": true,
    "mode": 3,
    "answerStr": "public class Main {\n\n    public static void main(String[] args) {\n        int a \u003d 3;\n        int b \u003d 5;\n        int c \u003d 4;\n\n        System.out.println(a + \" \" + b + \" \" + c);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2486",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        // Assign values to these four variables\n        int one \u003d 1;\n        int two \u003d 2;\n        int three \u003d 3;\n        int four \u003d 4;\n\n        System.out.printf(\"%d %d %d %d\", one, two, three, four);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2512",
    "checked": true,
    "mode": 5,
    "answerStr": "5"
  },
  {
    "url": "https://hyperskill.org/learn/step/5028",
    "checked": true,
    "mode": 1,
    "answerStr": "speed"
  },
  {
    "url": "https://hyperskill.org/learn/step/5029",
    "checked": true,
    "mode": 1,
    "answerStr": "\"hedgehog\""
  },
  {
    "url": "https://hyperskill.org/learn/step/1976",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "Using javadoc tool it is possible to generate a documentation based on comments like /** javadoc */",
      "A multiple-line comment begins with /* and ends with */",
      "An end-of-line comment begins with // and lasts till the end of the current line."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1978",
    "checked": true,
    "mode": 1,
    "answerStr": "// single line, /*...*/ multi-line, /**...*/ Javadoc"
  },
  {
    "url": "https://hyperskill.org/learn/step/2161",
    "checked": true,
    "mode": 3,
    "answerStr": "/*The restriction: the class should have the name Main*/\npublic class Main {\n\n    /**\n    *The start point of your program\n    */\n    public static void main(String[] args) {\n        System.out.println(\"It compiles!\"); //It prints \"It compiles!\"\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2497",
    "checked": true,
    "mode": 3,
    "answerStr": "public class Main {\n\n    public static void main(String[] args) {\n        System.out.print(\"three! \");\n        System.out.print(\"two! \");\n        System.out.println(\"one!\");\n        System.out.println(\"go!\");\n\n        // System.out.println(\"go!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2498",
    "checked": true,
    "mode": 3,
    "answerStr": "public class Main {\n\n    public static void main(String[] args) {\n\n        //System.out.println(\"Print it!\");\n        // System.out.println(\"No, print it!\");\n        /* System.out.println(\"Uncomment this line!\"); */\n        System.out.println(\"Please, comment this line!\");\n        //System.out.println(\"Display this text!\");\n        //// System.out.println(\"Do not comment it!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2499",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "// a comment",
        "end-of-line comment"
      ],
      [
        "/* a comment */",
        "multi-line comment"
      ],
      [
        "/** a comment */",
        "doc comment"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2500",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n\n    /**\n     * It prints the text \"It works correctly\" to the standard output\n    */\n    public static void main(String[] args) {\n        System.out.println(\"It works correctly\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2501",
    "checked": true,
    "mode": 3,
    "answerStr": "/**\n * The class implements a simple application with the main method.\n */\nclass CommentedSimpleApplication {\n\n    public static void main(String[] args) {\n        // System.out.println(980233);\n        System.out.println(893457);\n        // System.out.println(789722);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2502",
    "checked": true,
    "mode": 1,
    "answerStr": "Standard multi-line comments"
  },
  {
    "url": "https://hyperskill.org/learn/step/2921",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        while (scanner.hasNext()) {\n            System.out.println(scanner.next());\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2922",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        String first \u003d scanner.next();\n        String second \u003d scanner.next();\n        String third \u003d scanner.next();\n\n        System.out.printf(\"%s\\n%s\\n%s\", third, second, first);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2923",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        for(int i \u003d 0; i \u003c 4; i++) {\n            System.out.println(scanner.next());\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/8301",
    "checked": true,
    "mode": 7,
    "answerArr": [
      "Read data from the standard input",
      "Process data",
      "Print data to the standard output",
      "Enjoy the result"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8302",
    "checked": true,
    "mode": 1,
    "answerStr": "It is an object representing the standard input."
  },
  {
    "url": "https://hyperskill.org/learn/step/8303",
    "checked": true,
    "mode": 1,
    "answerStr": "scanner.next()"
  },
  {
    "url": "https://hyperskill.org/learn/step/9056",
    "checked": true,
    "mode": 1,
    "answerStr": "String"
  },
  {
    "url": "https://hyperskill.org/learn/step/9057",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        String name \u003d scanner.next();\n        int preference \u003d scanner.nextInt();\n        String years \u003d scanner.next();\n        System.out.printf(\"The form for %s is completed. We will contact you if we need a chef who cooks %s dishes and has %d years of experience.\", name, years, preference);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/12412",
    "checked": true,
    "mode": 1,
    "answerStr": "Oracle Code Conventions"
  },
  {
    "url": "https://hyperskill.org/learn/step/12413",
    "checked": true,
    "mode": 1,
    "answerStr": "To avoid scrollbars in our examples and web code editor"
  },
  {
    "url": "https://hyperskill.org/learn/step/12414",
    "checked": true,
    "mode": 1,
    "answerStr": "4"
  },
  {
    "url": "https://hyperskill.org/learn/step/12415",
    "checked": true,
    "mode": 1,
    "answerStr": "d"
  },
  {
    "url": "https://hyperskill.org/learn/step/12416",
    "checked": true,
    "mode": 1,
    "answerStr": "All programmers write code in the same style following one of generally accepted coding style guides"
  },
  {
    "url": "https://hyperskill.org/learn/step/12418",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "One opening curly brace starts with a new line",
      "It has some extra spaces next to a parenthesis"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2083",
    "checked": true,
    "mode": 1,
    "answerStr": "var5"
  },
  {
    "url": "https://hyperskill.org/learn/step/2313",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "Letter of the Latin alphabet (a..z)",
      "Underscore (_)",
      "Dollar sign ($)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2920",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "number1",
      "_var"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2910",
    "checked": true,
    "mode": 5,
    "answerStr": "notUnicode"
  },
  {
    "url": "https://hyperskill.org/learn/step/2915",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "letter of the alphabet",
      "any digit (0..9)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2916",
    "checked": true,
    "mode": 5,
    "answerStr": "catDog_3"
  },
  {
    "url": "https://hyperskill.org/learn/step/2918",
    "checked": true,
    "mode": 1,
    "answerStr": "This name is not valid because it is a keyword."
  },
  {
    "url": "https://hyperskill.org/learn/step/3774",
    "checked": true,
    "mode": 1,
    "answerStr": "userHomeAddress"
  },
  {
    "url": "https://hyperskill.org/learn/step/2012",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "25 / 2",
      "24 / 2",
      "12 % 13"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3211",
    "checked": true,
    "mode": 4,
    "answerStr": "-1000"
  },
  {
    "url": "https://hyperskill.org/learn/step/3213",
    "checked": true,
    "mode": 4,
    "answerStr": "-4"
  },
  {
    "url": "https://hyperskill.org/learn/step/3218",
    "checked": true,
    "mode": 1,
    "answerStr": "19"
  },
  {
    "url": "https://hyperskill.org/learn/step/3219",
    "checked": true,
    "mode": 1,
    "answerStr": "14"
  },
  {
    "url": "https://hyperskill.org/learn/step/3220",
    "checked": true,
    "mode": 1,
    "answerStr": "34"
  },
  {
    "url": "https://hyperskill.org/learn/step/3410",
    "checked": true,
    "mode": 1,
    "answerStr": "()"
  },
  {
    "url": "https://hyperskill.org/learn/step/2013",
    "checked": true,
    "mode": 1,
    "answerStr": "4"
  },
  {
    "url": "https://hyperskill.org/learn/step/2209",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "a + b",
        "addition"
      ],
      [
        "a - b",
        "subtraction"
      ],
      [
        "a * b",
        "multiplication"
      ],
      [
        "a / b",
        "integer division"
      ],
      [
        "a % b",
        "remainder"
      ],
      [
        "-a",
        "unary minus (sign changing)"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2211",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int n \u003d scanner.nextInt();\n        System.out.println(((n + 1) * n + 2) * n + 3);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2212",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int n \u003d scanner.nextInt();\n        int k \u003d scanner.nextInt();\n        System.out.println(k / n);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2215",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        System.out.println(scanner.nextInt() / 10);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2216",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int n \u003d scanner.nextInt();\n        System.out.println((n / 100) + ((n % 100) / 10) + (n % 10));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2220",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int first \u003d scanner.nextInt();\n        int second \u003d scanner.nextInt();\n        int third \u003d scanner.nextInt();\n\n        System.out.println(((first + (first % 2)) / 2) \n                + ((second + (second % 2)) / 2) \n                + ((third + (third % 2)) / 2));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/5012",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int a \u003d scanner.nextInt();\n        int b \u003d scanner.nextInt();\n        int c \u003d scanner.nextInt();\n        int d \u003d scanner.nextInt();\n\n        System.out.println(a * b + c * 2 + (a - 1) * d);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2266",
    "checked": true,
    "mode": 1,
    "answerStr": "false, true"
  },
  {
    "url": "https://hyperskill.org/learn/step/2268",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "\u0026\u0026 is AND operator",
      "! is NOT operator",
      "|| is OR operator"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2663",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "b1 ^ b2",
      "b1 || b2"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2683",
    "checked": true,
    "mode": 5,
    "answerStr": "false"
  },
  {
    "url": "https://hyperskill.org/learn/step/2684",
    "checked": true,
    "mode": 5,
    "answerStr": "true"
  },
  {
    "url": "https://hyperskill.org/learn/step/2053",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "\u003e",
      "\u003c\u003d",
      "\u003d\u003d",
      "!\u003d"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2054",
    "checked": true,
    "mode": 1,
    "answerStr": "true"
  },
  {
    "url": "https://hyperskill.org/learn/step/2056",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "200",
      "-20",
      "1000"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2273",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int[] arr \u003d {scanner.nextInt(), scanner.nextInt(), scanner.nextInt()};\n        System.out.println(arr[0] \u003e\u003d arr[1] \u0026\u0026 arr[0] \u003c\u003d arr[2] || \n                           arr[0] \u003c\u003d arr[1] \u0026\u0026 arr[0] \u003e\u003d arr[2]);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2274",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int[] arr \u003d {scanner.nextInt() \u003e 0 ? 1 : 0,\n                scanner.nextInt() \u003e 0 ? 1 : 0,\n                scanner.nextInt() \u003e 0 ? 1 : 0};\n        System.out.println(arr[0] + arr[1] + arr[2] \u003d\u003d 1);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2676",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "John",
      "Alexander",
      "Mary"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3775",
    "checked": true,
    "mode": 1,
    "answerStr": "15 14 15"
  },
  {
    "url": "https://hyperskill.org/learn/step/1979",
    "checked": true,
    "mode": 1,
    "answerStr": "if (i \u003c j) { System.out.print(\"Hello!\"); }"
  },
  {
    "url": "https://hyperskill.org/learn/step/1982",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "The result of an expression in the condition always has the boolean type.",
      "The construction if ... else if ... else if ... is possible in Java."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2164",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int a \u003d scanner.nextInt();\n        int b \u003d scanner.nextInt();\n        int c \u003d scanner.nextInt();\n\n        System.out.println(a + b \u003e c \u0026\u0026 a + c \u003e b \u0026\u0026 b + c \u003e a ? \"YES\" : \"NO\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2165",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int n \u003d scanner.nextInt();\n        if (n \u003c\u003d 12 \u0026\u0026 n \u003e -15) {\n            System.out.println(\"True\");\n        } else if (n \u003e 14 \u0026\u0026 n \u003c 17) {\n            System.out.println(\"True\");\n        } else if (n \u003e\u003d 19) {\n            System.out.println(\"True\");\n        } else {\n            System.out.println(\"False\");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2167",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int num \u003d scanner.nextInt();\n        if (num % 4 \u003d\u003d 0 \u0026\u0026 num % 100 !\u003d 0 || num % 400 \u003d\u003d 0) {\n            System.out.println(\"Leap\");\n        } else {\n            System.out.println(\"Regular\");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3395",
    "checked": true,
    "mode": 1,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/15238",
    "checked": true,
    "mode": 1,
    "answerStr": "if (hasEnoughMoney)"
  },
  {
    "url": "https://hyperskill.org/learn/step/1981",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "long max \u003d first \u003e second ? first : second;",
      "long max \u003d first \u003c second ? second : first;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2666",
    "checked": true,
    "mode": 1,
    "answerStr": "It finds max of three numbers."
  },
  {
    "url": "https://hyperskill.org/learn/step/3268",
    "checked": true,
    "mode": 1,
    "answerStr": "int d \u003d a + b !\u003d c ? 10 : c;"
  },
  {
    "url": "https://hyperskill.org/learn/step/3269",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "int c \u003d a \u003c\u003d b ? a + b : a - b;",
      "int c \u003d a - b \u003e 0 ? a - b : a + b;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3271",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "If b1 is false, b2 is true, b3 is false it returns 20",
      "If b1 is true, b2 is false, b3 is false it returns 30"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3275",
    "checked": true,
    "mode": 1,
    "answerStr": "condition ? trueCase : elseCase;"
  },
  {
    "url": "https://hyperskill.org/learn/step/3276",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "x \u003c\u003d 10 ? x : y;",
      "x \u003c y ? x : y;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3412",
    "checked": true,
    "mode": 4,
    "answerStr": "35"
  },
  {
    "url": "https://hyperskill.org/learn/step/2015",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "++n;",
      "n \u003d n + 1;",
      "n++;",
      "n +\u003d 1;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5009",
    "checked": true,
    "mode": 1,
    "answerStr": "299"
  },
  {
    "url": "https://hyperskill.org/learn/step/5010",
    "checked": true,
    "mode": 1,
    "answerStr": "2"
  },
  {
    "url": "https://hyperskill.org/learn/step/5011",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        int a \u003d scanner.nextInt();\n        int b \u003d scanner.nextInt();\n        int c \u003d scanner.nextInt();\n        int d \u003d scanner.nextInt();\n                System.out.println(--a + \" \" + --b + \" \" + --c + \" \" + --d);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/6584",
    "checked": true,
    "mode": 4,
    "answerStr": "112"
  },
  {
    "url": "https://hyperskill.org/learn/step/23176",
    "checked": true,
    "mode": 1,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/2025",
    "checked": true,
    "mode": 1,
    "answerStr": "2 4 6 8 10"
  },
  {
    "url": "https://hyperskill.org/learn/step/2026",
    "checked": true,
    "mode": 1,
    "answerStr": "6 5 4 3"
  },
  {
    "url": "https://hyperskill.org/learn/step/2027",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "The do-while loop executes its body and then tests its condition.",
      "The while loop can be infinite.",
      "The while loop checks its condition and then executes its body."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2028",
    "checked": true,
    "mode": 1,
    "answerStr": "4"
  },
  {
    "url": "https://hyperskill.org/learn/step/2229",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        long num \u003d scanner.nextLong();\n\n        int count \u003d 1;\n        long res \u003d 1;\n\n        while (res \u003c\u003d num) {\n            res *\u003d count++;\n        }\n\n        System.out.println(count - 1);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2234",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int n \u003d scanner.nextInt();\n        System.out.print(n);\n        while(n !\u003d 1) {\n            if(n % 2 \u003d\u003d 0) {\n                n \u003d n / 2;\n                System.out.print(\" \" + n);\n            } else {\n                n \u003d n * 3 + 1;\n                System.out.print(\" \" + n);\n            }\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/1996",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "a",
      "b",
      "c",
      "d"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1997",
    "checked": true,
    "mode": 1,
    "answerStr": "99"
  },
  {
    "url": "https://hyperskill.org/learn/step/1998",
    "checked": true,
    "mode": 1,
    "answerStr": "(1) int accumulator \u003d 1; (3) accumulator *\u003d i;"
  },
  {
    "url": "https://hyperskill.org/learn/step/1999",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "The for loop can be nested inside another.",
      "The most common form of the loop has an initialization, a termination condition, a post-processing statement, and a body."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2187",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int a \u003d scanner.nextInt();\n        int b \u003d scanner.nextInt();\n        int res \u003d 0;\n        for (int i \u003d a; i \u003c\u003d b; i++) {\n            res +\u003d i;\n        }\n        System.out.println(res);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2189",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        int n \u003d scanner.nextInt();\n        int max_divisible_by_4 \u003d -1;\n        for (int i \u003d 0; i \u003c n; i++) {\n            int x \u003d scanner.nextInt();\n            if (x % 4 \u003d\u003d 0 \u0026\u0026 x \u003e max_divisible_by_4) {\n                max_divisible_by_4 \u003d x;\n            }\n        }\n        System.out.println(max_divisible_by_4);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2191",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        int a \u003d scanner.nextInt();\n        int b \u003d scanner.nextInt();\n                int count \u003d 0;\n        float result \u003d 0;\n\n        for (int i \u003d a; i \u003c\u003d b; i++) {\n            if (i % 3 \u003d\u003d 0) {\n                result +\u003d i;\n                count++;\n            }\n        }\n        System.out.println(result / count);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2192",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int many \u003d scanner.nextInt();\n        String s;\n        int a \u003d 0;\n        int b \u003d 0;\n        int c \u003d 0;\n        int d \u003d 0;\n\n        for(int i \u003d 0; i \u003c many; i++) {\n            s \u003d scanner.next();\n\n            if (\"A\".equals(s)) {\n                a++;\n            } else if (\"B\".equals(s)) {\n                b++;\n            } else if (\"C\".equals(s)) {\n                c++;\n            } else if (\"D\".equals(s)) {\n                d++;\n            }\n        }\n\n        System.out.println(d + \" \" + c + \" \" + b + \" \" + a);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2193",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int start \u003d scanner.nextInt();\n        int end \u003d scanner.nextInt();\n        for (int i \u003d start; i \u003c\u003d end; i++) {\n            if (i % 5 \u003d\u003d 0 \u0026\u0026 i % 3 \u003d\u003d 0) {\n                System.out.println(\"FizzBuzz\");\n            } else if (i % 5 \u003d\u003d 0) {\n                System.out.println(\"Buzz\");\n            } else if (i % 3 \u003d\u003d 0) {\n                System.out.println(\"Fizz\");\n            } else {\n                System.out.println(i);\n            }\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2194",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int larger \u003d 0;\n        int smaller \u003d 0;\n        int perfect \u003d 0;\n\n        int num \u003d scanner.nextInt();\n        for (int i \u003d 0; i \u003c num; i++) {\n            int n \u003d scanner.nextInt();\n            if (n \u003d\u003d 1) {\n                larger++;\n            } else if (n \u003d\u003d -1) {\n                smaller++;\n            } else {\n                perfect++;\n            }\n        }\n        System.out.printf(\"%d %d %d\", perfect, larger, smaller);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2742",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int a \u003d scanner.nextInt();\n        int b \u003d scanner.nextInt();\n        int n \u003d 1;\n\n        for (int i \u003d a; i \u003c b; i++) {\n            n *\u003d i;\n        }\n        System.out.println(n);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2154",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "a",
      "c"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2665",
    "checked": true,
    "mode": 1,
    "answerStr": "break"
  },
  {
    "url": "https://hyperskill.org/learn/step/2731",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n\n        final int limit \u003d 1000;\n        int sum \u003d 0;\n        int n \u003d scanner.nextInt();\n                while (n !\u003d 0) {\n            sum +\u003d n;\n            if (sum \u003e\u003d limit) {\n                sum -\u003d limit;\n                break;\n            }\n            n \u003d scanner.nextInt();\n        }\n        System.out.println(sum);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2733",
    "checked": true,
    "mode": 4,
    "answerStr": "15"
  },
  {
    "url": "https://hyperskill.org/learn/step/3393",
    "checked": true,
    "mode": 1,
    "answerStr": "continue"
  },
  {
    "url": "https://hyperskill.org/learn/step/2069",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "c",
      "d"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2297",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    private static void print(String s) {\n        System.out.println(\"You have chosen a \" + s);\n    }\n        public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int n \u003d scanner.nextInt();\n        switch (n) {\n            case 1: print(\"square\"); break;\n            case 2: print(\"circle\"); break;\n            case 3: print(\"triangle\"); break;\n            case 4: print(\"rhombus\"); break;\n            default: System.out.println(\"There is no such shape!\");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2299",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        long n1 \u003d scanner.nextLong();\n        String c \u003d scanner.next();\n        long n2 \u003d scanner.nextLong();\n\n        switch (c) {\n            case \"+\": System.out.println(n1 + n2);\n                break;\n            case \"-\": System.out.println(n1 - n2);\n                break;\n            case \"/\": \n                if (n2 \u003d\u003d 0) System.out.println(\"Division by 0!\");\n                else System.out.println(n1 / n2);\n                break;\n            case \"*\": System.out.println(n1 * n2);\n                break;\n            default: System.out.println(\"Unknown operator\");\n        }\n\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2300",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        String shape \u003d scanner.nextLine();\n        double a;\n        double b;\n        double c;\n        double r;\n\n        if (\"triangle\".equals(shape)) {\n            a \u003d scanner.nextDouble();\n            b \u003d scanner.nextDouble();\n            c \u003d scanner.nextDouble();\n            double pp \u003d (a + b + c) / 2.0;\n            System.out.println(Math.sqrt(pp * (pp - a) * (pp - b) * (pp - c)));\n        } else if (\"rectangle\".equals(shape)) {\n            a \u003d scanner.nextDouble();\n            b \u003d scanner.nextDouble();\n            System.out.println(a * b);\n        } else {\n            r \u003d scanner.nextDouble();\n            System.out.println(3.14 * (r * r));\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2737",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int n \u003d scanner.nextInt();\n        switch(n) {\n            case 1: System.out.println(\"Yes!\"); break;\n            case 2: System.out.println(\"No!\"); break;\n            case 3: System.out.println(\"No!\"); break;\n            case 4: System.out.println(\"No!\"); break;\n            default: System.out.println(\"Unknown number\");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2738",
    "checked": true,
    "mode": 4,
    "answerStr": "125"
  },
  {
    "url": "https://hyperskill.org/learn/step/3481",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n\n    private static void print(String s) {\n        System.out.println(s);\n    }\n        public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        String s \u003d scanner.nextLine();\n        switch (s) {\n            case \"gryffindor\": print(\"bravery\"); break;\n            case \"hufflepuff\": print(\"loyalty\"); break;\n            case \"slytherin\": print(\"cunning\"); break;\n            case \"ravenclaw\": print(\"intellect\"); break;\n            default: print(\"not a valid house\");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/6866",
    "checked": true,
    "mode": 1,
    "answerStr": "bit"
  },
  {
    "url": "https://hyperskill.org/learn/step/6867",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "1 means \"there is a signal\"",
      "0 means \"no signal\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6868",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "1 kilobyte",
        "1000 bytes"
      ],
      [
        "1 megabyte",
        "1000 kilobytes"
      ],
      [
        "1 gigabyte",
        "1000 megabytes"
      ],
      [
        "1 terabyte",
        "1000 gigabytes"
      ],
      [
        "1 petabyte",
        "1000 terabytes"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18317",
    "checked": true,
    "mode": 5,
    "answerStr": "32"
  },
  {
    "url": "https://hyperskill.org/learn/step/2016",
    "checked": true,
    "mode": 1,
    "answerStr": "-128 to 127"
  },
  {
    "url": "https://hyperskill.org/learn/step/2047",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "int is 32 bits",
      "char is 16 bits",
      "long is 64 bits",
      "byte is 8 bits"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2668",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "short",
      "long",
      "byte",
      "int"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2669",
    "checked": true,
    "mode": 5,
    "answerStr": "32 64"
  },
  {
    "url": "https://hyperskill.org/learn/step/2674",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "short: from -32768 to 32767",
      "byte: from -128 to 127"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3382",
    "checked": true,
    "mode": 1,
    "answerStr": "4"
  },
  {
    "url": "https://hyperskill.org/learn/step/3383",
    "checked": true,
    "mode": 1,
    "answerStr": "64"
  },
  {
    "url": "https://hyperskill.org/learn/step/12979",
    "checked": true,
    "mode": 5,
    "answerStr": "boolean"
  },
  {
    "url": "https://hyperskill.org/learn/step/2078",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "To make explicit typecasting we write the target type in round brackets like (type).",
      "An implicit typecasting is performed by compiler automatically."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2080",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "int -\u003e long",
      "long -\u003e float",
      "char -\u003e int"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2081",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "long",
      "float",
      "double"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2310",
    "checked": true,
    "mode": 7,
    "answerArr": [
      "byte",
      "short",
      "int",
      "long",
      "float",
      "double"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2698",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "2",
      "3"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2701",
    "checked": true,
    "mode": 1,
    "answerStr": "double"
  },
  {
    "url": "https://hyperskill.org/learn/step/3389",
    "checked": true,
    "mode": 1,
    "answerStr": "The destination type has a larger range than the source type"
  },
  {
    "url": "https://hyperskill.org/learn/step/3390",
    "checked": true,
    "mode": 1,
    "answerStr": "double"
  },
  {
    "url": "https://hyperskill.org/learn/step/5803",
    "checked": true,
    "mode": 1,
    "answerStr": "(int) number;"
  },
  {
    "url": "https://hyperskill.org/learn/step/10974",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "printSum(123, 13);",
      "printSum(123L, 13);"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10975",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "findUser",
      "readLine"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10977",
    "checked": true,
    "mode": 5,
    "answerStr": "findNemo()"
  },
  {
    "url": "https://hyperskill.org/learn/step/10978",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "It is a built-in method",
      "This method calculates the absolute value of a double value",
      "It belongs to the Math library"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10979",
    "checked": true,
    "mode": 5,
    "answerStr": "Math.pow(a,b)"
  },
  {
    "url": "https://hyperskill.org/learn/step/10980",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        // call the method here\n        callMeAwesome();\n    }\n\n    // Do not change code below\n    public static void callMeAwesome() {\n        Scanner scanner \u003d new Scanner(System.in);\n        String name \u003d scanner.next();\n        System.out.println(name + \", you\u0027re awesome!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/10981",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        // call the method here\n        Scanner sc \u003d new Scanner(System.in);\n        int b \u003d sc.nextInt();\n        int h \u003d sc.nextInt();\n                countAreaOfParallelogram(b, h);\n    }\n\n    // Do not change code below   \n    public static void countAreaOfParallelogram(int b, int h) {\n        System.out.println(b * h);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/10984",
    "checked": true,
    "mode": 1,
    "answerStr": "abs(int)"
  },
  {
    "url": "https://hyperskill.org/learn/step/10985",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "gcd(1, 1) is 1",
      "gcd(4, 6) is 2",
      "gcd(3, 6) is 3"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10989",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    public static boolean isVowel(char ch) {\n        // write your code here\n        char[] chars \u003d {\u0027A\u0027, \u0027E\u0027, \u0027I\u0027, \u0027O\u0027, \u0027U\u0027};\n        for (char c : chars) {\n            if (Character.toUpperCase(ch) \u003d\u003d c) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        char letter \u003d scanner.nextLine().charAt(0);\n        System.out.println(isVowel(letter) ? \"YES\" : \"NO\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/10993",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    public static long power(int n, int m) {\n        // write your code here\n        return (long) Math.pow(n, m);\n    }\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        final Scanner scanner \u003d new Scanner(System.in);\n        final int n \u003d scanner.nextInt();\n        final int m \u003d scanner.nextInt();\n        System.out.println(power(n, m));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/10995",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    public static int sign(int number) {\n        // write your code here\n        if (number \u003e 0) {\n            return 1;\n        } else if (number \u003c 0) {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        final Scanner scanner \u003d new Scanner(System.in);\n        final int n \u003d scanner.nextInt();\n        System.out.println(sign(n));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2070",
    "checked": true,
    "mode": 1,
    "answerStr": "No, it is impossible."
  },
  {
    "url": "https://hyperskill.org/learn/step/2301",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "The method always returns nothing (void).",
      "The method has an argument.",
      "The method must be static."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2304",
    "checked": true,
    "mode": 1,
    "answerStr": "The code will compile but throw an error during runtime"
  },
  {
    "url": "https://hyperskill.org/learn/step/2505",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        System.out.println(\"We are robots!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2507",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello, Java!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2508",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "b",
      "c",
      "e"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4336",
    "checked": true,
    "mode": 3,
    "answerStr": "class Main {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello, Java!\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/10571",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "Separate parts of code are easier to test.",
      "The code looks more readable.",
      "The code is easier to reuse."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10572",
    "checked": true,
    "mode": 1,
    "answerStr": "Create a number of separate methods to execute individual tasks"
  },
  {
    "url": "https://hyperskill.org/learn/step/10574",
    "checked": true,
    "mode": 1,
    "answerStr": "methods"
  },
  {
    "url": "https://hyperskill.org/learn/step/10575",
    "checked": true,
    "mode": 1,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/10576",
    "checked": true,
    "mode": 3,
    "answerStr": "class SimpleCalculator {\n    // Implement your methods here\n    public static void subtractTwoNumbers(long a, long b) {\n        System.out.println(a - b);\n    }\n    public static void sumTwoNumbers(long a, long b) {\n        System.out.println(a + b);\n    }\n    public static void divideTwoNumbers(long a, long b) {\n        System.out.println(a \u003d\u003d 0 || b \u003d\u003d 0 ? \"Division by 0!\" : a / b);\n    }\n    public static void multiplyTwoNumbers(long a, long b) {\n        System.out.println(a * b);\n    }\n    // Implemented method\n    public static void power(long n, long p) {\n        long number \u003d n;\n        long power \u003d p;\n        long result \u003d 1;\n        while (power \u003e 0) {\n            if (power % 2 !\u003d 0) {\n                result *\u003d number;\n            }\n            power /\u003d 2;\n            number *\u003d number;\n        }\n        System.out.println(result);\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        java.util.Scanner scanner \u003d new java.util.Scanner(System.in);\n        long num1 \u003d scanner.nextLong();\n        String operator \u003d scanner.next();\n        long num2 \u003d scanner.nextLong();\n        switch (operator) {\n            case \"^\":\n                SimpleCalculator.power(num1, num2);\n                break;\n            case \"+\":\n                SimpleCalculator.sumTwoNumbers(num1, num2);\n                break;\n            case \"-\":\n                SimpleCalculator.subtractTwoNumbers(num1, num2);\n                break;\n            case \"/\":\n                SimpleCalculator.divideTwoNumbers(num1, num2);\n                break;\n            case \"*\":\n                SimpleCalculator.multiplyTwoNumbers(num1, num2);\n                break;\n            default:\n                break;\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/10577",
    "checked": true,
    "mode": 3,
    "answerStr": "// Don\u0027t delete scanner import\nimport java.util.Scanner;\n\nclass Name {\n\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n\n    // use this program as a source of inspiration for your method\n\n        String firstName1 \u003d scanner.next();\n        String lastName1 \u003d scanner.next();\n        System.out.println(createFullName(firstName1, lastName1));\n\n        String firstName2 \u003d scanner.next();\n        String lastName2 \u003d scanner.next();\n        System.out.println(createFullName(firstName2, lastName2));\n\n        String firstName3 \u003d scanner.next();\n        String lastName3 \u003d scanner.next();\n        System.out.println(createFullName(firstName3, lastName3));\n\n    }\n\n    //implement your method here\n    public static String createFullName(String firstName, String lastName) {\n        return firstName + \" \" + lastName;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/10578",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass MultipleFunction {\n\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        double x \u003d scanner.nextDouble();\n        System.out.println(f(x));\n    }\n\n    public static double f(double x) {\n        //call your implemented methods here.   \n        if (x \u003c\u003d 0) {\n            return f1(x);\n        } else if (0 \u003c x \u0026\u0026 x \u003c 1) {\n            return f2(x);\n        }\n        return f3(x); \n    }\n\n    //implement your methods here\n    public static double f1(double x) {\n        return x * x + 1;\n    }\n\n    public static double f2(double x) {\n        return 1 / (x * x);\n    }\n\n    public static double f3(double x) {\n        return x * x - 1;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2246",
    "checked": true,
    "mode": 1,
    "answerStr": "the same name, the same return type but different type of arguments."
  },
  {
    "url": "https://hyperskill.org/learn/step/2247",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void print(String strArg) {\n        System.out.println(\"print(\\\"\" + strArg + \"\\\")\");\n    }\n\n    public static void print(String strArg, int valArg) {\n        System.out.println(\"print(\\\"\" + strArg + \"\\\", \" + valArg + \")\");\n    }\n\n    // write your method here\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        String str \u003d scanner.nextLine();\n        int val \u003d scanner.nextInt();\n        print(str);\n        print(str, val);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2248",
    "checked": true,
    "mode": 8,
    "matrixList": [
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": true
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2749",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "public static void method1() { /* do something */ }",
      "public static void method1(int a, double b) { /* do something */ }"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2751",
    "checked": true,
    "mode": 5,
    "answerStr": "float"
  },
  {
    "url": "https://hyperskill.org/learn/step/3449",
    "checked": true,
    "mode": 1,
    "answerStr": "several methods have the same name but different number or type of parameters"
  },
  {
    "url": "https://hyperskill.org/learn/step/3451",
    "checked": true,
    "mode": 1,
    "answerStr": "void print(String a) { System.out.println(a); }"
  },
  {
    "url": "https://hyperskill.org/learn/step/2260",
    "checked": true,
    "mode": 1,
    "answerStr": "the address of data"
  },
  {
    "url": "https://hyperskill.org/learn/step/2263",
    "checked": true,
    "mode": 1,
    "answerStr": "null"
  },
  {
    "url": "https://hyperskill.org/learn/step/5036",
    "checked": true,
    "mode": 1,
    "answerStr": "an address in memory where the data is located"
  },
  {
    "url": "https://hyperskill.org/learn/step/16579",
    "checked": true,
    "mode": 3,
    "answerStr": "public class Main {\n    public static void main(String[] args) {\n        // put your code here\n        int a \u003d 1996;\n        System.out.print(a);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/16580",
    "checked": true,
    "mode": 3,
    "answerStr": "public class Main {\n    public static void main(String[] args) {\n        // put your code here\n        String str \u003d \"Hello, learner!\";\n        System.out.println(str);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/16581",
    "checked": true,
    "mode": 5,
    "answerStr": "new"
  },
  {
    "url": "https://hyperskill.org/learn/step/2036",
    "checked": true,
    "mode": 1,
    "answerStr": "public static int sumAll(int... nums)"
  },
  {
    "url": "https://hyperskill.org/learn/step/2748",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "It\u0027s possible to pass an array to a vararg parameter.",
      "A method can have a parameter of the boolean[] type (the array of booleans)."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2755",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "method(new int[] { 1, 2, 3 }, new int[] { 4, 5, 6 });",
      "method(new int[] { 1, 2, 3 }, 4, 5);",
      "method(new int[] { 1, 2, 3 });"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2756",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "method(0);",
        "1"
      ],
      [
        "method(1, 2, 3);",
        "3"
      ],
      [
        "method(new int[] { 1, 2 });",
        "2"
      ],
      [
        "method();",
        "0"
      ],
      [
        "method(null);",
        "The method throws an exception."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2757",
    "checked": true,
    "mode": 1,
    "answerStr": "[4, 5, 6]"
  },
  {
    "url": "https://hyperskill.org/learn/step/2758",
    "checked": true,
    "mode": 1,
    "answerStr": "[1, 2, 3]"
  },
  {
    "url": "https://hyperskill.org/learn/step/2759",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.*;\n\npublic class Main {\n\n    // write a method here\n    public static void addValueByIndex(long[] array, int index, Long value) {\n        array[index] +\u003d value;\n    }\n\n\n    // don\u0027t change the code below\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        long[] array \u003d Arrays.stream(scanner.nextLine().split(\" \"))\n                .mapToLong(Long::parseLong)\n                .toArray();\n        int index \u003d scanner.nextInt();\n        long value \u003d scanner.nextLong();\n        addValueByIndex(array, index, value);\n        Arrays.stream(array).forEach(e -\u003e System.out.print(e + \" \"));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2761",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "method(new double[] { 1.02, 1.03, 1.04 });",
      "method(new double[] {});"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2954",
    "checked": true,
    "mode": 3,
    "answerStr": "class Application {\n\n    void run(String[] args) {\n        // implement me\n        for(String s : args) {\n            System.out.println(s);\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2155",
    "checked": true,
    "mode": 1,
    "answerStr": "A"
  },
  {
    "url": "https://hyperskill.org/learn/step/2690",
    "checked": true,
    "mode": 1,
    "answerStr": "\u0027\\uffff\u0027"
  },
  {
    "url": "https://hyperskill.org/learn/step/2692",
    "checked": true,
    "mode": 1,
    "answerStr": "d"
  },
  {
    "url": "https://hyperskill.org/learn/step/3386",
    "checked": true,
    "mode": 1,
    "answerStr": "Unicode (UTF-16)"
  },
  {
    "url": "https://hyperskill.org/learn/step/5021",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "\u0027\\n\u0027",
        "new line character"
      ],
      [
        "\u0027\\t\u0027",
        "tab character"
      ],
      [
        "\u0027 \u0027",
        "space character"
      ],
      [
        "\u0027\\\\\u0027",
        "backslash character"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2061",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "A string is a sequence of characters.",
      "Strings are immutable.",
      "Two strings can be concatenated using the operation +."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2063",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "str.charAt(n) returns a character that has the index n.",
      "str.substring(0, 5) returns a substring from 0 to 4 indexes (inclusive) of the string."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2718",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        String s \u003d scanner.nextLine();\n\n        System.out.println(s.endsWith(\"burg\"));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2719",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        String str \u003d scanner.next();\n        String res \u003d \"\";\n        for(int i \u003d 0; i \u003c str.length(); i++) {\n            if(str.charAt(i) \u003d\u003d \u0027a\u0027) {\n                res +\u003d \u0027b\u0027;\n            } else {\n                res +\u003d str.charAt(i);\n            }\n        }\n        System.out.println(res);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2720",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "\"555\" + 123",
      "\"11\"",
      "\"ab\" + \"cd\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2721",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        System.out.println(scanner.nextLine().replace(\" \", \"\").equals(scanner.nextLine().replace(\" \", \"\")));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3414",
    "checked": true,
    "mode": 1,
    "answerStr": "charAt(...)"
  },
  {
    "url": "https://hyperskill.org/learn/step/3418",
    "checked": true,
    "mode": 1,
    "answerStr": "(1) equals( ) method, (2) \u003d\u003d operator"
  },
  {
    "url": "https://hyperskill.org/learn/step/7428",
    "checked": true,
    "mode": 1,
    "answerStr": "To declare it with the final keyword."
  },
  {
    "url": "https://hyperskill.org/learn/step/7429",
    "checked": true,
    "mode": 1,
    "answerStr": "exactly one"
  },
  {
    "url": "https://hyperskill.org/learn/step/7430",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "System.out.println(COUNT_OF_APPLES);",
      "COUNT_OF_APPLES \u003d 40;\nCOUNT_OF_APPLES +\u003d 10;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7431",
    "checked": true,
    "mode": 1,
    "answerStr": "The final keyword makes a constant reference, but does not prohibit changing the internal state of the object."
  },
  {
    "url": "https://hyperskill.org/learn/step/7433",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "MSG",
      "hello"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/12977",
    "checked": true,
    "mode": 5,
    "answerStr": "2000"
  },
  {
    "url": "https://hyperskill.org/learn/step/2489",
    "checked": true,
    "mode": 5,
    "answerStr": "jvm"
  },
  {
    "url": "https://hyperskill.org/learn/step/2493",
    "checked": true,
    "mode": 1,
    "answerStr": "Programs are executed on the Java Virtual Machine to reach platform independence."
  },
  {
    "url": "https://hyperskill.org/learn/step/2494",
    "checked": true,
    "mode": 1,
    "answerStr": "Bytecode"
  },
  {
    "url": "https://hyperskill.org/learn/step/10045",
    "checked": true,
    "mode": 1,
    "answerStr": "Compiler"
  },
  {
    "url": "https://hyperskill.org/learn/step/10830",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "Add a new program to this system",
      "Create a new app for a JVM machine"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3478",
    "checked": true,
    "mode": 8,
    "matrixList": [
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": true
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3476",
    "checked": true,
    "mode": 1,
    "answerStr": "If your program compiles successfully, there are no guarantees that it does not have run-time errors."
  },
  {
    "url": "https://hyperskill.org/learn/step/3477",
    "checked": true,
    "mode": 1,
    "answerStr": "An incorrectly written keyword is a compile-time error."
  },
  {
    "url": "https://hyperskill.org/learn/step/3750",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n\n        String a \u003d scanner.next(); \n        String b \u003d scanner.next();\n        String c \u003d scanner.next();\n\n        String result \u003d a + b + c;\n\n        System.out.println(result);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3751",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n\n        String line1 \u003d scanner.nextLine();\n        String line2 \u003d scanner.nextLine();\n                System.out.println(line2);\n        System.out.println(line1);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3753",
    "checked": true,
    "mode": 1,
    "answerStr": "Debugging can help to find run-time errors."
  },
  {
    "url": "https://hyperskill.org/learn/step/12472",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        int age \u003d scanner.nextInt();        \n     System.out.printf(\"My age is %d\", age);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2958",
    "checked": true,
    "mode": 1,
    "answerStr": "fields (or attributes)"
  },
  {
    "url": "https://hyperskill.org/learn/step/2959",
    "checked": true,
    "mode": 1,
    "answerStr": "methods"
  },
  {
    "url": "https://hyperskill.org/learn/step/2960",
    "checked": true,
    "mode": 1,
    "answerStr": "object"
  },
  {
    "url": "https://hyperskill.org/learn/step/2964",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "Class",
        "Type of an object"
      ],
      [
        "Field",
        "State of an object"
      ],
      [
        "Method",
        "Behavior of an object"
      ],
      [
        "Object",
        "An individual instance of a class"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2965",
    "checked": true,
    "mode": 1,
    "answerStr": "interacting objects"
  },
  {
    "url": "https://hyperskill.org/learn/step/2966",
    "checked": true,
    "mode": 1,
    "answerStr": "The state of an object is represented by its methods."
  },
  {
    "url": "https://hyperskill.org/learn/step/2968",
    "checked": true,
    "mode": 1,
    "answerStr": "Inheritance is about naming the variables in the one traditional way."
  },
  {
    "url": "https://hyperskill.org/learn/step/1974",
    "checked": true,
    "mode": 1,
    "answerStr": "class"
  },
  {
    "url": "https://hyperskill.org/learn/step/1975",
    "checked": true,
    "mode": 1,
    "answerStr": "new"
  },
  {
    "url": "https://hyperskill.org/learn/step/2939",
    "checked": true,
    "mode": 3,
    "answerStr": "// write a class here\n\nclass Point2D {\n    float x;\n    float y;\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2944",
    "checked": true,
    "mode": 3,
    "answerStr": "// write your class here\n class Time {\n     int hours, minutes, seconds;\n }"
  },
  {
    "url": "https://hyperskill.org/learn/step/2946",
    "checked": true,
    "mode": 3,
    "answerStr": "// write your class here\n\nclass Box {\n    double length, height, width;\n    Box innerBox;\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2947",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "boolean",
      "MyClass",
      "int",
      "String"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2949",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "The following statement creates an object of the class: Point3D p \u003d new Point3D();",
      "The class has three fields of the same type."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1983",
    "checked": true,
    "mode": 1,
    "answerStr": "default no-arg constructor"
  },
  {
    "url": "https://hyperskill.org/learn/step/1985",
    "checked": true,
    "mode": 1,
    "answerStr": "Constructor"
  },
  {
    "url": "https://hyperskill.org/learn/step/2158",
    "checked": true,
    "mode": 1,
    "answerStr": "constructor"
  },
  {
    "url": "https://hyperskill.org/learn/step/2160",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Optional;\n\npublic class Main {\n\n\n    public static void main(String[] args) {\n\n        // create an instance of Account here\n        User owner \u003d new User(\"demo-user\", \"Alexander\", \"Schmidt\");\n        Account account \u003d new Account(\"123456\", 1000, owner);\n        // pass it into process method\n        process(account);\n    }\n\n    static class Account {\n\n        private String code;\n        private long balance;\n        private User owner;\n\n        public Account(String code, long balance, User owner) {\n            this.code \u003d code;\n            this.balance \u003d balance;\n            this.owner \u003d owner;\n        }\n\n        public String getCode() {\n            return code;\n        }\n\n        public long getBalance() {\n            return balance;\n        }\n\n        public User getOwner() {\n            return owner;\n        }\n    }\n\n    static class User {\n\n        private String login;\n        private String firstName;\n        private String lastName;\n\n        public User(String login, String firstName, String lastName) {\n            this.login \u003d login;\n            this.firstName \u003d firstName;\n            this.lastName \u003d lastName;\n        }\n\n        public String getLogin() {\n            return login;\n        }\n\n        public String getFirstName() {\n            return firstName;\n        }\n\n        public String getLastName() {\n            return lastName;\n        }\n    }\n\n\n    public static void process(Account account) {\n        try {\n            final Optional\u003cUser\u003e owner \u003d Optional.ofNullable(account.getOwner());\n\n            System.out.println(account.getCode());\n            System.out.println(account.getBalance());\n\n            owner.ifPresent(o -\u003e {\n                System.out.println(o.getLogin());\n                System.out.println(o.getFirstName());\n                System.out.println(o.getLastName());\n            });\n\n        } catch (Exception e) {\n            System.out.println(\"Something wrong...\");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2171",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "Constructor must not have an explicit return type.",
      "Constructors can be considered as special types of methods.",
      "Constructor name must be the same as its class name."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2173",
    "checked": true,
    "mode": 1,
    "answerStr": "SomeClass instance \u003d new SomeClass();"
  },
  {
    "url": "https://hyperskill.org/learn/step/2983",
    "checked": true,
    "mode": 3,
    "answerStr": "// write your class here\nclass User {\n    String login, firstName, lastName;\n\n    public User(String login, String firstName, String lastName) {\n        this.login \u003d login;\n        this.firstName \u003d firstName;\n        this.lastName \u003d lastName;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2986",
    "checked": true,
    "mode": 3,
    "answerStr": "// write the class Complex here\n\nclass Complex {\n    double real;\n    double imaginary;\n\n    public Complex(double real, double imaginary) {\n        this.real \u003d real;\n        this.imaginary \u003d imaginary;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2956",
    "checked": true,
    "mode": 1,
    "answerStr": "(1, 4)"
  },
  {
    "url": "https://hyperskill.org/learn/step/2950",
    "checked": true,
    "mode": 3,
    "answerStr": "class Patient {\n\n    String name;\n\n    // write your method here\n    void say() {\n        System.out.printf(\"Hello, my name is %s, I need a doctor.\", this.name);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2951",
    "checked": true,
    "mode": 3,
    "answerStr": "class Box {\n\n    double height;\n    double width;\n    double length;\n\n    // write a method here\n    public double getVolume() {\n        return height * width * length;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2952",
    "checked": true,
    "mode": 3,
    "answerStr": "class Complex {\n\n    double real;\n    double image;\n\n    // write methods here\n\n    public void add(Complex num) {\n        this.real \u003d this.real + num.real;\n        this.image \u003d this.image + num.image;\n    }\n\n    public void subtract(Complex num) {\n        this.real \u003d this.real - num.real;\n        this.image \u003d this.image - num.image;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2955",
    "checked": true,
    "mode": 3,
    "answerStr": "class Circle {\n\n    double radius;\n\n    // write methods here\n\n    public double getLength() {\n        return 2 * Math.PI * radius;\n    }\n\n    public double getArea() {\n        return Math.PI * (radius * radius);\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2957",
    "checked": true,
    "mode": 1,
    "answerStr": "public void method() { }"
  },
  {
    "url": "https://hyperskill.org/learn/step/2988",
    "checked": true,
    "mode": 3,
    "answerStr": "class Car {\n\n    int yearModel;\n    String make;\n    int speed;\n\n    public void accelerate() {\n        speed +\u003d 5;\n    }\n\n    public void brake() {\n        speed -\u003d 5;\n        if (speed \u003c 0) {\n            speed \u003d 0;\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2989",
    "checked": true,
    "mode": 3,
    "answerStr": "class Clock {\n\n    int hours \u003d 12;\n    int minutes \u003d 0;\n\n    void next() {\n        // implement me\n        minutes++;\n        if (minutes \u003e 59) {\n            hours++;\n            minutes \u003d 0;\n            if (hours \u003e 12) {\n                hours \u003d 1;\n            }\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3279",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "A class can have multiple instance methods.",
      "An instance method can access values of the fields.",
      "Calling the same instance method for different objects of a class can produce different result."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3778",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "Instance methods don\u0027t have the keyword static in their declaration."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3779",
    "checked": true,
    "mode": 1,
    "answerStr": "write the object name, dot and then the name of a method"
  },
  {
    "url": "https://hyperskill.org/learn/step/2123",
    "checked": true,
    "mode": 8,
    "matrixList": [
      {
        "check": true
      },
      {
        "check": false
      },
      {
        "check": false
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      },
      {
        "check": true
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2126",
    "checked": true,
    "mode": 1,
    "answerStr": "use special methods for accessing fields — getters"
  },
  {
    "url": "https://hyperskill.org/learn/step/2977",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "public",
      "private",
      "protected"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2979",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "1",
      "2"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2981",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "You can\u0027t create instances of MyClass using the keyword new inside classes that belong to other packages.",
      "You can create instances of MyClass using the keyword new inside the method2"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2982",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "package",
      "class (regular, not inner/nested)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3423",
    "checked": true,
    "mode": 1,
    "answerStr": "Do not write an access modifier"
  },
  {
    "url": "https://hyperskill.org/learn/step/3019",
    "checked": true,
    "mode": 1,
    "answerStr": "setAge"
  },
  {
    "url": "https://hyperskill.org/learn/step/3020",
    "checked": true,
    "mode": 1,
    "answerStr": "getTitle"
  },
  {
    "url": "https://hyperskill.org/learn/step/3021",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "isCompleted",
      "setCompleted"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3022",
    "checked": true,
    "mode": 3,
    "answerStr": "class Complex {\n\n    private double real;\n    private double imaginary;\n\n    public double getReal() {\n        return this.real;\n    }\n\n    public void setReal(double real) {\n        this.real \u003d real;\n    }\n\n    public double getImaginary() {\n        return this.imaginary;\n    }\n\n    public void setImaginary(double imaginary) {\n        this.imaginary \u003d imaginary;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3023",
    "checked": true,
    "mode": 3,
    "answerStr": "class Account {\n\n    private long balance;\n    private String ownerName;\n    private boolean locked;\n\n    public long getBalance() {\n        return balance;\n    }\n\n    public String getOwnerName() {\n        return ownerName;\n    }\n\n    public boolean isLocked() {\n        return locked;\n    }\n\n    public void setBalance(long balance) {\n        this.balance \u003d balance;\n    }\n\n    public void setOwnerName(String ownerName) {\n        this.ownerName \u003d ownerName;\n    }\n\n    public void setLocked(boolean locked) {\n        this.locked \u003d locked;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3024",
    "checked": true,
    "mode": 3,
    "answerStr": "class Book {\n\n    private String title;\n    private int yearOfPublishing;\n    private String[] authors;   \n\n    public String getTitle() {\n        return title;\n    }\n\n    public int getYearOfPublishing() {\n        return yearOfPublishing;\n    }\n\n    public String[] getAuthors() {\n        return authors;\n    }\n\n    public void setTitle (String title) {\n        this.title \u003d title;\n    }\n\n    public void setYearOfPublishing (int yearOfPublishing) {\n        this.yearOfPublishing \u003d yearOfPublishing;\n    }\n\n    public void setAuthors (String[] authors) {\n        this.authors \u003d authors;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/8261",
    "checked": true,
    "mode": 3,
    "answerStr": "class User {\n    private String firstName;\n    private String lastName;\n\n    public User() {\n        this.firstName \u003d \"\";\n        this.lastName \u003d \"\";\n    }\n\n    public void setFirstName(String firstName) {\n        if (firstName !\u003d null) {\n            this.firstName \u003d firstName;\n        } else {\n            this.firstName \u003d \"\";\n        }\n    }\n\n    public void setLastName(String lastName) {\n        if (lastName !\u003d null) {\n            this.lastName \u003d lastName;\n        } else {\n            this.lastName \u003d \"\";\n        }\n    }\n\n    public String getFullName() {\n        if (!firstName.equals(\"\") \u0026\u0026 !lastName.equals(\"\")) {\n            return firstName + \" \" + lastName;\n        } else if (firstName.equals(\"\") \u0026\u0026 !lastName.equals(\"\")) {\n            return lastName;\n        } else if (!firstName.equals(\"\")) {\n            return firstName;\n        }\n        return \"Unknown\";\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2205",
    "checked": true,
    "mode": 5,
    "answerStr": "final"
  },
  {
    "url": "https://hyperskill.org/learn/step/3046",
    "checked": true,
    "mode": 1,
    "answerStr": "c"
  },
  {
    "url": "https://hyperskill.org/learn/step/3047",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "speedUp(int increment)",
      "cadence",
      "getSpeed()"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3048",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "getBirthDate()",
      "getName()",
      "name"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3424",
    "checked": true,
    "mode": 5,
    "answerStr": "extends"
  },
  {
    "url": "https://hyperskill.org/learn/step/8309",
    "checked": true,
    "mode": 3,
    "answerStr": "class Person {\n\n}\n\nclass Employee extends Person {\n\n}\n\nclass Doctor extends Employee {\n\n}\n\nclass Patient extends Person {\n\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/6693",
    "checked": true,
    "mode": 6,
    "answerListArr": [
      [
        "protected",
        "package classes and descendants"
      ],
      [
        "default",
        "only classes from the same package"
      ],
      [
        "public",
        "any class, anywhere"
      ],
      [
        "private",
        "only the class itself"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6694",
    "checked": true,
    "mode": 1,
    "answerStr": "the most restrictive available modifier"
  },
  {
    "url": "https://hyperskill.org/learn/step/6697",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "bird.fly();",
      "cat.motherChild();"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6698",
    "checked": true,
    "mode": 5,
    "answerStr": "1221"
  },
  {
    "url": "https://hyperskill.org/learn/step/6700",
    "checked": true,
    "mode": 1,
    "answerStr": "There\u0027s no access to the protected constructor from another package."
  },
  {
    "url": "https://hyperskill.org/learn/step/12801",
    "checked": true,
    "mode": 5,
    "answerStr": "compile error"
  },
  {
    "url": "https://hyperskill.org/learn/step/3052",
    "checked": true,
    "mode": 1,
    "answerStr": "A superclass variable can refer to any subclass object derived from it."
  },
  {
    "url": "https://hyperskill.org/learn/step/3053",
    "checked": true,
    "mode": 1,
    "answerStr": "If class A is a superclass of class B and B is a superclass of class C then, a variable of class A can reference any object of class B and class C."
  },
  {
    "url": "https://hyperskill.org/learn/step/3056",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "3",
      "5"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3057",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "cat.getColor();",
      "cat.setColor(\"Gray\");"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1986",
    "checked": true,
    "mode": 1,
    "answerStr": "2"
  },
  {
    "url": "https://hyperskill.org/learn/step/2172",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "SomeClass instance \u003d new SomeClass(2);",
      "SomeClass instance \u003d new SomeClass(2, 3);"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3005",
    "checked": true,
    "mode": 3,
    "answerStr": "class Time {\n\n    int hours;\n    int minutes;\n    int seconds;\n\n    Time(int hours) {\n        this.hours \u003d hours;\n    }\n\n    Time(int hours, int minutes) {\n        this.hours \u003d hours;\n        this.minutes \u003d minutes;\n    }\n\n    Time(int hours, int minutes, int seconds) {\n        this.hours \u003d hours;\n        this.minutes \u003d minutes;\n        this.seconds \u003d seconds;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3007",
    "checked": true,
    "mode": 3,
    "answerStr": "class Phone {\n\n    String ownerName;\n    String countryCode;\n    String cityCode;\n    String number;\n\n    public Phone(String ownerName, String number) {\n        this.ownerName \u003d ownerName;\n        this.number \u003d number;\n    }\n\n    public Phone(String ownerName, String countryCode, String cityCode, String number) {\n        this.ownerName \u003d ownerName;\n        this.countryCode \u003d countryCode;\n        this.cityCode \u003d cityCode;\n        this.number \u003d number;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3285",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "The keyword this with parenthesis allows programmers to invoke a constructor from another one.",
      "It\u0027s possible to define as many constructors as needed."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3286",
    "checked": true,
    "mode": 1,
    "answerStr": "It must be the first statement in the body of the second constructor."
  },
  {
    "url": "https://hyperskill.org/learn/step/2009",
    "checked": true,
    "mode": 1,
    "answerStr": "super as the first statement"
  },
  {
    "url": "https://hyperskill.org/learn/step/2204",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "to invoke methods of the base class",
      "to access fields of the base class",
      "to invoke constructors of the base class"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3044",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "We can invoke a parameterized constructor of the superclass using super(...) in a constructor of a subclass.",
      "The default constructor of a subclass automatically calls the no-argument constructor of the superclass."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3041",
    "checked": true,
    "mode": 3,
    "answerStr": "class Employee {\n\n    protected String name;\n    protected String birthDate;\n\n    public Employee(String name, String birthDate) {\n        this.name \u003d name;\n        this.birthDate \u003d birthDate;\n    }\n}\n\nclass RegularEmployee extends Employee {\n\n    protected long salary;\n    protected String hireDate;\n\n    public RegularEmployee(String name, String birthDate, long salary, String hireDate) {\n        super(name, birthDate);\n        this.salary \u003d salary;\n        this.hireDate \u003d hireDate;\n    }\n}\n\nclass ContractEmployee extends Employee {\n\n    protected long payPerHour;\n    protected String contractPeriod;\n\n    public ContractEmployee(String name, String birthDate, long payPerHour, String contractPeriod) {\n        super(name, birthDate);\n        this.payPerHour \u003d payPerHour;\n        this.contractPeriod \u003d contractPeriod;\n            }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3042",
    "checked": true,
    "mode": 3,
    "answerStr": "class BankAccount {\n\n    protected String number;\n    protected Long balance;\n\n    public BankAccount(String number, Long balance) {\n        this.number \u003d number;\n        this.balance \u003d balance;\n    }\n}\n\nclass CheckingAccount extends BankAccount{\n    double fee;\n\n    public CheckingAccount(String number, Long balance, double fee) {\n        super(number, balance);\n        this.fee \u003d fee;\n    }\n}\n\nclass SavingsAccount extends BankAccount{\n    double interestRate;\n\n    public SavingsAccount(String number, Long balance, double interestRate) {\n        super(number, balance);\n        this.interestRate \u003d interestRate;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3448",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "3",
      "4"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2050",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "String",
      "int[]"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3413",
    "checked": true,
    "mode": 1,
    "answerStr": "."
  },
  {
    "url": "https://hyperskill.org/learn/step/3659",
    "checked": true,
    "mode": 3,
    "answerStr": "class Army {\n\n    public static void createArmy() {\n        // Create all objects here\n        for (int i \u003d 0; i \u003c 5; i++) {\n            Unit unit \u003d new Unit(\"1\");\n        }\n\n        for (int i \u003d 0; i \u003c 3; i++) {\n            Knight unit \u003d new Knight(\"1\");\n        }\n\n        General general \u003d new General(\"1\");\n        Doctor doctor \u003d new Doctor(\"1\");\n    }\n\n\n    // Don\u0027t change the code below\n    static class Unit {\n        static String nameUnit;\n        static int countUnit;\n\n        public Unit(String name) {\n            countUnit++;\n            nameUnit \u003d name;\n\n        }\n    }\n\n    static class Knight {\n        static String nameKnight;\n        static int countKnight;\n\n        public Knight(String name) {\n            countKnight++;\n            nameKnight \u003d name;\n\n        }\n    }\n\n    static class General {\n        static String nameGeneral;\n        static int countGeneral;\n\n        public General(String name) {\n            countGeneral++;\n            nameGeneral \u003d name;\n\n        }\n    }\n\n    static class Doctor {\n        static String nameDoctor;\n        static int countDoctor;\n\n        public Doctor(String name) {\n            countDoctor++;\n            nameDoctor \u003d name;\n\n        }\n    }\n\n    public static void main(String[] args) {\n        createArmy();\n        System.out.println(Unit.countUnit);\n        System.out.println(Knight.countKnight);\n        System.out.println(General.countGeneral);\n        System.out.println(Doctor.countDoctor);\n    }\n\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/5038",
    "checked": true,
    "mode": 1,
    "answerStr": "The value of an object of this class cannot be changed"
  },
  {
    "url": "https://hyperskill.org/learn/step/5039",
    "checked": true,
    "mode": 1,
    "answerStr": "8"
  },
  {
    "url": "https://hyperskill.org/learn/step/12689",
    "checked": true,
    "mode": 1,
    "answerStr": "5"
  },
  {
    "url": "https://hyperskill.org/learn/step/12690",
    "checked": true,
    "mode": 3,
    "answerStr": "class Person {\n    String name;\n    int age;\n}\n\nclass MakingChanges {\n    public static void changeIdentities(Person p1, Person p2) {\n        // write your code here\n        String s \u003d p1.name;\n        p1.name \u003d p2.name;\n        p2.name \u003d s;\n        int n \u003d p1.age;\n        p1.age \u003d p2.age;\n        p2.age \u003d n;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2058",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "final fields",
      "fields",
      "methods"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2059",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "It\u0027s possible to get a value of staticField inside the instanceMethod.",
      "It\u0027s possible to get a value of staticField inside the staticMethod."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3012",
    "checked": true,
    "mode": 3,
    "answerStr": "public class Main {\n\n    public static void main(String[] args) {\n        // write your code using the existing class ConstantsAndUtilities\n        System.out.println(ConstantsAndUtilities.A_CONSTANT_TTT);\n        System.out.println(ConstantsAndUtilities.B_CONSTANT_QQQ);\n        System.out.println(ConstantsAndUtilities.getMagicString());\n        System.out.println(ConstantsAndUtilities.convertStringToAnotherString(\"aa\"));\n    }\n\n}\n\n// Don\u0027t change this class\nclass ConstantsAndUtilities {\n\n    public static final String A_CONSTANT_TTT \u003d \"1234\";\n\n    public static final String B_CONSTANT_QQQ \u003d \"7890\";\n\n    public static String getMagicString() {\n        return A_CONSTANT_TTT + B_CONSTANT_QQQ;\n    }\n\n    public static String convertStringToAnotherString(String s) {\n        return A_CONSTANT_TTT + s;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/12513",
    "checked": true,
    "mode": 3,
    "answerStr": "class TimeConstantsDemo {\n\n    public static void main(String[] args) {\n        // print SECONDS_IN_DAY\n        System.out.println(TimeConstants.SECONDS_IN_DAY);\n        // print SECONDS_IN_WEEK\n        System.out.println(TimeConstants.SECONDS_IN_WEEK);\n    }\n}\n\nfinal class TimeConstants {\n    public static final int SECOND \u003d 1;\n    public static final int SECONDS_IN_MINUTE \u003d 60 * SECOND;\n    public static final int SECONDS_IN_HOUR \u003d 60 * SECONDS_IN_MINUTE;\n    // write your code here\n\n    public static final int SECONDS_IN_DAY \u003d 24 * SECONDS_IN_HOUR;\n    public static final int SECONDS_IN_WEEK \u003d 7 * SECONDS_IN_DAY;\n\n    private TimeConstants() { }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/14279",
    "checked": true,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass ManufacturingController {\n    // here you may declare a field\n    static int count \u003d 0;\n\n    public static String requestProduct(String product) {\n        // write your code here\n        return ++count + \". Requested \" + product;\n            }\n\n    public static int getNumberOfProducts() {\n        // write your code here\n        return count;\n    }\n}\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n\n        while (scanner.hasNextLine()) {\n            String product \u003d scanner.nextLine();\n            System.out.println(ManufacturingController.requestProduct(product));\n            System.out.println(ManufacturingController.getNumberOfProducts());\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2570",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "@Deprecated",
      "@SuppressWarnings",
      "@Override"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2575",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "@SuppressWarnings({\"deprecation\", \"unused\"})",
      "@SuppressWarnings(value \u003d {\"deprecation\"})",
      "@SuppressWarnings(\"deprecation\")",
      "@SuppressWarnings(value \u003d \"deprecation\")"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2580",
    "checked": true,
    "mode": 1,
    "answerStr": "Any annotation can mark classes, methods, and fields."
  },
  {
    "url": "https://hyperskill.org/learn/step/2582",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "@SuppressWarnings({\"deprecation\", \"unused\"})",
      "@SuppressWarnings(value \u003d \"deprecation\")"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3781",
    "checked": true,
    "mode": 1,
    "answerStr": "@ExcellentMethod"
  },
  {
    "url": "https://hyperskill.org/learn/step/2198",
    "checked": true,
    "mode": 5,
    "answerStr": "final"
  },
  {
    "url": "https://hyperskill.org/learn/step/2200",
    "checked": true,
    "mode": 3,
    "answerStr": "class Animal {\n\n    public void say() {\n        System.out.println(\"...An incomprehensible sound...\");\n    }\n}\n\nclass Cat extends Animal {\n    @Override\n    public void say() {\n        System.out.println(\"meow-meow\");\n    }\n}\n\nclass Dog extends Animal {\n    @Override\n    public void say() {\n        System.out.println(\"arf-arf\");\n    }\n}\n\nclass Duck extends Animal {\n    @Override\n    public void say() {\n        System.out.println(\"quack-quack\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3059",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "doA",
      "doE"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3062",
    "checked": true,
    "mode": 1,
    "answerStr": "public long calcSalary() { return yearsOfExperience * 500 + super.baseSalary; }"
  },
  {
    "url": "https://hyperskill.org/learn/step/3400",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "public static methods",
      "private instance methods",
      "final methods"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3823",
    "checked": true,
    "mode": 3,
    "answerStr": "class Shape {\n    public double area() {\n        return 0;\n    }\n}\n\nclass Triangle extends Shape {\n    double height;\n    double base;\n\n    // override the method here\n    @Override\n    public double area() {\n        return base * height / 2;\n    }\n}\n\nclass Circle extends Shape {\n    double radius;\n\n    // override the method here\n    @Override\n    public double area() {\n        return Math.PI * radius * radius;\n    }\n}\n\nclass Square extends Shape {\n    double side;\n\n    // override the method here\n    @Override\n    public double area() {\n        return side * side;\n    }\n}\n\nclass Rectangle extends Shape {\n    double width;\n    double height;\n\n    // override the method here\n    @Override\n    public double area() {\n        return width * height;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2046",
    "checked": true,
    "mode": 1,
    "answerStr": "It outputs two lines. The first one is \"Derived class\". The second one is \"Base class\"."
  },
  {
    "url": "https://hyperskill.org/learn/step/2258",
    "checked": true,
    "mode": 1,
    "answerStr": "Dynamic method dispatch"
  },
  {
    "url": "https://hyperskill.org/learn/step/3064",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "alarm.show() outputs \"ALARM: The ship sank\"",
      "notif.show() outputs \"No problems\"",
      "warn.getMsg() returns \"WARN: Money ends\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3065",
    "checked": true,
    "mode": 5,
    "answerStr": "class-C"
  },
  {
    "url": "https://hyperskill.org/learn/step/3396",
    "checked": true,
    "mode": 1,
    "answerStr": "Run-time polymorphism"
  },
  {
    "url": "https://hyperskill.org/learn/step/3397",
    "checked": true,
    "mode": 1,
    "answerStr": "at compile time"
  },
  {
    "url": "https://hyperskill.org/learn/step/4331",
    "checked": true,
    "mode": 3,
    "answerStr": "class Publication {\n\n    private String title;\n\n    public Publication(String title) {\n        this.title \u003d title;\n    }\n\n    public final String getInfo() {\n        String type \u003d getType();\n        String details \u003d getDetails();\n        return type + (details.isEmpty() ? \"\" : \" (\" + details + \")\") + \": \" + title;\n    }\n\n    public String getType() {\n        return \"Publication\";\n    }\n\n    public String getDetails() {\n        return \"\";\n    }\n\n}\n\nclass Newspaper extends Publication {\n\n    private String source;\n\n    public Newspaper(String title, String source) {\n        super(title);\n        this.source \u003d source;\n    }\n\n    @Override\n    public String getType() {\n        return \"Newspaper\";\n    }\n\n    @Override\n    public String getDetails() {\n        return \"source - \" + source;\n    }\n\n}\n\nclass Article extends Publication {\n\n    private String author;\n\n    public Article(String title, String author) {\n        super(title);\n        this.author \u003d author;\n    }\n\n    @Override\n    public String getType() {\n        return \"Article\";\n    }\n\n    @Override\n    public String getDetails() {\n        return \"author - \" + author;\n    }\n\n}\n\nclass Announcement extends Publication {\n\n    private int daysToExpire;\n\n    public Announcement(String title, int daysToExpire) {\n        super(title);\n        this.daysToExpire \u003d daysToExpire;\n    }\n\n    @Override\n    public String getType() {\n        return \"Announcement\";\n    }\n\n    @Override\n    public String getDetails() {\n        return \"days to expire - \" + daysToExpire;\n    }\n\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2118",
    "checked": true,
    "mode": 1,
    "answerStr": "By default, all methods in abstract class have access modifier \"public\"."
  },
  {
    "url": "https://hyperskill.org/learn/step/3078",
    "checked": true,
    "mode": 3,
    "answerStr": "abstract class IntBinaryOperation {\n\n    protected int firstArg;\n    protected int secondArg;\n\n    public IntBinaryOperation(int firstArg, int secondArg) {\n        this.firstArg \u003d firstArg;\n        this.secondArg \u003d secondArg;\n    }\n\n    public abstract int perform();\n}\n\n// declare and implement your classes here\n\nclass Addition extends IntBinaryOperation {\n    public Addition(int firstArg, int secondArg) {\n        super(firstArg, secondArg);\n    }\n        @Override\n    public int perform() {\n        return firstArg + secondArg;\n    }\n}\n\nclass Multiplication extends IntBinaryOperation {\n    public Multiplication(int firstArg, int secondArg) {\n        super(firstArg, secondArg);\n    }\n        @Override\n    public int perform() {\n        return firstArg * secondArg;\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3272",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "An abstract class can have several abstract methods",
      "An abstract class can have private methods"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3273",
    "checked": true,
    "mode": 2,
    "answerArr": [
      "An abstract class can have abstract and non-abstract instance methods.",
      "It\u0027s needed to write the keyword abstract to declare a class as abstract."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3760",
    "checked": false,
    "mode": 3,
    "answerStr": "class Main {\n  public static void main(String[] args) {\n    System.out.println(\"WE NEED TO\\n\\nLEARN JAVA\\n\\nAS QUICKLY AS POSSIBLE\");\n  }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/26368",
    "checked": false,
    "mode": 3,
    "answerStr": "class Main {\n    public static void main(String[] args) {\n        //write your code here\n        System.out.println(\"\"\"\n                        1 2 3\n                        4 5 6\n                        7 8 9\n                        * 0 #\"\"\");\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2917",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "_var",
      "var3"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2068",
    "checked": false,
    "mode": 1,
    "answerStr": "30"
  },
  {
    "url": "https://hyperskill.org/learn/step/3440",
    "checked": false,
    "mode": 1,
    "answerStr": "int"
  },
  {
    "url": "https://hyperskill.org/learn/step/10990",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    /**\n     * The method calculates the sum of integers in a given range\n     * \n     * @param from inclusive\n     * @param to exclusive\n     *\n     * @return the sum (long)\n     */\n    public static long sumInRange(int from, int to) {\n        // write your code here\n        long res \u003d 0;\n        for(int i \u003d from; i \u003c to; i++) {\n            res +\u003d i;\n        }\n\n        return res;\n    }\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        final Scanner scanner \u003d new Scanner(System.in);\n\n        int from \u003d scanner.nextInt();\n        int to \u003d scanner.nextInt();\n\n        System.out.println(sumInRange(from, to));\n    } \n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/2754",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "public static long method(long l) { return 1L; }",
      "public static void method(String s, int i) { }",
      "public static void method(int i, String s) { }"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1957",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "int numbers[] \u003d new int[10];",
      "int[] numbers \u003d new int[20];"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2127",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "numbers[0]",
        "1"
      ],
      [
        "numbers[6]",
        "4"
      ],
      [
        "numbers.length",
        "7"
      ],
      [
        "numbers[7]",
        "ArrayIndexOutOfBoundsException"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2715",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Arrays.equals(numbers1, numbers1)",
      "Arrays.equals(numbers1, numbers2)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2747",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "public void method(long... longNumbers)",
      "public void method(long[] longNumbers)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1970",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It represents a single character such as \u00270\u0027, \u0027A\u0027, \u0027b\u0027.",
      "It may be considered as an unsigned integer value in the range from 0 to 65535.",
      "It has a minimum value of \u0027\\u0000\u0027 and a maximum value of \u0027\\uffff\u0027."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3767",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The JVM understands bytecode.",
      "The JVM provides platform independence for Java programs.",
      "To run a compiled Java program, a JVM must be installed on the computer."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17539",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "approachLanding",
      "takeOff"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2987",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "News news \u003d new News(\"A title\", \"A text\");"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/31392",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The \u0027setAge()\u0027 method is an example of a setter with validation to prevent setting invalid age.",
      "The principle of encapsulation is maintained by making the \u0027name\u0027 and \u0027age\u0027 fields private and accessing them through public methods."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3008",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "In the body of doSomething you can access the field TEXT.",
      "In the body of doDo you can directly invoke the method doSomething.",
      "In the body of doDo you can access the field TEXT."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3290",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A static method can be accessed by the class name and doesn\u0027t need an object.",
      "A static field has the same value for all instances of the class."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2573",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It\u0027s possible to mix built-in and external annotations in a .java file.",
      "Some annotations can mark classes, methods, fields, and variables."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/38628",
    "checked": false,
    "mode": 3,
    "answerStr": "public class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Java is powerful!\");\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/34802",
    "checked": false,
    "mode": 9,
    "answerListArr": [
      [
        "}",
        "5",
        "0"
      ],
      [
        "public static void main(String[] args) {",
        "1",
        "1"
      ],
      [
        "String greeting \u003d \"Hello, Java!\";",
        "2",
        "2"
      ],
      [
        "System.out.println(greeting);",
        "3",
        "2"
      ],
      [
        "}",
        "4",
        "1"
      ],
      [
        "public class Main {",
        "0",
        "0"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/35253",
    "checked": false,
    "mode": 9,
    "answerListArr": [
      [
        "public class HelloWorld {",
        "0",
        "0"
      ],
      [
        "String greeting \u003d \"Hello, World!\";",
        "5",
        "1"
      ],
      [
        "}",
        "1",
        "2"
      ],
      [
        "}",
        "4",
        "2"
      ],
      [
        "System.out.println(greeting);",
        "2",
        "1"
      ],
      [
        "public static void main(String[] args) {",
        "3",
        "0"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/30024",
    "checked": false,
    "mode": 1,
    "answerStr": "int myResult \u003d myObject.myMethod(myDouble);"
  },
  {
    "url": "https://hyperskill.org/learn/step/29752",
    "checked": false,
    "mode": 1,
    "answerStr": "a is primitive, b is primitive, str is reference"
  },
  {
    "url": "https://hyperskill.org/learn/step/2128",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "char[] array \u003d new char[1];",
      "char[] array \u003d new char[0];",
      "char[] array \u003d { \u0027a\u0027, \u0027b\u0027, \u0027c\u0027, \u0027d\u0027 };"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2706",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Arrays;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        int[] numbers \u003d new int[] {12, 17, 8, 101, 33};\n\n        System.out.println(Arrays.toString(numbers));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2710",
    "checked": false,
    "mode": 1,
    "answerStr": "numbers[numbers.length - 1]"
  },
  {
    "url": "https://hyperskill.org/learn/step/3388",
    "checked": false,
    "mode": 1,
    "answerStr": "new"
  },
  {
    "url": "https://hyperskill.org/learn/step/3391",
    "checked": false,
    "mode": 4,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/3392",
    "checked": false,
    "mode": 4,
    "answerStr": "8"
  },
  {
    "url": "https://hyperskill.org/learn/step/41487",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "public static void",
      "System.out.println"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2245",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void sort(int[] numbers) {\n        // write your code here\n        int cancel \u003d 1;\n        while (cancel \u003c numbers.length) {\n            int tmp;\n            cancel \u003d 1;\n            for (int i \u003d 1; i \u003c numbers.length; i++) {\n                if (numbers[i] \u003c numbers[i - 1]) {\n                    tmp \u003d numbers[i - 1];\n                    numbers[i - 1] \u003d numbers[i];\n                    numbers[i] \u003d tmp;\n                } else {\n                    cancel++;\n                }\n            }\n        }\n    }\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        final Scanner scanner \u003d new Scanner(System.in);\n        String[] values \u003d scanner.nextLine().split(\"\\\\s+\");\n        int[] numbers \u003d Arrays.stream(values)\n                .mapToInt(Integer::parseInt)\n                .toArray();\n        sort(numbers);\n        Arrays.stream(numbers).forEach(e -\u003e System.out.print(e + \" \"));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/6635",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "WWW",
      "W3",
      "Web"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6636",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "The World Wide Web",
        "is a collection of information resources scattered around the world that are linked together by reference"
      ],
      [
        "A browser",
        "is a special program for downloading and viewing web pages"
      ],
      [
        "A web page",
        "is a single document on the Internet that contains text, graphics, sound, and so on"
      ],
      [
        "A website",
        "is a group of web pages that share a common content theme, design and links to each other"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6637",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "People can only search and read information posted on the Internet",
      "People can communicate with each other or share their content",
      "Improved content analysis and accelerated time of its finding"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6639",
    "checked": false,
    "mode": 1,
    "answerStr": "The Internet connects computers around the world, and the Web disseminates information."
  },
  {
    "url": "https://hyperskill.org/learn/step/6641",
    "checked": false,
    "mode": 1,
    "answerStr": "www"
  },
  {
    "url": "https://hyperskill.org/learn/step/6642",
    "checked": false,
    "mode": 1,
    "answerStr": "browsers"
  },
  {
    "url": "https://hyperskill.org/learn/step/17669",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "Picking up a user device",
      "Establishing an internet connection",
      "Search in a browser",
      "Browsing a web site with its respective web pages"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/21840",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Firefox",
      "Chrome",
      "Safari"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1972",
    "checked": false,
    "mode": 1,
    "answerStr": "\u0027\\n\u0027 - new line, \u0027\\\\\u0027 - backslash, \u0027\\r\u0027 - carriage return, \u0027\\t\u0027 - tab"
  },
  {
    "url": "https://hyperskill.org/learn/step/5022",
    "checked": false,
    "mode": 1,
    "answerStr": "\u0027\\u003F\u0027"
  },
  {
    "url": "https://hyperskill.org/learn/step/7432",
    "checked": false,
    "mode": 5,
    "answerStr": "3 5"
  },
  {
    "url": "https://hyperskill.org/learn/step/2042",
    "checked": false,
    "mode": 1,
    "answerStr": "org.hyperskill.java.DemoClass"
  },
  {
    "url": "https://hyperskill.org/learn/step/2043",
    "checked": false,
    "mode": 1,
    "answerStr": "import static java.lang.System.out;"
  },
  {
    "url": "https://hyperskill.org/learn/step/2252",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "a",
        "It\u0026#x27;s always automatically imported"
      ],
      [
        "b",
        "Allows us to declare a variable of type Scanner without writing full class name"
      ],
      [
        "c",
        "Allows us to use the method Math.max(1, 2) as max(1, 2)"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2976",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "1",
      "2",
      "4"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3409",
    "checked": false,
    "mode": 1,
    "answerStr": "java.lang"
  },
  {
    "url": "https://hyperskill.org/learn/step/9896",
    "checked": false,
    "mode": 3,
    "answerStr": "class ArraySorting {\n    /**\n     * @param array unordered sequence of strings\n     * @return ordered array of strings\n     */\n    public static String[] sortArray(String[] array) {\n        // write your code here\n        java.util.Arrays.sort(array);\n        return array;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2978",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "1",
      "3",
      "4"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/29809",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "E. The Circle class has an object constructor with a parameter",
      "C. Both circle1 and circle2 have an attribute called radius and a method called getArea()",
      "A. There are two instances of the Circle class"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/19626",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Solution {\n\n    public void printIsNull(Object o) {\n        // write your code here\n        if (o \u003d\u003d null) {\n            System.out.println(\"It\u0027s null\");\n        } else {\n            System.out.println(\"It\u0027s an object\");\n        }\n    }\n}\n\n// Do not change the code below\nclass Main {\n    public static void main(String[] args) {\n        Solution solution \u003d new Solution();\n        Scanner scanner \u003d new Scanner(System.in);\n        while (scanner.hasNextLine()) {\n            Object obj \u003d \"null\".equals(scanner.nextLine()) ? null : new Object();\n            solution.printIsNull(obj);\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/4913",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "0",
      "1",
      "2"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4912",
    "checked": false,
    "mode": 1,
    "answerStr": "random.nextInt(upper - lower + 1) + lower"
  },
  {
    "url": "https://hyperskill.org/learn/step/4911",
    "checked": false,
    "mode": 1,
    "answerStr": "Truly random sequences"
  },
  {
    "url": "https://hyperskill.org/learn/step/4940",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n\n        int a \u003d scanner.nextInt();\n        int b \u003d scanner.nextInt();\n        int n \u003d scanner.nextInt();\n        int k \u003d scanner.nextInt();\n\n        int seed \u003d a;\n        int min \u003d Integer.MAX_VALUE;\n\n        for (int i \u003d a; i \u003c b; i++) {\n            Random random \u003d new Random(i);\n            int max \u003d 0;\n            for (int j \u003d 0; j \u003c n; j++) {\n                int temp \u003d random.nextInt(k);\n                if (temp \u003e max) {\n                    max \u003d temp;\n                }\n            }\n\n            if (max \u003c min) {\n                min \u003d max;\n                seed \u003d i;\n            }\n        }\n\n        System.out.println(seed + \"\\n\" + min);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/7675",
    "checked": false,
    "mode": 1,
    "answerStr": "a value between 0.0 and 1.0"
  },
  {
    "url": "https://hyperskill.org/learn/step/7676",
    "checked": false,
    "mode": 1,
    "answerStr": "they are completely determined by seeds"
  },
  {
    "url": "https://hyperskill.org/learn/step/7677",
    "checked": false,
    "mode": 5,
    "answerStr": "2 1 0"
  },
  {
    "url": "https://hyperskill.org/learn/step/40118",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "JRE"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/40120",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "JRE"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2022",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Java Compiler",
      "JRE"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2223",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "JDK",
        "A toolkit for developing programs including the Java compiler."
      ],
      [
        "JRE",
        "A toolkit for running programs, including the JVM."
      ],
      [
        "JVM",
        "The Java Virtual Machine."
      ],
      [
        "JCL",
        "A set of standard class libraries."
      ],
      [
        "JAR",
        "An archive format for packing programs."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6963",
    "checked": false,
    "mode": 1,
    "answerStr": "The program is executed up to the line with an exception, then fails"
  },
  {
    "url": "https://hyperskill.org/learn/step/6964",
    "checked": false,
    "mode": 4,
    "answerStr": "2"
  },
  {
    "url": "https://hyperskill.org/learn/step/6965",
    "checked": false,
    "mode": 4,
    "answerStr": "112"
  },
  {
    "url": "https://hyperskill.org/learn/step/12686",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Converting an unsuitable string into an integer number",
      "Impossible arithmetic operation"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/19627",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "int number \u003d Integer.parseInt(input);",
      "int divResult \u003d 22 / number;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2461",
    "checked": false,
    "mode": 1,
    "answerStr": "Throwable"
  },
  {
    "url": "https://hyperskill.org/learn/step/2463",
    "checked": false,
    "mode": 1,
    "answerStr": "RuntimeException extends Exception, Exception extends Throwable"
  },
  {
    "url": "https://hyperskill.org/learn/step/2464",
    "checked": false,
    "mode": 1,
    "answerStr": "RuntimeException"
  },
  {
    "url": "https://hyperskill.org/learn/step/2808",
    "checked": false,
    "mode": 1,
    "answerStr": "NullPointerException, ArithmeticException"
  },
  {
    "url": "https://hyperskill.org/learn/step/2810",
    "checked": false,
    "mode": 1,
    "answerStr": "IOException, RuntimeException"
  },
  {
    "url": "https://hyperskill.org/learn/step/2812",
    "checked": false,
    "mode": 1,
    "answerStr": "java.lang.Throwable, java.lang.Exception"
  },
  {
    "url": "https://hyperskill.org/learn/step/16171",
    "checked": false,
    "mode": 3,
    "answerStr": "// update the class\nclass BadRequestException extends Exception{\n\n    public BadRequestException(String message) {\n        super(message);\n    }\n    \n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/16173",
    "checked": false,
    "mode": 3,
    "answerStr": "// update the class\nclass MyException extends Throwable{\n    public MyException(String message) {\n        super(message);\n    }\n}\n\n//do not change the code\nclass Main {\n    public static void main(String[] args) {\n        MyException myException \u003d new MyException(\"This is a custom exception\");\n        System.out.println(myException.getMessage());\n        Class\u003c?\u003e superClass \u003d myException.getClass().getSuperclass();\n        System.out.println(superClass.equals(Throwable.class));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2475",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A runtime exception occurred",
      "Finally!"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2478",
    "checked": false,
    "mode": 3,
    "answerStr": "class Converter {\n\n    /**\n     * It returns a double value or 0 if an exception occurred\n     */\n    public static double convertStringToDouble(String input) {\n        try {\n            return Double.parseDouble(input);    \n        } catch (Exception e) {\n            return 0;\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2479",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\npublic class Main {\n\n    private static String array \u003d null;\n\n    public static void methodCatchingSomeExceptions() {\n        // invoke methodThrowingExceptions here and catch some types of exceptions\n        \n         try {\n            methodThrowingExceptions();\n        } catch (ArrayIndexOutOfBoundsException e) {\n             System.out.println(\"ArrayIndexOutOfBoundsException\");\n        } catch (NumberFormatException e) {\n             System.out.println(\"NumberFormatException\");\n        }\n    }\n\n    /* Do not change code below */\n    public static void methodThrowingExceptions() {\n        if (array \u003d\u003d null) {\n            return;\n        }\n        int[] integers \u003d Arrays.stream(array.split(\" \"))\n                .mapToInt(Integer::parseInt)\n                .toArray();\n        Object someValue \u003d integers[integers[0]];\n        if (integers[0] + integers[1] \u003d\u003d integers[2]) {\n            integers \u003d null;\n        }\n        int sum \u003d 0;\n        for (int i : integers) {\n            sum +\u003d i;\n        }\n        int meanValue \u003d integers.length / sum;\n        if (integers[2] \u003d\u003d integers[3]) {\n            String string \u003d (String) someValue;\n            System.out.print(\"Random value is \" + string);\n        }\n        System.out.print(\"Mean is \" + meanValue);\n    }\n\n\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        array \u003d scanner.nextLine();\n        try {\n            methodCatchingSomeExceptions();\n        } catch (Exception e) {\n            System.out.println(\"Caught: \" + e.getClass().getName());\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2829",
    "checked": false,
    "mode": 1,
    "answerStr": "Throwable"
  },
  {
    "url": "https://hyperskill.org/learn/step/2830",
    "checked": false,
    "mode": 1,
    "answerStr": "In a method that has sufficient information to make the correct decision"
  },
  {
    "url": "https://hyperskill.org/learn/step/2052",
    "checked": false,
    "mode": 1,
    "answerStr": "NullPointerException"
  },
  {
    "url": "https://hyperskill.org/learn/step/1947",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\nimport java.util.Locale;\n\npublic class Main {\n\n    /* Fix this method */\n    public static String toUpperCase(String str) {\n        return str \u003d\u003d null ? \"\" : str.toUpperCase(Locale.ENGLISH); \n    }\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        String line \u003d scanner.nextLine();\n        line \u003d \"none\".equalsIgnoreCase(line) ? null : line;\n        System.out.println(toUpperCase(line));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/1946",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "name.length()",
      "name.equals(surname)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1944",
    "checked": false,
    "mode": 1,
    "answerStr": "city.equals(\"Sydney\")"
  },
  {
    "url": "https://hyperskill.org/learn/step/3822",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\nclass FixingNullPointerException {\n\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        String string \u003d scanner.nextLine();\n        string \u003d \"null\".equals(string) ? null : string;\n        /* Do not change code above */\n        if (string \u003d\u003d null) {\n            System.out.println(\"NPE!\");\n        } else {\n            System.out.println(string.toLowerCase());   \n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/13206",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\n\npublic class Main {\n\n    public static String concatStrings(String str1, String str2) {\n        /* write your code here */\n        if (Objects.equals(str1, str2)) {\n            return \"\";\n        } else if (str1 !\u003d null \u0026\u0026 str2 \u003d\u003d null) {\n            return str1;\n        } else if (str2 !\u003d null \u0026\u0026 str1 \u003d\u003d null) {\n            return str2;\n        }\n        return str1.concat(str2);\n    }\n\n    /* Do not change code below */\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n\n        String str1 \u003d scanner.nextLine();\n        String str2 \u003d scanner.nextLine();\n        str1 \u003d \"null\".equalsIgnoreCase(str1) ? null : str1;\n        str2 \u003d \"null\".equalsIgnoreCase(str2) ? null : str2;\n\n        System.out.println(concatStrings(str1, str2));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/13821",
    "checked": false,
    "mode": 3,
    "answerStr": "class Util {\n    // correct this method to avoid NPE\n    public static void printLength(String name) {\n        if (name !\u003d null) {\n            System.out.println(name.length());\n        }  \n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/1960",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "a",
      "c"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2134",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        // put your code here\n        Scanner scanner \u003d new Scanner(System.in);\n\n        int size \u003d scanner.nextInt();\n        int[] arr \u003d new int[size];\n\n        for (int i \u003d 0; i \u003c size; i++) {\n            arr[i] \u003d scanner.nextInt();\n        }\n\n        int n \u003d scanner.nextInt();\n\n        int res \u003d 0;\n        for (int i \u003d 0; i \u003c arr.length; i++) {\n            if (arr[i] \u003e n) {\n                res +\u003d arr[i];\n            }\n        }\n        System.out.println(res);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2142",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        // put your code here\n        Scanner scanner \u003d new Scanner(System.in);\n        int first \u003d scanner.nextInt();\n        int[] second \u003d new int[first];\n\n        for (int i \u003d 0; i \u003c first; i++) {\n            second[(i + 1) % first] \u003d scanner.nextInt();\n        }\n\n        for (int i : second) {\n            System.out.print(i + \" \");\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3280",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "for (int i \u003d 0; i \u003c\u003d 3; i++) { System.out.println(nums[i]); }",
      "for (int i \u003d nums.length - 1; i \u003e\u003d 0; i--) { System.out.println(nums[i]); }",
      "for (int i \u003d 0; i \u003c nums.length; i++) { System.out.println(nums[i]); }"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10613",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        // write your code here\n        Scanner scanner \u003d new Scanner(System.in);\n\n        int[] box1 \u003d {scanner.nextInt(), scanner.nextInt(), scanner.nextInt()};\n        int[] box2 \u003d {scanner.nextInt(), scanner.nextInt(), scanner.nextInt()};\n\n        Arrays.sort(box1);\n        Arrays.sort(box2);\n\n        if (box1[0] \u003e box2[0] \u0026\u0026 box1[1] \u003e box2[1] \u0026\u0026 box1[2] \u003e box2[2]) {\n            System.out.println(\"Box 1 \u003e Box 2\");\n        } else if (box1[0] \u003c box2[0] \u0026\u0026 box1[1] \u003c box2[1] \u0026\u0026 box1[2] \u003c box2[2]) {\n            System.out.println(\"Box 1 \u003c Box 2\");\n        } else {\n            System.out.println(\"Incompatible\");\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/34701",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "radle",
      "aven"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4288",
    "checked": false,
    "mode": 1,
    "answerStr": "It performs multiple tasks: downloads external libraries, compiles source code, runs tests and so on."
  },
  {
    "url": "https://hyperskill.org/learn/step/7852",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "You would like to generate a production-ready application archive easily.",
      "You always need to run automated tests after changes in the application.",
      "The project depends on large number of external libraries."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/16513",
    "checked": false,
    "mode": 1,
    "answerStr": "automates creating executable applications from the source code"
  },
  {
    "url": "https://hyperskill.org/learn/step/16515",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "link and package the code into a usable or executable form",
      "compile sources"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/16516",
    "checked": false,
    "mode": 1,
    "answerStr": "we need to automate a larger project compiling"
  },
  {
    "url": "https://hyperskill.org/learn/step/9705",
    "checked": false,
    "mode": 1,
    "answerStr": "Graphical User Interface"
  },
  {
    "url": "https://hyperskill.org/learn/step/9707",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Retrieving and displaying the content of the websites",
      "Resource management",
      "Data protection and secure access"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9708",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "macOS",
      "iOS",
      "Microsoft Windows",
      "Android"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13982",
    "checked": false,
    "mode": 1,
    "answerStr": "It controls the communication between all the computer software and hardware"
  },
  {
    "url": "https://hyperskill.org/learn/step/19902",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Monolithic kernel",
        "is a program that performs most of the OS functions"
      ],
      [
        "Microkernel",
        "performs a smaller subset of the OS functions, can be extended with additional modules - drivers"
      ],
      [
        "Kernel",
        "is a mandatory part of any OS, it\u0027s core"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8978",
    "checked": false,
    "mode": 1,
    "answerStr": "A way to interact with computer via text commands"
  },
  {
    "url": "https://hyperskill.org/learn/step/19905",
    "checked": false,
    "mode": 5,
    "answerStr": "whoami"
  },
  {
    "url": "https://hyperskill.org/learn/step/19906",
    "checked": false,
    "mode": 3,
    "answerStr": "function solve() {\n    # add your solution using shell here\nls\n\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/9748",
    "checked": false,
    "mode": 1,
    "answerStr": "the directory one level above the current directory"
  },
  {
    "url": "https://hyperskill.org/learn/step/9751",
    "checked": false,
    "mode": 1,
    "answerStr": "you have moved to the root directory"
  },
  {
    "url": "https://hyperskill.org/learn/step/2024",
    "checked": false,
    "mode": 1,
    "answerStr": "javac"
  },
  {
    "url": "https://hyperskill.org/learn/step/2492",
    "checked": false,
    "mode": 5,
    "answerStr": "TheArmyOfRabbitsApplication.class"
  },
  {
    "url": "https://hyperskill.org/learn/step/3406",
    "checked": false,
    "mode": 1,
    "answerStr": "compile a program"
  },
  {
    "url": "https://hyperskill.org/learn/step/3407",
    "checked": false,
    "mode": 1,
    "answerStr": "run a program"
  },
  {
    "url": "https://hyperskill.org/learn/step/30887",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It will print \u0027Example.txt exists\u0027 and delete the file only if the file exists.",
      "It will print \u0027File not found\u0027 only if the file does not exist."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3625",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "file.isDirectory()",
      "file.exists()"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3626",
    "checked": false,
    "mode": 1,
    "answerStr": "None of them"
  },
  {
    "url": "https://hyperskill.org/learn/step/3627",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It is possible to create an instance of java.io.File that represents a non-existing file",
      "It is possible to create an object of java.io.File by passing a string that represents the path to a file"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3628",
    "checked": false,
    "mode": 1,
    "answerStr": "The file does not exist in the file system"
  },
  {
    "url": "https://hyperskill.org/learn/step/7699",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "D:",
        "It starts an absolute path to a file on Windows."
      ],
      [
        "/",
        "It starts an absolute path to a file on a Unix-like system."
      ],
      [
        ".",
        "It starts a relative path to a file from this directory."
      ],
      [
        "..",
        "It starts a relative path to a file from the parent directory."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7700",
    "checked": false,
    "mode": 1,
    "answerStr": "starts from your working directory"
  },
  {
    "url": "https://hyperskill.org/learn/step/8093",
    "checked": false,
    "mode": 5,
    "answerStr": "isDirectory()"
  },
  {
    "url": "https://hyperskill.org/learn/step/8094",
    "checked": false,
    "mode": 5,
    "answerStr": "isFile()"
  },
  {
    "url": "https://hyperskill.org/learn/step/8095",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.io.File;\n\nclass Siblings {\n\n    public static boolean areSiblings(File f1, File f2) {\n        // implement me\n        if (f1.getParent().equals(f2.getParent())) {\n            return true;\n        }\n        return false;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11516",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "1",
      "2",
      "3"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11517",
    "checked": false,
    "mode": 4,
    "answerStr": "2"
  },
  {
    "url": "https://hyperskill.org/learn/step/11518",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "System.out.println(capricorn.name());",
        "\"CAPRICORN\" is printed"
      ],
      [
        "Zodiac taurus \u003d Zodiac.valueOf(\"TAURUS\");",
        "Zodiac.TAURUS object is assigned"
      ],
      [
        "Zodiac virgo \u003d Zodiac.valueOf(\"virgo\");",
        "IllegalArgumentException is thrown"
      ],
      [
        "System.out.println(leo.equals(Zodiac.TAURUS));",
        "it prints \"false\""
      ],
      [
        "System.out.println(Zodiac.AQUARIUS.ordinal());",
        "it prints 10"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11519",
    "checked": false,
    "mode": 3,
    "answerStr": "// declare your enum here\n\nenum Currency {\n    USD,\n    EUR,\n    GBP,\n    RUB,\n    UAH,\n    KZT,\n    CAD,\n    JPY,\n    CNY\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11520",
    "checked": false,
    "mode": 3,
    "answerStr": "// declare your enum here\nenum DayOfWeek {\n    SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        for (DayOfWeek day : DayOfWeek.values()) {\n            System.out.println(day);\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11521",
    "checked": false,
    "mode": 3,
    "answerStr": "public class Main {\n\n    public static void main(String[] args) {\n        int counter \u003d 0;\n\n        // write your code here\n        for (Secret s : Secret.values()) {\n            if (s.ordinal() \u003e\u003d Secret.START.ordinal()) {\n                counter++;\n            }\n        }\n\n        System.out.println(counter);\n    }\n}\n\n/* sample enum for inspiration\nenum Secret {\n    STAR, CRASH, START, // ...\n}\n*/\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/14850",
    "checked": false,
    "mode": 1,
    "answerStr": "unstable"
  },
  {
    "url": "https://hyperskill.org/learn/step/14853",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "create a set of input values and run the program manually",
      "write automated tests"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5541",
    "checked": false,
    "mode": 1,
    "answerStr": "Error"
  },
  {
    "url": "https://hyperskill.org/learn/step/5543",
    "checked": false,
    "mode": 1,
    "answerStr": "Info"
  },
  {
    "url": "https://hyperskill.org/learn/step/12343",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "statistics",
      "finding a problem"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/12344",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "log message",
      "time",
      "log level",
      "date"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13777",
    "checked": false,
    "mode": 1,
    "answerStr": "Fail fast"
  },
  {
    "url": "https://hyperskill.org/learn/step/13778",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Use a debugging tool to examine the code",
      "Log expected and actual values in critical parts of the code",
      "Add assertions to localize broken invariants"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13779",
    "checked": false,
    "mode": 1,
    "answerStr": "It throws an Error if the condition in the parentheses is evaluated to be false"
  },
  {
    "url": "https://hyperskill.org/learn/step/13780",
    "checked": false,
    "mode": 5,
    "answerStr": "name\u003dnull, age\u003d0"
  },
  {
    "url": "https://hyperskill.org/learn/step/13781",
    "checked": false,
    "mode": 5,
    "answerStr": "assert (name !\u003d null)"
  },
  {
    "url": "https://hyperskill.org/learn/step/13782",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Util {\n    public static int[] swapInts(int[] ints) {\n        return new int[]{ints[1], ints[0]};\n    }\n}\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n\n        int[] ints \u003d new int[2];\n        ints[0] \u003d Integer.parseInt(scanner.nextLine());\n        ints[1] \u003d Integer.parseInt(scanner.nextLine());\n\n        ints \u003d Util.swapInts(ints);\n\n        System.out.println(ints[0]);\n        System.out.println(ints[1]);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/13783",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Assertion",
        "A boolean expression that throws an error when some condition is not met"
      ],
      [
        "Debugger",
        "A tool that allows you to get detailed information about the program while it is running"
      ],
      [
        "Logging",
        "The technique that involves writing runtime events to the console or a file"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2064",
    "checked": false,
    "mode": 1,
    "answerStr": "\" abcda\""
  },
  {
    "url": "https://hyperskill.org/learn/step/2282",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc \u003d new Scanner(System.in);\n\n        String[] arr \u003d sc.nextLine().split(\" \");\n        String s \u003d arr[0];\n\n        int i \u003d 0;\n        while (i \u003c arr.length) {\n            if (s.length() \u003c arr[i].length()) {\n                s \u003d arr[i];\n            }\n            i++;\n        }\n        System.out.println(s);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2283",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\nclass Main {\n    public static boolean isPalindrome(String s) {\n        String normalizedText \u003d normalize(s);\n        return normalizedText.equals(reverse(normalizedText));\n    }\n\n    private static String normalize(String s) {\n        return s.toLowerCase().replaceAll(\"\\\\W+\", \"\");\n    }\n\n    private static String reverse(String s) {\n        return new StringBuilder(s).reverse().toString();\n    }\n\n    public static void printPalindromes(String s) {\n        System.out.println(isPalindrome(s) ? \"yes\" : \"no\");\n    }\n\n    public static void main(String[] args) {\n        Scanner sc \u003d new Scanner(System.in);\n        printPalindromes(sc.nextLine());\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2292",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc \u003d new Scanner(System.in);\n\n        char[] input \u003d sc.nextLine().toCharArray();\n\n        char ch;\n        int i \u003d 0;\n        int count;\n\n        while (i \u003c input.length) {\n            ch \u003d input[i];\n            count \u003d 0;\n\n            System.out.print(input[i]);\n\n            while (input[i] \u003d\u003d ch) {\n                count++;\n                i++;\n                if (i \u003d\u003d input.length) {\n                    break;\n                }\n            }\n            System.out.print(count);\n        }\n\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2293",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        // put your code here\n        Scanner sc \u003d new Scanner(System.in);\n        String s \u003d sc.next();\n        int n \u003d sc.nextInt();\n        \n        System.out.println(n \u003e s.length() ? s : s.substring(n) + s.substring(0, n));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2294",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc \u003d new Scanner(System.in);\n\n        char[] input \u003d sc.nextLine().toCharArray();\n\n        int i \u003d 0;\n        while (i \u003c input.length) {\n            System.out.printf(\"%s%s\", input[i], input[i]);\n            i++;\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3287",
    "checked": false,
    "mode": 1,
    "answerStr": "\"avaJ ,olle\""
  },
  {
    "url": "https://hyperskill.org/learn/step/3288",
    "checked": false,
    "mode": 1,
    "answerStr": "\"SKILL\""
  },
  {
    "url": "https://hyperskill.org/learn/step/3789",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        int A \u003d scanner.nextInt();\n        int B \u003d scanner.nextInt();\n        int C \u003d scanner.nextInt();\n        int N \u003d scanner.nextInt();\n\n        char charUpper \u003d \u0027A\u0027;\n        char charLower \u003d \u0027a\u0027;\n        char charNew \u003d \u0027C\u0027;\n        int num \u003d 1;\n        int count;\n\n        int i \u003d 0;\n        while (i \u003c N) {\n            count \u003d A;\n            while (count \u003e 0 \u0026\u0026 i \u003c N) {\n                if (charUpper \u003d\u003d \u0027A\u0027) {\n                    charUpper \u003d \u0027B\u0027;\n                    System.out.print(\"A\");\n                } else {\n                    charUpper \u003d \u0027A\u0027;\n                    System.out.print(\"B\");\n                }\n                count--;\n                i++;\n            }\n\n            count \u003d B;\n            while (count \u003e 0 \u0026\u0026 i \u003c N) {\n                if (charLower \u003d\u003d \u0027a\u0027) {\n                    charLower \u003d \u0027b\u0027;\n                    System.out.print(\"a\");\n                } else {\n                    charLower \u003d \u0027a\u0027;\n                    System.out.print(\"b\");\n                }\n                count--;\n                i++;\n            }\n\n            count \u003d C;\n            while (count \u003e 0 \u0026\u0026 i \u003c N) {\n                if (num \u003d\u003d 1) {\n                    System.out.print(num);\n                    num++;\n                } else {\n                    System.out.print(num);\n                    num--;\n                }\n                count--;\n                i++;\n            }\n\n            if (A + B + C \u003d\u003d 0) {\n                if (charNew \u003d\u003d \u0027C\u0027) {\n                    charNew \u003d \u0027D\u0027;\n                    System.out.print(\"C\");\n                } else {\n                    charNew \u003d \u0027C\u0027;\n                    System.out.print(\"D\");\n                }\n                i++;\n            }\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3791",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner input \u003d new Scanner(System.in);\n        String word \u003d input.nextLine();\n        input.close();\n        int numInsertions \u003d countInsertions(word);\n        System.out.println(numInsertions);\n    }\n\n    public static int countInsertions(String word) {\n        char[] letters \u003d word.toCharArray();\n        int numInsertions \u003d 0;\n        for (int i \u003d 0; i \u003c letters.length - 2; i++) {\n            if (isProblematic(letters[i], letters[i + 1], letters[i + 2])) {\n                numInsertions++;\n                i++;\n            }\n        }\n        return numInsertions;\n    }\n\n    public static boolean isProblematic(char c1, char c2, char c3) {\n        return (isVowel(c1) \u0026\u0026 isVowel(c2) \u0026\u0026 isVowel(c3))\n                || (isConsonant(c1) \u0026\u0026 isConsonant(c2) \u0026\u0026 isConsonant(c3));\n    }\n\n    public static boolean isVowel(char c) {\n        return \"aeiouy\".indexOf(Character.toLowerCase(c)) !\u003d -1;\n    }\n\n    public static boolean isConsonant(char c) {\n        return !isVowel(c) \u0026\u0026 Character.isLetter(c);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3691",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"ftp\"",
      "\"smtp\"",
      "\"http\"",
      "\"https\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3726",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"23 dollars\"",
      "\"22 dollars\"",
      "\"5 dollars\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7582",
    "checked": false,
    "mode": 1,
    "answerStr": "Special metacharacters"
  },
  {
    "url": "https://hyperskill.org/learn/step/7584",
    "checked": false,
    "mode": 1,
    "answerStr": "?"
  },
  {
    "url": "https://hyperskill.org/learn/step/7589",
    "checked": false,
    "mode": 4,
    "answerStr": "9"
  },
  {
    "url": "https://hyperskill.org/learn/step/7590",
    "checked": false,
    "mode": 4,
    "answerStr": "4"
  },
  {
    "url": "https://hyperskill.org/learn/step/8986",
    "checked": false,
    "mode": 1,
    "answerStr": "matches zero or one occurrences of the preceding character."
  },
  {
    "url": "https://hyperskill.org/learn/step/3668",
    "checked": false,
    "mode": 1,
    "answerStr": "\\\\....."
  },
  {
    "url": "https://hyperskill.org/learn/step/3669",
    "checked": false,
    "mode": 1,
    "answerStr": "......"
  },
  {
    "url": "https://hyperskill.org/learn/step/3727",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"1 tree\"",
      "\"17 trees\"",
      "\"7 trees\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8987",
    "checked": false,
    "mode": 1,
    "answerStr": "two backslashes \\\\ before it."
  },
  {
    "url": "https://hyperskill.org/learn/step/8988",
    "checked": false,
    "mode": 1,
    "answerStr": "put three backslashes before it: the result is \"\\\\\\\\\""
  },
  {
    "url": "https://hyperskill.org/learn/step/3671",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "(cat|bat|rat)",
      "[bcr]at"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3698",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"v8\"",
      "\"J9\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3699",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"y\u003d7\"",
      "\"x\u003c5\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3700",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"1471\"",
      "\"1681\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3728",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"Hello.\"",
      "\"Hello,\"",
      "\"Hello!\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3729",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"regex\"",
      "\"[a-z]ege[a-z]\"",
      "\"[reg]egex\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3681",
    "checked": false,
    "mode": 1,
    "answerStr": "[0-9]+"
  },
  {
    "url": "https://hyperskill.org/learn/step/3683",
    "checked": false,
    "mode": 1,
    "answerStr": "It matches 1 or more repetitions of the preceding character."
  },
  {
    "url": "https://hyperskill.org/learn/step/3684",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "abbbbc",
      "abbc"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3692",
    "checked": false,
    "mode": 1,
    "answerStr": "1c1a3de4-c711-4e9c-bed2-e75fd69ce920"
  },
  {
    "url": "https://hyperskill.org/learn/step/3695",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "aa",
        "nameColumns": "ab+a",
        "check": false
      },
      {
        "nameRow": "aa",
        "nameColumns": "ab*a",
        "check": true
      },
      {
        "nameRow": "aa",
        "nameColumns": "ab{0,3}a",
        "check": true
      },
      {
        "nameRow": "aa",
        "nameColumns": "ab{3,}a",
        "check": false
      },
      {
        "nameRow": "aba",
        "nameColumns": "ab+a",
        "check": true
      },
      {
        "nameRow": "aba",
        "nameColumns": "ab*a",
        "check": true
      },
      {
        "nameRow": "aba",
        "nameColumns": "ab{0,3}a",
        "check": true
      },
      {
        "nameRow": "aba",
        "nameColumns": "ab{3,}a",
        "check": false
      },
      {
        "nameRow": "abbba",
        "nameColumns": "ab+a",
        "check": true
      },
      {
        "nameRow": "abbba",
        "nameColumns": "ab*a",
        "check": true
      },
      {
        "nameRow": "abbba",
        "nameColumns": "ab{0,3}a",
        "check": true
      },
      {
        "nameRow": "abbba",
        "nameColumns": "ab{3,}a",
        "check": true
      },
      {
        "nameRow": "abbbbba",
        "nameColumns": "ab+a",
        "check": true
      },
      {
        "nameRow": "abbbbba",
        "nameColumns": "ab*a",
        "check": true
      },
      {
        "nameRow": "abbbbba",
        "nameColumns": "ab{0,3}a",
        "check": false
      },
      {
        "nameRow": "abbbbba",
        "nameColumns": "ab{3,}a",
        "check": true
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/26046",
    "checked": false,
    "mode": 1,
    "answerStr": "String regex \u003d \"\\\\b\\\\S{5,11}\\\\b\";"
  },
  {
    "url": "https://hyperskill.org/learn/step/3675",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "[0-9]",
        "\\d"
      ],
      [
        "[A-Z]",
        "No such shorthand"
      ],
      [
        "[a-zA-Z_0-9]",
        "\\w"
      ],
      [
        "[^0-9]",
        "\\D"
      ],
      [
        "[ \\t\\n\\x0B\\f\\r]",
        "\\s"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3676",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "\\\\d",
        "matches all digits"
      ],
      [
        "\\\\s",
        "matches spaces"
      ],
      [
        "\\\\w",
        "matches alpha-numeric characters including \u0026#x27;_\u0026#x27;"
      ],
      [
        "\\\\S",
        "matches non-spaces"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3678",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"a2c\"",
      "\"77a\"",
      "\"b3\u0026\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3679",
    "checked": false,
    "mode": 1,
    "answerStr": "\\\\s represent a whitespace character including tab and newline"
  },
  {
    "url": "https://hyperskill.org/learn/step/3705",
    "checked": false,
    "mode": 1,
    "answerStr": "\"[0-9]\""
  },
  {
    "url": "https://hyperskill.org/learn/step/3706",
    "checked": false,
    "mode": 1,
    "answerStr": "\"[a-zA-Z_0-9]\""
  },
  {
    "url": "https://hyperskill.org/learn/step/18005",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "Registers",
      "Disk drives",
      "Cache",
      "Main memory"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18006",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Access time",
      "Capacity"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18008",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Access time",
        "the time interval between the read/write request and the availability of the data in computer memory"
      ],
      [
        "Capacity",
        "the total amount/volume of data that the memory can store"
      ],
      [
        "Cost per bit",
        "the cost to manufacture one bit of that particular memory"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18009",
    "checked": false,
    "mode": 1,
    "answerStr": "reference variables of a loop in each iteration"
  },
  {
    "url": "https://hyperskill.org/learn/step/18056",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It is used to store data from the secondary storage so that the CPU can access it.",
      "It is used to store the data that is used specifically at that time."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/21578",
    "checked": false,
    "mode": 1,
    "answerStr": "Heap memory"
  },
  {
    "url": "https://hyperskill.org/learn/step/21580",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Memory leakage",
        "Occurs when an unused variable holds space"
      ],
      [
        "Garbage collector",
        "Automatically frees up memory that is no longer referenced or used"
      ],
      [
        "Memory fragmentation",
        "Side effect of random memory allocation"
      ],
      [
        "Stack overflow",
        "Caused by the program\u0027s excessive demand for more memory space than allocated"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/21582",
    "checked": false,
    "mode": 1,
    "answerStr": "When unused memory is not freed"
  },
  {
    "url": "https://hyperskill.org/learn/step/21584",
    "checked": false,
    "mode": 1,
    "answerStr": "When using heap memory allocation"
  },
  {
    "url": "https://hyperskill.org/learn/step/21586",
    "checked": false,
    "mode": 1,
    "answerStr": "Stack memory"
  },
  {
    "url": "https://hyperskill.org/learn/step/21587",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The overall memory on the system",
      "The architecture of the computer on which the program runs",
      "The language used to write the program"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/19214",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "PermGen stored the String pool up to the Java 7",
      "PermGen used to be a section of the heap until Java 8"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2182",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        System.out.println(scanner.nextDouble() / scanner.nextInt());\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2186",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        double x \u003d scanner.nextDouble();\n        \n        System.out.println(x * x * x + x * x + x + 1);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2673",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "float",
      "double"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2703",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        double first \u003d scanner.nextDouble();\n        double second \u003d scanner.nextDouble();\n        System.out.println(second - first);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2704",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // put your code here\n        double a \u003d scanner.nextDouble();\n        double b \u003d scanner.nextDouble();\n        double c \u003d scanner.nextDouble();\n\n        System.out.println((c - b) / a);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3454",
    "checked": false,
    "mode": 1,
    "answerStr": "2.7"
  },
  {
    "url": "https://hyperskill.org/learn/step/15165",
    "checked": false,
    "mode": 1,
    "answerStr": "RAM"
  },
  {
    "url": "https://hyperskill.org/learn/step/15166",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "System.gc()",
      "Runtime.getRuntime().gc()"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15167",
    "checked": false,
    "mode": 1,
    "answerStr": "The GC works automatically while a program is running"
  },
  {
    "url": "https://hyperskill.org/learn/step/15169",
    "checked": false,
    "mode": 1,
    "answerStr": "Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()"
  },
  {
    "url": "https://hyperskill.org/learn/step/15170",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "After step 1",
        "None of the mentioned objects"
      ],
      [
        "After step 2",
        "bookNames and bookPages arrays"
      ],
      [
        "After step 3",
        "Objects of the Book class"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5545",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "0",
      "1"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5548",
    "checked": false,
    "mode": 4,
    "answerStr": "6"
  },
  {
    "url": "https://hyperskill.org/learn/step/5549",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "2",
        "010"
      ],
      [
        "4",
        "100"
      ],
      [
        "6",
        "110"
      ],
      [
        "7",
        "111"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5550",
    "checked": false,
    "mode": 1,
    "answerStr": "1010"
  },
  {
    "url": "https://hyperskill.org/learn/step/5551",
    "checked": false,
    "mode": 1,
    "answerStr": "\u003cpre\u003e1000\u003c/pre\u003e"
  },
  {
    "url": "https://hyperskill.org/learn/step/5552",
    "checked": false,
    "mode": 1,
    "answerStr": "110"
  },
  {
    "url": "https://hyperskill.org/learn/step/5626",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "100010",
        "34"
      ],
      [
        "100110",
        "38"
      ],
      [
        "100101",
        "37"
      ],
      [
        "101101",
        "45"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3270",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "int max \u003d a \u003c b ? b : a;",
      "int max \u003d a \u003e b ? a : b;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2670",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "long",
      "int",
      "short",
      "byte"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2675",
    "checked": false,
    "mode": 1,
    "answerStr": "d"
  },
  {
    "url": "https://hyperskill.org/learn/step/10983",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "public static void findAirports(String city) { /*...*/ }",
      "public void findAirports(String city) { /*...*/ }"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10987",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A method name",
      "Return type, or void",
      "A list of parameters",
      "A body of the method",
      "Modifiers"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2709",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "int[] numbers \u003d new int[10];",
      "int numbers[] \u003d new int[10];"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/38375",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "connects computers around the world",
        "nameColumns": "Internet",
        "check": true
      },
      {
        "nameRow": "connects computers around the world",
        "nameColumns": "World Wide Web",
        "check": false
      },
      {
        "nameRow": "uses HTTP",
        "nameColumns": "Internet",
        "check": false
      },
      {
        "nameRow": "uses HTTP",
        "nameColumns": "World Wide Web",
        "check": true
      },
      {
        "nameRow": "distributes data that contains links to other data",
        "nameColumns": "Internet",
        "check": false
      },
      {
        "nameRow": "distributes data that contains links to other data",
        "nameColumns": "World Wide Web",
        "check": true
      },
      {
        "nameRow": "originated in late 1960s",
        "nameColumns": "Internet",
        "check": true
      },
      {
        "nameRow": "originated in late 1960s",
        "nameColumns": "World Wide Web",
        "check": false
      },
      {
        "nameRow": "invented in late 1980s",
        "nameColumns": "Internet",
        "check": false
      },
      {
        "nameRow": "invented in late 1980s",
        "nameColumns": "World Wide Web",
        "check": true
      },
      {
        "nameRow": "uses TCP/IP",
        "nameColumns": "Internet",
        "check": true
      },
      {
        "nameRow": "uses TCP/IP",
        "nameColumns": "World Wide Web",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13981",
    "checked": false,
    "mode": 1,
    "answerStr": "Because HTTP\u0027s data transfer was unencrypted"
  },
  {
    "url": "https://hyperskill.org/learn/step/6570",
    "checked": false,
    "mode": 1,
    "answerStr": "Client-Server"
  },
  {
    "url": "https://hyperskill.org/learn/step/6572",
    "checked": false,
    "mode": 1,
    "answerStr": "HTTPS provides secure data transfer"
  },
  {
    "url": "https://hyperskill.org/learn/step/6573",
    "checked": false,
    "mode": 1,
    "answerStr": "Yes"
  },
  {
    "url": "https://hyperskill.org/learn/step/6574",
    "checked": false,
    "mode": 1,
    "answerStr": "She should transfer to HTTPS to make connections secure"
  },
  {
    "url": "https://hyperskill.org/learn/step/6575",
    "checked": false,
    "mode": 5,
    "answerStr": "https"
  },
  {
    "url": "https://hyperskill.org/learn/step/6576",
    "checked": false,
    "mode": 1,
    "answerStr": "Data transfer on this resource occurs without encryption"
  },
  {
    "url": "https://hyperskill.org/learn/step/15859",
    "checked": false,
    "mode": 1,
    "answerStr": "set of rules by which programs or devices communicate with each other, exchange data, and handle errors"
  },
  {
    "url": "https://hyperskill.org/learn/step/26569",
    "checked": false,
    "mode": 1,
    "answerStr": "HyperText Transfer Protocol"
  },
  {
    "url": "https://hyperskill.org/learn/step/26570",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "HTTP/0.9",
        "1991"
      ],
      [
        "HTTP/1.1",
        "1999"
      ],
      [
        "HTTP/2.0",
        "2015"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/34706",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "web applications",
      "websites"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13933",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Frontend development",
        "client-side programming"
      ],
      [
        "Backend development",
        "server-side programming"
      ],
      [
        "Non-existent name",
        "side programming"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13936",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "Write the basic business logic of the application",
        "nameColumns": "Frontend developer",
        "check": false
      },
      {
        "nameRow": "Write the basic business logic of the application",
        "nameColumns": "Backend developer",
        "check": true
      },
      {
        "nameRow": "Make the site display correctly on devices with different screen sizes",
        "nameColumns": "Frontend developer",
        "check": true
      },
      {
        "nameRow": "Make the site display correctly on devices with different screen sizes",
        "nameColumns": "Backend developer",
        "check": false
      },
      {
        "nameRow": "Organize information storage in databases",
        "nameColumns": "Frontend developer",
        "check": false
      },
      {
        "nameRow": "Organize information storage in databases",
        "nameColumns": "Backend developer",
        "check": true
      },
      {
        "nameRow": "Write  the logic of interaction with users",
        "nameColumns": "Frontend developer",
        "check": true
      },
      {
        "nameRow": "Write  the logic of interaction with users",
        "nameColumns": "Backend developer",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13938",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "Client sends a request to the server to retrieve or modify data using the HTTP protocol.",
      "Backend processes this request and returns the response via HTTP.",
      "Frontend receives the response and processes it, and then displays the result to the user."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/29979",
    "checked": false,
    "mode": 1,
    "answerStr": "The code outputs a message to the browser\u0027s console."
  },
  {
    "url": "https://hyperskill.org/learn/step/39534",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "shoutToTheWorld",
      "console.log",
      "()"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/32687",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "var",
      "console.log"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/32639",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "let",
      "console.log"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8018",
    "checked": false,
    "mode": 1,
    "answerStr": "scripts"
  },
  {
    "url": "https://hyperskill.org/learn/step/8019",
    "checked": false,
    "mode": 1,
    "answerStr": "ECMAScript"
  },
  {
    "url": "https://hyperskill.org/learn/step/8020",
    "checked": false,
    "mode": 3,
    "answerStr": "console.log(\"I like JavaScript!\");\n\n\n\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/16140",
    "checked": false,
    "mode": 1,
    "answerStr": "It was just a marketing move, JavaScript is not related to Java"
  },
  {
    "url": "https://hyperskill.org/learn/step/2693",
    "checked": false,
    "mode": 1,
    "answerStr": "f"
  },
  {
    "url": "https://hyperskill.org/learn/step/2714",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "1",
      "3"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2973",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "org.demo.B",
      "org.demo.A",
      "java.lang.String"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2175",
    "checked": false,
    "mode": 1,
    "answerStr": "val \u003d 50, str \u003d \"some-value\""
  },
  {
    "url": "https://hyperskill.org/learn/step/2579",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "@CreatedBy(name \u003d \"John Coder\")",
      "@CreatedBy(name \u003d \"Unknown\")"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2583",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "@Entity",
      "@Entity(name \u003d \"MyEntity\")"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2003",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The method must not have the modifier static.",
      "The return type should be the same type or a subtype of the return type declared in the method of the superclass."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/45668",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "class Task implements Question {}",
        "Allows declared class use all the properties and methods of the Question interface"
      ],
      [
        "interface Question {}",
        "Interface declaration. Multiple classes now can implement and build functionality based on this interface"
      ],
      [
        "class Task {}",
        "Declaring class without interface inheritance"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/34745",
    "checked": false,
    "mode": 9,
    "answerListArr": [
      [
        "class Dog implements Animal {",
        "6",
        "0"
      ],
      [
        "System.out.println(dog.makeSound());",
        "3",
        "1"
      ],
      [
        "public String makeSound() {",
        "9",
        "0"
      ],
      [
        "String makeSound();",
        "0",
        "0"
      ],
      [
        "}",
        "2",
        "1"
      ],
      [
        "public static void main(String[] args) {",
        "13",
        "2"
      ],
      [
        "interface Animal {",
        "8",
        "1"
      ],
      [
        "}",
        "11",
        "0"
      ],
      [
        "}",
        "12",
        "0"
      ],
      [
        "}",
        "5",
        "1"
      ],
      [
        "Animal dog \u003d new Dog();",
        "10",
        "2"
      ],
      [
        "}",
        "1",
        "2"
      ],
      [
        "public class Main {",
        "4",
        "1"
      ],
      [
        "return \"Woof!\";",
        "7",
        "0"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1952",
    "checked": false,
    "mode": 1,
    "answerStr": "abstract, default, private or static methods, and final static fields"
  },
  {
    "url": "https://hyperskill.org/learn/step/2119",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It\u0027s possible to create an instance of an interface.",
      "A class that implements an interface must implement default and static methods declared in the interface."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3432",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "static methods",
      "non-static methods"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2483",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "NullPointerException",
        "nameColumns": "Checked",
        "check": false
      },
      {
        "nameRow": "NullPointerException",
        "nameColumns": "Unchecked",
        "check": true
      },
      {
        "nameRow": "RuntimeException",
        "nameColumns": "Checked",
        "check": false
      },
      {
        "nameRow": "RuntimeException",
        "nameColumns": "Unchecked",
        "check": true
      },
      {
        "nameRow": "Exception",
        "nameColumns": "Checked",
        "check": true
      },
      {
        "nameRow": "Exception",
        "nameColumns": "Unchecked",
        "check": false
      },
      {
        "nameRow": "IOException",
        "nameColumns": "Checked",
        "check": true
      },
      {
        "nameRow": "IOException",
        "nameColumns": "Unchecked",
        "check": false
      },
      {
        "nameRow": "IndexOutOfBoundsException",
        "nameColumns": "Checked",
        "check": false
      },
      {
        "nameRow": "IndexOutOfBoundsException",
        "nameColumns": "Unchecked",
        "check": true
      },
      {
        "nameRow": "ClassCastException",
        "nameColumns": "Checked",
        "check": false
      },
      {
        "nameRow": "ClassCastException",
        "nameColumns": "Unchecked",
        "check": true
      },
      {
        "nameRow": "ClassNotFoundException",
        "nameColumns": "Checked",
        "check": true
      },
      {
        "nameRow": "ClassNotFoundException",
        "nameColumns": "Unchecked",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8983",
    "checked": false,
    "mode": 1,
    "answerStr": "terminal returns the name of the directory you are currently using"
  },
  {
    "url": "https://hyperskill.org/learn/step/10150",
    "checked": false,
    "mode": 1,
    "answerStr": "A step-by-step sequence of actions one needs to perform to achieve some useful result."
  },
  {
    "url": "https://hyperskill.org/learn/step/20725",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A set of assembly instructions for building a piece of furniture",
      "A recipe for baking a cake",
      "A guide “How to wash a cat”",
      "A list of instructions provided by a GPS navigator"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20726",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Learn to leverage existing algorithms from libraries for efficient solutions, and also develop the skill to design and implement your own algorithms when necessary.",
      "To enhance problem-solving skills, enabling you to tackle a wide array of challenges in programming.",
      "Learn to harness algorithmic efficiency, to optimize code performance and make the most of computing resources.",
      "To acquire the capability to navigate complex problems with structured approaches, leading to streamlined solutions that are easier to implement and maintain."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20727",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Hamlet left the kettle without water",
      "Hamlet didn\u0027t add coffee beans",
      "Hamlet forgot to add sugar"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20728",
    "checked": false,
    "mode": 4,
    "answerStr": "11"
  },
  {
    "url": "https://hyperskill.org/learn/step/34939",
    "checked": false,
    "mode": 1,
    "answerStr": "EABFCD"
  },
  {
    "url": "https://hyperskill.org/learn/step/4994",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It describes the upper bound or worst-case scenario of an algorithm\u0027s growth rate concerning input size.",
      "It can be used to measure the efficiency of algorithms."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/13993",
    "checked": false,
    "mode": 1,
    "answerStr": "$O(n^2)$"
  },
  {
    "url": "https://hyperskill.org/learn/step/13994",
    "checked": false,
    "mode": 1,
    "answerStr": "The first"
  },
  {
    "url": "https://hyperskill.org/learn/step/1973",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "An object is an instance of some class.",
      "Classes are used to create objects"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2967",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A class describes a common structure for a set of objects.",
      "Fields store the state of an object."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17538",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "car brand",
      "passenger capacity",
      "price"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/41809",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "Integer",
      "valueOf",
      "toString"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/37132",
    "checked": false,
    "mode": 9,
    "answerListArr": [
      [
        "}",
        "6",
        "0"
      ],
      [
        "}",
        "7",
        "1"
      ],
      [
        "System.out.println(\"Unboxed Integer: \" + unboxedInt);",
        "4",
        "2"
      ],
      [
        "System.out.println(\"Boxed Integer: \" + boxedInt);",
        "5",
        "2"
      ],
      [
        "Integer boxedInt \u003d Integer.valueOf(10);",
        "3",
        "2"
      ],
      [
        "int unboxedInt \u003d boxedInt.intValue();",
        "2",
        "2"
      ],
      [
        "public class Main {",
        "0",
        "1"
      ],
      [
        "public static void main(String[] args) {",
        "1",
        "0"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/1964",
    "checked": false,
    "mode": 1,
    "answerStr": "Character; Integer"
  },
  {
    "url": "https://hyperskill.org/learn/step/2147",
    "checked": false,
    "mode": 4,
    "answerStr": "8"
  },
  {
    "url": "https://hyperskill.org/learn/step/2148",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Long val \u003d 4321L;",
      "Long val \u003d Long.parseLong(\"4321\");",
      "Long val \u003d Long.valueOf(\"4321\");"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2805",
    "checked": false,
    "mode": 1,
    "answerStr": "NullPointerException"
  },
  {
    "url": "https://hyperskill.org/learn/step/11515",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Enumeration helps to avoid errors in the code.",
      "Enum makes the code readable and concise.",
      "An enum type enables a variable to be a value from a set of predefined constants."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/41617",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "mathematical",
      "essential",
      "unnecessary",
      "Encapsulation",
      "external operations",
      "Abstract Data Types (ADTs)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/41612",
    "checked": false,
    "mode": 1,
    "answerStr": "Overall behavior and functions of data structures"
  },
  {
    "url": "https://hyperskill.org/learn/step/41615",
    "checked": false,
    "mode": 1,
    "answerStr": "ADTs focus on overall behavior, while CDTs emphasize precise representations."
  },
  {
    "url": "https://hyperskill.org/learn/step/41611",
    "checked": false,
    "mode": 1,
    "answerStr": "Combining data and code into a single entity"
  },
  {
    "url": "https://hyperskill.org/learn/step/32994",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "push",
      "pop",
      "top",
      "is_empty"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/33130",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "push",
      "pop",
      "peek"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5291",
    "checked": false,
    "mode": 1,
    "answerStr": "last-in-first-out (LIFO)"
  },
  {
    "url": "https://hyperskill.org/learn/step/5292",
    "checked": false,
    "mode": 1,
    "answerStr": "Plates stacked over one another."
  },
  {
    "url": "https://hyperskill.org/learn/step/5296",
    "checked": false,
    "mode": 1,
    "answerStr": "c a b"
  },
  {
    "url": "https://hyperskill.org/learn/step/24706",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "a plate with pancakes",
      "a stack of CDs"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4805",
    "checked": false,
    "mode": 5,
    "answerStr": "https://github.com/yakushevso"
  },
  {
    "url": "https://hyperskill.org/learn/step/4806",
    "checked": false,
    "mode": 5,
    "answerStr": "https://github.com/yakushevso/my-first-project-with-java"
  },
  {
    "url": "https://hyperskill.org/learn/step/4807",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Issues",
        "contains ideas, enhancements, bugs, questions, and so on."
      ],
      [
        "Pull requests",
        "contains proposals to make some changes in the project"
      ],
      [
        "Insight",
        "contains some stats and information about this repository."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4808",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Create an issue.",
      "Open files within the code section."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/16091",
    "checked": false,
    "mode": 1,
    "answerStr": "a container for project and its data"
  },
  {
    "url": "https://hyperskill.org/learn/step/21849",
    "checked": false,
    "mode": 1,
    "answerStr": "main"
  },
  {
    "url": "https://hyperskill.org/learn/step/21850",
    "checked": false,
    "mode": 5,
    "answerStr": ".gitignore"
  },
  {
    "url": "https://hyperskill.org/learn/step/21851",
    "checked": false,
    "mode": 5,
    "answerStr": "https://github.com/frk1/steamhourboostv2/issues/68"
  },
  {
    "url": "https://hyperskill.org/learn/step/3704",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"\\\\w\\\\w\\\\w-\\\\w\\\\w\\\\w\"",
      "\"\\\\d\\\\d\\\\w\\\\W\\\\d\\\\d\\\\w\"",
      "\"\\\\S\\\\S\\\\S\\\\S\\\\S\\\\S\\\\S\""
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/36800",
    "checked": false,
    "mode": 9,
    "answerListArr": [
      [
        "git add .",
        "6",
        "0"
      ],
      [
        "# Check status",
        "5",
        "0"
      ],
      [
        "# Commit the changes",
        "4",
        "0"
      ],
      [
        "git commit -m \"Initial commit\"",
        "0",
        "0"
      ],
      [
        "# Add all files to the staging area",
        "2",
        "0"
      ],
      [
        "git init",
        "3",
        "0"
      ],
      [
        "# Initialize a new Git repository",
        "1",
        "0"
      ],
      [
        "git status",
        "7",
        "0"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/32997",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "git init",
      "git config",
      "git clone",
      "git status"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10896",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "on your hard drive",
      "on a special online service"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10897",
    "checked": false,
    "mode": 1,
    "answerStr": "repository"
  },
  {
    "url": "https://hyperskill.org/learn/step/10898",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "track changes in your code",
      "record changes in files",
      "add files to GitHub"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11056",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "local",
      "remote"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/16119",
    "checked": false,
    "mode": 1,
    "answerStr": "a set of console utilities to store, control, change, and merge your codes"
  },
  {
    "url": "https://hyperskill.org/learn/step/21112",
    "checked": false,
    "mode": 1,
    "answerStr": "git config --global user.name \"Ayubu\""
  },
  {
    "url": "https://hyperskill.org/learn/step/10902",
    "checked": false,
    "mode": 1,
    "answerStr": "the state of the repository at a specific point in time"
  },
  {
    "url": "https://hyperskill.org/learn/step/10905",
    "checked": false,
    "mode": 1,
    "answerStr": "a special directory that contains programs in development"
  },
  {
    "url": "https://hyperskill.org/learn/step/10907",
    "checked": false,
    "mode": 1,
    "answerStr": "-m \"commit text\""
  },
  {
    "url": "https://hyperskill.org/learn/step/10908",
    "checked": false,
    "mode": 5,
    "answerStr": "git status"
  },
  {
    "url": "https://hyperskill.org/learn/step/17536",
    "checked": false,
    "mode": 1,
    "answerStr": "git add program.py"
  },
  {
    "url": "https://hyperskill.org/learn/step/17537",
    "checked": false,
    "mode": 1,
    "answerStr": "git commit"
  },
  {
    "url": "https://hyperskill.org/learn/step/12301",
    "checked": false,
    "mode": 1,
    "answerStr": "git clone"
  },
  {
    "url": "https://hyperskill.org/learn/step/12302",
    "checked": false,
    "mode": 1,
    "answerStr": "git push"
  },
  {
    "url": "https://hyperskill.org/learn/step/12303",
    "checked": false,
    "mode": 1,
    "answerStr": "git push origin current_tasks"
  },
  {
    "url": "https://hyperskill.org/learn/step/12304",
    "checked": false,
    "mode": 1,
    "answerStr": "git pull"
  },
  {
    "url": "https://hyperskill.org/learn/step/12305",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "git push origin main",
      "git clone https://github.com/my_repository/code.git",
      "git commit"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/12306",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "All team members have access to the current version of the project",
      "It stores all the project data in one place"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/34861",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "pull",
      "origin"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11190",
    "checked": false,
    "mode": 1,
    "answerStr": "checks out if the branch exists"
  },
  {
    "url": "https://hyperskill.org/learn/step/11192",
    "checked": false,
    "mode": 1,
    "answerStr": "a copy of the original project"
  },
  {
    "url": "https://hyperskill.org/learn/step/11193",
    "checked": false,
    "mode": 5,
    "answerStr": "new_branch"
  },
  {
    "url": "https://hyperskill.org/learn/step/11195",
    "checked": false,
    "mode": 5,
    "answerStr": "git branch -d new_branch"
  },
  {
    "url": "https://hyperskill.org/learn/step/19363",
    "checked": false,
    "mode": 5,
    "answerStr": "git checkout my_branch"
  },
  {
    "url": "https://hyperskill.org/learn/step/23831",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "git commit -m \"Awesome routine! Finally done!” ",
      "git checkout main",
      "git checkout experimental",
      "git branch experimental",
      "git add Tom-Paris-holodeck-routine.hs",
      "git branch"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/23832",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "git merge experimental",
      "git branch",
      "git status",
      "git checkout redundant",
      "git checkout main",
      "git branch -d redundant"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11446",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "develop",
      "main"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11447",
    "checked": false,
    "mode": 1,
    "answerStr": "develop"
  },
  {
    "url": "https://hyperskill.org/learn/step/11449",
    "checked": false,
    "mode": 5,
    "answerStr": "git flow init"
  },
  {
    "url": "https://hyperskill.org/learn/step/11450",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "develop",
        "most recent published changes"
      ],
      [
        "master",
        "the source code ready to production"
      ],
      [
        "",
        "all files from your desktop"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11451",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "initialize a gitflow repository",
      "install gitflow"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11452",
    "checked": false,
    "mode": 1,
    "answerStr": "master"
  },
  {
    "url": "https://hyperskill.org/learn/step/16848",
    "checked": false,
    "mode": 1,
    "answerStr": "merge all changes into master"
  },
  {
    "url": "https://hyperskill.org/learn/step/34862",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "main",
      "develop"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11454",
    "checked": false,
    "mode": 1,
    "answerStr": "git flow release publish my_release 1.0"
  },
  {
    "url": "https://hyperskill.org/learn/step/11459",
    "checked": false,
    "mode": 1,
    "answerStr": "git flow release pull"
  },
  {
    "url": "https://hyperskill.org/learn/step/11460",
    "checked": false,
    "mode": 1,
    "answerStr": "develop"
  },
  {
    "url": "https://hyperskill.org/learn/step/11455",
    "checked": false,
    "mode": 1,
    "answerStr": "pushed on a server"
  },
  {
    "url": "https://hyperskill.org/learn/step/11457",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "create a feature branch",
      "merge feature into develop",
      "merge the final version into master",
      "initialize a repository",
      "work on final steps in release branch",
      "start working on the develop branch"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11458",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "feature",
        "new methods, functions and properties"
      ],
      [
        "hotfix",
        "errors to be mended"
      ],
      [
        "release",
        "the source code almost ready to production"
      ],
      [
        "",
        "most recent published changes"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11678",
    "checked": false,
    "mode": 1,
    "answerStr": "git flow feature finish new_feature"
  },
  {
    "url": "https://hyperskill.org/learn/step/17674",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "feature",
      "release",
      "hotfix"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11542",
    "checked": false,
    "mode": 1,
    "answerStr": "move some changes to the target branch and rewrite history"
  },
  {
    "url": "https://hyperskill.org/learn/step/11543",
    "checked": false,
    "mode": 1,
    "answerStr": "their whole history is preserved"
  },
  {
    "url": "https://hyperskill.org/learn/step/11544",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "git merge",
      "git rebase"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11545",
    "checked": false,
    "mode": 5,
    "answerStr": "pick"
  },
  {
    "url": "https://hyperskill.org/learn/step/11546",
    "checked": false,
    "mode": 5,
    "answerStr": "reword"
  },
  {
    "url": "https://hyperskill.org/learn/step/11547",
    "checked": false,
    "mode": 1,
    "answerStr": "$ git checkout feature"
  },
  {
    "url": "https://hyperskill.org/learn/step/11548",
    "checked": false,
    "mode": 1,
    "answerStr": "simplifies change history"
  },
  {
    "url": "https://hyperskill.org/learn/step/11463",
    "checked": false,
    "mode": 1,
    "answerStr": "saving your current project version"
  },
  {
    "url": "https://hyperskill.org/learn/step/11464",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "staged",
      "modified",
      "committed"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11465",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "change files in working directory",
      "add files to the staging area",
      "commit changes"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11467",
    "checked": false,
    "mode": 1,
    "answerStr": "settings for working with your repository"
  },
  {
    "url": "https://hyperskill.org/learn/step/11679",
    "checked": false,
    "mode": 1,
    "answerStr": "project version image"
  },
  {
    "url": "https://hyperskill.org/learn/step/10912",
    "checked": false,
    "mode": 1,
    "answerStr": "any user who has access to the repository"
  },
  {
    "url": "https://hyperskill.org/learn/step/10913",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "git log",
        "shows the list of all commits and their IDs"
      ],
      [
        "commit --amend",
        "changes commit after making it"
      ],
      [
        "git revert",
        "rolls back all changes made in the commit"
      ],
      [
        "git show",
        "shows what\u0027s new in the commit"
      ],
      [
        "git checkout",
        " switch to a branch or a commit"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/10915",
    "checked": false,
    "mode": 5,
    "answerStr": "git commit --amend"
  },
  {
    "url": "https://hyperskill.org/learn/step/10917",
    "checked": false,
    "mode": 1,
    "answerStr": "only the new_file.txt with its text"
  },
  {
    "url": "https://hyperskill.org/learn/step/10918",
    "checked": false,
    "mode": 5,
    "answerStr": "The algorithm of the future project will be described here."
  },
  {
    "url": "https://hyperskill.org/learn/step/16845",
    "checked": false,
    "mode": 1,
    "answerStr": "git diff"
  },
  {
    "url": "https://hyperskill.org/learn/step/11535",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "commit hash",
      "author\u0027s name",
      "commit time and date"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11536",
    "checked": false,
    "mode": 1,
    "answerStr": "finds commits with the keyword in the description"
  },
  {
    "url": "https://hyperskill.org/learn/step/11539",
    "checked": false,
    "mode": 1,
    "answerStr": "all commits with changes in code.py"
  },
  {
    "url": "https://hyperskill.org/learn/step/11534",
    "checked": false,
    "mode": 1,
    "answerStr": "git log -G new code.py"
  },
  {
    "url": "https://hyperskill.org/learn/step/11537",
    "checked": false,
    "mode": 1,
    "answerStr": "Commit message with changed files list"
  },
  {
    "url": "https://hyperskill.org/learn/step/11538",
    "checked": false,
    "mode": 1,
    "answerStr": "git log -n 1 code.py"
  },
  {
    "url": "https://hyperskill.org/learn/step/11540",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "git show",
      "git log"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2490",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Bytecode verifier",
      "Garbage collector",
      "Class loader",
      "Bytecode interpreter and/or just-in-time (JIT) compiler"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/30965",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Cache memory acts as a buffer between CPU and main memory.",
      "ROM (Read Only Memory) falls under primary memory."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18050",
    "checked": false,
    "mode": 1,
    "answerStr": "Dynamic Random Access Memory"
  },
  {
    "url": "https://hyperskill.org/learn/step/18051",
    "checked": false,
    "mode": 1,
    "answerStr": "the registers and the main memory"
  },
  {
    "url": "https://hyperskill.org/learn/step/18052",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Registers",
        "Fastest and smallest memory built into the CPU"
      ],
      [
        "Cache",
        "Memory that is inserted in between the CPU and main memory"
      ],
      [
        "Non-Volatile Memory",
        "Memory that can store data permanently even when power is not supplied"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18053",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Hard disk",
      "Solid State Drives",
      "DVD"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18054",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Address register",
        "holds addresses"
      ],
      [
        "Data register",
        "holds data in the form of bits for integers, characters, an array of bits, etc"
      ],
      [
        "Condition register",
        "holds truth value; a boolean"
      ],
      [
        "Instruction register",
        "holds the instructions that are being executed by the processor"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18055",
    "checked": false,
    "mode": 1,
    "answerStr": "Secondary storage"
  },
  {
    "url": "https://hyperskill.org/learn/step/5136",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "local variables",
      "return address of the method",
      "parameters"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6726",
    "checked": false,
    "mode": 1,
    "answerStr": "the method is completed"
  },
  {
    "url": "https://hyperskill.org/learn/step/6728",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "push main frame",
      "push printMult frame",
      "pop main frame",
      "pop mult frame",
      "push mult frame",
      "pop printMult frame"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6729",
    "checked": false,
    "mode": 1,
    "answerStr": "g()"
  },
  {
    "url": "https://hyperskill.org/learn/step/15164",
    "checked": false,
    "mode": 1,
    "answerStr": "To clean the memory from unused objects"
  },
  {
    "url": "https://hyperskill.org/learn/step/13934",
    "checked": false,
    "mode": 1,
    "answerStr": "Full-stack developer"
  },
  {
    "url": "https://hyperskill.org/learn/step/13937",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "XML",
      "HTML"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20511",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Server-side",
      "Client-side"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/25521",
    "checked": false,
    "mode": 1,
    "answerStr": "JSON"
  },
  {
    "url": "https://hyperskill.org/learn/step/19907",
    "checked": false,
    "mode": 1,
    "answerStr": "Batch script - chain of commands in batch file on Windows OS"
  },
  {
    "url": "https://hyperskill.org/learn/step/14851",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "misunderstanding requirements as they were not clear"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3228",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "7000",
      "\u0027a\u0027",
      "\u00273\u0027"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3230",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "\"abc\" is a correct string literal",
      "10 is a correct  integer literal"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/50316",
    "checked": false,
    "mode": 9,
    "answerListArr": [
      [
        "public class Main {",
        "0",
        "0"
      ],
      [
        "}",
        "4",
        "1"
      ],
      [
        "int a \u003d sc.nextInt();",
        "6",
        "2"
      ],
      [
        "sc.close();",
        "2",
        "2"
      ],
      [
        "public static void main(String[] args) {",
        "5",
        "2"
      ],
      [
        "System.out.println(a * a);",
        "3",
        "2"
      ],
      [
        "Scanner sc \u003d new Scanner(System.in);",
        "1",
        "1"
      ],
      [
        "}",
        "7",
        "0"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2919",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "just_a_value",
      "errorText",
      "value"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/41187",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String args[]) {\n        // Create a Scanner object to read input\n        Scanner in \u003d new Scanner(System.in);\n\n        // Read the next integer\n        int n \u003d in.nextInt(); \n\n        // Compute and print the square of n\n        System.out.println(n * n);\n\n        // Compute and print the cube of n\n        System.out.println(n * n * n);\n\n        // Compute and print the fourth power of n\n        System.out.println(n * n * n * n);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2700",
    "checked": false,
    "mode": 1,
    "answerStr": "byte"
  },
  {
    "url": "https://hyperskill.org/learn/step/3453",
    "checked": false,
    "mode": 1,
    "answerStr": "4.0"
  },
  {
    "url": "https://hyperskill.org/learn/step/3387",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "boolean b \u003d true;",
      "boolean b \u003d false;"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2225",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        // start coding here\n        int count \u003d 0;\n        while (scanner.nextInt() !\u003d 0) {\n            count++;\n        }\n        System.out.println(count);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3408",
    "checked": false,
    "mode": 1,
    "answerStr": "Program will not run"
  },
  {
    "url": "https://hyperskill.org/learn/step/3281",
    "checked": false,
    "mode": 1,
    "answerStr": "for (int i \u003d 3; i \u003c chars.length; i++) { System.out.println(chars[i]); }"
  },
  {
    "url": "https://hyperskill.org/learn/step/2688",
    "checked": false,
    "mode": 1,
    "answerStr": "Nothing because there is a compile error"
  },
  {
    "url": "https://hyperskill.org/learn/step/2712",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "str.charAt(3)",
        "t"
      ],
      [
        "str.substring(5, 6)",
        "a"
      ],
      [
        "str.charAt(12)",
        "An exception occurs."
      ],
      [
        "str.get(0)",
        "This code cannot be compiled."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2488",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Source code",
        "usually, developers write this code"
      ],
      [
        "Bytecode",
        "the result of compilation"
      ],
      [
        "Native code",
        "computers understand this code"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2948",
    "checked": false,
    "mode": 1,
    "answerStr": "d"
  },
  {
    "url": "https://hyperskill.org/learn/step/2250",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "to group classes",
      "to control access of classes and fields (together with access modifiers)",
      "to prevent the conflict of class names"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2255",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "org.hyperskill.java.packages",
      "java.lang"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2974",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "java.lang.String",
      "org.demo.mypackage1.C"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3401",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Every class has a constructor.",
      "A new object is created by invoking a constructor."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3458",
    "checked": false,
    "mode": 1,
    "answerStr": "a no-argument constructor"
  },
  {
    "url": "https://hyperskill.org/learn/step/2980",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "1",
      "4"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2203",
    "checked": false,
    "mode": 1,
    "answerStr": "protected for fields and methods"
  },
  {
    "url": "https://hyperskill.org/learn/step/3045",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "c",
      "e"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3049",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "public",
      "protected"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3051",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "4",
      "6"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3054",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A",
      "B",
      "D"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3055",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "D",
      "E"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3043",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "to access fields of the base class",
      "to invoke methods and constructors of the base class"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/31135",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The \u0027shape\u0027 reference can call methods that are defined in the Object class, even without any definition in the \u0027Shape\u0027 class or the \u0027Square\u0027 class.",
      "The \u0027shape\u0027 reference, although referring to a \u0027Square\u0027, can be passed to a method that requires an Object as a parameter.",
      "The \u0027shape\u0027 reference is a \u0027Object\u0027 because every class in Java has Object as a superclass.",
      "The \u0027shape\u0027 reference is an instance of the Object class."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/30503",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Even though not explicitly written, both Animal and Dog classes are subclasses of the Object class and inherit its methods.",
      "The Dog object can be assigned to an Animal reference because every class in Java implicitly extends the Object class, and it is permitted to assign a subclass object to a superclass reference."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2075",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It belongs to the java.lang package.",
      "It has the method toString()."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2306",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "clone()",
        "Creates and returns a copy of this object."
      ],
      [
        "equals(Object obj)",
        "Indicates whether some other object is \u0026quot;equal to\u0026quot; this one."
      ],
      [
        "finalize()",
        "Is called by the garbage collector on an object when the garbage       collector determines that there are no more references to the object."
      ],
      [
        "getClass()",
        "Returns the runtime class of an object."
      ],
      [
        "hashCode()",
        " Returns a hash code value for the object."
      ],
      [
        "toString()",
        "Returns a string representation of the object."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2307",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The class is the root of the class hierarchy in Java.",
      "All objects including arrays have methods of this class."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3032",
    "checked": false,
    "mode": 5,
    "answerStr": "java.lang.Object"
  },
  {
    "url": "https://hyperskill.org/learn/step/3033",
    "checked": false,
    "mode": 1,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/3034",
    "checked": false,
    "mode": 5,
    "answerStr": "toString()"
  },
  {
    "url": "https://hyperskill.org/learn/step/3035",
    "checked": false,
    "mode": 5,
    "answerStr": "clone()"
  },
  {
    "url": "https://hyperskill.org/learn/step/3009",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "1",
      "2",
      "4"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3013",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "3",
      "4"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2576",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "@FieldDescription",
      "@FieldDescription(text \u003d \"some text\")"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2581",
    "checked": false,
    "mode": 1,
    "answerStr": "A method can be declared with multiple annotations."
  },
  {
    "url": "https://hyperskill.org/learn/step/2199",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "method1"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3061",
    "checked": false,
    "mode": 1,
    "answerStr": "method4"
  },
  {
    "url": "https://hyperskill.org/learn/step/30888",
    "checked": false,
    "mode": 1,
    "answerStr": "The code will not work, because \u0027speed\u0027 variable is \u0027final\u0027 and cannot be modified."
  },
  {
    "url": "https://hyperskill.org/learn/step/31419",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The anonymous class is behaving as a concrete implementation of the SomeInterface interface.",
      "The code will run without errors, returning the value of x when method() is invoked on si due to the anonymous class\u0027s access to final variables in its enclosing scope."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2556",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "An anonymous class always implements an interface or extends a class.",
      "An anonymous class is declared and instantiated in a single statement."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2557",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "An anonymous class can capture local variables that are declared as final or effectively final.",
      "An anonymous class can capture all members of its enclosing class (an outer class)."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2560",
    "checked": false,
    "mode": 1,
    "answerStr": "c"
  },
  {
    "url": "https://hyperskill.org/learn/step/2546",
    "checked": false,
    "mode": 3,
    "answerStr": "public class Main {\n\n    public static void main(String[] args) {\n\n        SingleMethodInterface instance \u003d new SingleMethodInterface() {\n            @Override\n            public void doSomething() {\n                System.out.println(\"The anonymous class does something\");\n            }\n        };\n\n        instance.doSomething();\n    }\n}\n\ninterface SingleMethodInterface {\n\n    void doSomething();\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2554",
    "checked": false,
    "mode": 3,
    "answerStr": "class Create {\n\n    public static Runnable createRunnable(String text, int repeats) {\n        return new Runnable() {\n            @Override\n            public void run() {\n                for (int i \u003d 0; i \u003c repeats; i++) {\n                    System.out.println(text);\n                }\n            }\n        };\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3079",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "qq",
      "abstractFoo"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3430",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "They are declared with the keyword abstract.",
      "They do not have a body."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3444",
    "checked": false,
    "mode": 1,
    "answerStr": "at runtime"
  },
  {
    "url": "https://hyperskill.org/learn/step/2811",
    "checked": false,
    "mode": 1,
    "answerStr": "NullPointerException extends RuntimeException"
  },
  {
    "url": "https://hyperskill.org/learn/step/2474",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "catch (RuntimeException e)",
      "finally"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2826",
    "checked": false,
    "mode": 1,
    "answerStr": "RuntimeException"
  },
  {
    "url": "https://hyperskill.org/learn/step/2828",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "catch (Exception e)",
      "finally",
      "try",
      "catch (IOException | SQLException e) "
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3447",
    "checked": false,
    "mode": 1,
    "answerStr": "Exception"
  },
  {
    "url": "https://hyperskill.org/learn/step/1948",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "In an abstract class, the keyword abstract is mandatory to declare a method as an abstract while in an interface this keyword is optional.",
      "An abstract class can have abstract and non-abstract instance methods while an interface can have only abstract and default instance methods."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2117",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "parent - interface, child - class",
        "nameColumns": "extends",
        "check": false
      },
      {
        "nameRow": "parent - interface, child - class",
        "nameColumns": "implements",
        "check": true
      },
      {
        "nameRow": "parent - interface, child - abstract class",
        "nameColumns": "extends",
        "check": false
      },
      {
        "nameRow": "parent - interface, child - abstract class",
        "nameColumns": "implements",
        "check": true
      },
      {
        "nameRow": "parent - interface, child - interface",
        "nameColumns": "extends",
        "check": true
      },
      {
        "nameRow": "parent - interface, child - interface",
        "nameColumns": "implements",
        "check": false
      },
      {
        "nameRow": "parent - abstract class, child - abstract class",
        "nameColumns": "extends",
        "check": true
      },
      {
        "nameRow": "parent - abstract class, child - abstract class",
        "nameColumns": "implements",
        "check": false
      },
      {
        "nameRow": "parent - abstract class, child - class",
        "nameColumns": "extends",
        "check": true
      },
      {
        "nameRow": "parent - abstract class, child - class",
        "nameColumns": "implements",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2122",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "java.lang.Number",
        "nameColumns": "abstract class",
        "check": true
      },
      {
        "nameRow": "java.lang.Number",
        "nameColumns": "interface",
        "check": false
      },
      {
        "nameRow": "java.io.Serializable",
        "nameColumns": "abstract class",
        "check": false
      },
      {
        "nameRow": "java.io.Serializable",
        "nameColumns": "interface",
        "check": true
      },
      {
        "nameRow": "java.lang.CharSequence",
        "nameColumns": "abstract class",
        "check": false
      },
      {
        "nameRow": "java.lang.CharSequence",
        "nameColumns": "interface",
        "check": true
      },
      {
        "nameRow": "java.lang.AbstractStringBuilder",
        "nameColumns": "abstract class",
        "check": true
      },
      {
        "nameRow": "java.lang.AbstractStringBuilder",
        "nameColumns": "interface",
        "check": false
      },
      {
        "nameRow": "java.util.Collection",
        "nameColumns": "abstract class",
        "check": false
      },
      {
        "nameRow": "java.util.Collection",
        "nameColumns": "interface",
        "check": true
      },
      {
        "nameRow": "java.util.AbstractCollection",
        "nameColumns": "abstract class",
        "check": true
      },
      {
        "nameRow": "java.util.AbstractCollection",
        "nameColumns": "interface",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3074",
    "checked": false,
    "mode": 1,
    "answerStr": "A class can extend only a single abstract class but it can implement any number of interfaces."
  },
  {
    "url": "https://hyperskill.org/learn/step/3075",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "An abstract class and an interface cannot be instantiated directly.",
      "An abstract class implements an interface while an interface extends another interface."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3070",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "change the keyword extends to the keyword implements in declaration of BaseMessage",
      "move fields sender and dest to the body of BaseMessage",
      "override the method getDestination in BaseMessage or CipherMessage"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3456",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "A constructor is admissible",
        "nameColumns": "Abstract class",
        "check": true
      },
      {
        "nameRow": "A constructor is admissible",
        "nameColumns": "Interface",
        "check": false
      },
      {
        "nameRow": "It can be inherited by a class",
        "nameColumns": "Abstract class",
        "check": true
      },
      {
        "nameRow": "It can be inherited by a class",
        "nameColumns": "Interface",
        "check": false
      },
      {
        "nameRow": "It can have static methods",
        "nameColumns": "Abstract class",
        "check": true
      },
      {
        "nameRow": "It can have static methods",
        "nameColumns": "Interface",
        "check": true
      },
      {
        "nameRow": "It can be implemented by a class.",
        "nameColumns": "Abstract class",
        "check": false
      },
      {
        "nameRow": "It can be implemented by a class.",
        "nameColumns": "Interface",
        "check": true
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4312",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "JRE can start an application packed to a JAR.",
      "It is a compressed archive based on ZIP."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4313",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It may include images and sound files.",
      "Aggregating files of an application in JAR makes easier to move the application over a network.",
      "A file containing JAR metadata is called MANIFEST.MF."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4315",
    "checked": false,
    "mode": 5,
    "answerStr": "META-INF/MANIFEST.MF"
  },
  {
    "url": "https://hyperskill.org/learn/step/4318",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "a",
      "c"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/4320",
    "checked": false,
    "mode": 1,
    "answerStr": "java -cp app.jar path.to.Main"
  },
  {
    "url": "https://hyperskill.org/learn/step/16525",
    "checked": false,
    "mode": 1,
    "answerStr": "a platform-independent file format to pack and distribute multiple files together"
  },
  {
    "url": "https://hyperskill.org/learn/step/16526",
    "checked": false,
    "mode": 1,
    "answerStr": "java -jar app.jar"
  },
  {
    "url": "https://hyperskill.org/learn/step/16527",
    "checked": false,
    "mode": 1,
    "answerStr": "replace .jar with .zip and open as archive"
  },
  {
    "url": "https://hyperskill.org/learn/step/50811",
    "checked": false,
    "mode": 5,
    "answerStr": "gradle -v"
  },
  {
    "url": "https://hyperskill.org/learn/step/49015",
    "checked": false,
    "mode": 1,
    "answerStr": "CSS file inclusion"
  },
  {
    "url": "https://hyperskill.org/learn/step/33125",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "java",
      "task",
      "doLast",
      "println"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/32989",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "repositories",
      "dependencies",
      "junit:junit:4.13"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5112",
    "checked": false,
    "mode": 1,
    "answerStr": "Gradle uses the default settings and the programmer can change them when it is necessary."
  },
  {
    "url": "https://hyperskill.org/learn/step/5113",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Groovy",
      "Kotlin"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/14945",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Android projects",
      "Java / Kotlin / Scala server-side projects"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/14947",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Settings files",
        "Gradle uses several types of settings files to describe how to build a project."
      ],
      [
        "Ease of migration",
        "Gradle can easily adapt to any project structure you have."
      ],
      [
        "Dependency management",
        "Gradle automatically downloads specified external libraries and solves conflict cases with dependencies."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/41125",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "java",
      "junit:junit:4.12",
      "jar"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/33141",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "repositories",
      "dependencies",
      "task",
      "println"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5084",
    "checked": false,
    "mode": 1,
    "answerStr": "build.gradle"
  },
  {
    "url": "https://hyperskill.org/learn/step/7879",
    "checked": false,
    "mode": 1,
    "answerStr": "something to be built or a thing to be done"
  },
  {
    "url": "https://hyperskill.org/learn/step/7880",
    "checked": false,
    "mode": 1,
    "answerStr": "It is a script that automatically downloads Gradle and runs passed commands"
  },
  {
    "url": "https://hyperskill.org/learn/step/7881",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A build includes 1+ projects.",
      "A project consists of 1+ tasks."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7883",
    "checked": false,
    "mode": 1,
    "answerStr": "gradle tasks --all"
  },
  {
    "url": "https://hyperskill.org/learn/step/42335",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "application",
      "dependencies",
      "repositories"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/40978",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "plugins",
      "application",
      "repositories",
      "dependencies"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5086",
    "checked": false,
    "mode": 1,
    "answerStr": "src"
  },
  {
    "url": "https://hyperskill.org/learn/step/35982",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "build.gradle(.kts)",
        "The main configuration for the build is here."
      ],
      [
        "settings.gradle",
        "This says which projects to include in the build."
      ],
      [
        "wrapper files (gradle-wrapper.jar, gradle-wrapper.properties, gradlew, gradlew.bat)",
        "With these included in repo, you do not need a local Gradle installation to run and build the project"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/35984",
    "checked": false,
    "mode": 1,
    "answerStr": "files with bytecode"
  },
  {
    "url": "https://hyperskill.org/learn/step/47160",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "\u003ccode\u003eid\u003c/code\u003e",
      "\u003ccode\u003ejava\u003c/code\u003e",
      "\u003ccode\u003emavenCentral\u003c/code\u003e",
      "\u003ccode\u003etestImplementation\u003c/code\u003e",
      "\u003ccode\u003ejunit:junit:4.13\u003c/code\u003e"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/44586",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "\u003ccode\u003eplugin\u003c/code\u003e",
      "\u003ccode\u003edependencies\u003c/code\u003e",
      "\u003ccode\u003ejar\u003c/code\u003e"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/38904",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "repositories",
      "dependencies",
      "task"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/33002",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "apply plugin",
      "mainClassName",
      "dependencies",
      "implementation"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/33090",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "java",
      "repositories",
      "dependencies",
      "task"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/35989",
    "checked": false,
    "mode": 1,
    "answerStr": "build.gradle"
  },
  {
    "url": "https://hyperskill.org/learn/step/35990",
    "checked": false,
    "mode": 1,
    "answerStr": "app/build/libs"
  },
  {
    "url": "https://hyperskill.org/learn/step/35992",
    "checked": false,
    "mode": 1,
    "answerStr": "unlimited"
  },
  {
    "url": "https://hyperskill.org/learn/step/35993",
    "checked": false,
    "mode": 1,
    "answerStr": "2"
  },
  {
    "url": "https://hyperskill.org/learn/step/35994",
    "checked": false,
    "mode": 1,
    "answerStr": "testImplementation"
  },
  {
    "url": "https://hyperskill.org/learn/step/43626",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "\u003ccode\u003erepositories\u003c/code\u003e",
      "\u003ccode\u003edependencies\u003c/code\u003e",
      "\u003ccode\u003eimplementation\u003c/code\u003e"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/37221",
    "checked": false,
    "mode": 9,
    "answerListArr": [
      [
        "mavenCentral()",
        "7",
        "0"
      ],
      [
        "repositories {",
        "6",
        "1"
      ],
      [
        "}",
        "5",
        "0"
      ],
      [
        "}",
        "1",
        "0"
      ],
      [
        "compile \u0027com.google.guava:guava:30.1-jre\u0027",
        "0",
        "1"
      ],
      [
        "}",
        "2",
        "0"
      ],
      [
        "id \u0027java\u0027",
        "8",
        "0"
      ],
      [
        "plugins {",
        "4",
        "1"
      ],
      [
        "dependencies {",
        "3",
        "0"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5119",
    "checked": false,
    "mode": 1,
    "answerStr": "Specifies Maven Central as a repository for external dependencies"
  },
  {
    "url": "https://hyperskill.org/learn/step/7937",
    "checked": false,
    "mode": 1,
    "answerStr": "Nothing is required"
  },
  {
    "url": "https://hyperskill.org/learn/step/7938",
    "checked": false,
    "mode": 1,
    "answerStr": "A place where libraries are stored"
  },
  {
    "url": "https://hyperskill.org/learn/step/7940",
    "checked": false,
    "mode": 1,
    "answerStr": "2"
  },
  {
    "url": "https://hyperskill.org/learn/step/37191",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Maven compatible",
      "Ivy compatible",
      "Flat repositories"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/37192",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "mavenCentral()",
        "fetches dependencies from the Maven Central Repository"
      ],
      [
        "mavenLocal()",
        "fetches dependencies from the local Maven  Repository"
      ],
      [
        "flatDir",
        "fetches dependencies from the specified local directory"
      ],
      [
        "google()",
        "fetches dependencies from  Google\u0027s Maven repository."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/37194",
    "checked": false,
    "mode": 1,
    "answerStr": "flatDir{}"
  },
  {
    "url": "https://hyperskill.org/learn/step/8509",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It has core essentials for the development process",
      "It comes with a language implementation"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8510",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "You can get it from sites like Github for your language",
      "It extends the standard library with high-level modules"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8506",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Provide the documentation",
      "Belong to one domain of knowledge",
      "Have a clear interface for a developer"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8508",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Popular libraries are tested hard on real cases",
      "There is no need to implement common utilities"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/23173",
    "checked": false,
    "mode": 1,
    "answerStr": "Use Python\u0027s math library"
  },
  {
    "url": "https://hyperskill.org/learn/step/23174",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Ignores programming language code style",
      "Interface names do not reflect their function"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/23175",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "When you want to reduce development time",
      "When you need tested solutions for common tasks"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2278",
    "checked": false,
    "mode": 4,
    "answerStr": "200"
  },
  {
    "url": "https://hyperskill.org/learn/step/2279",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "It can change values of static fields.",
        "nameColumns": "Static initialization block",
        "check": true
      },
      {
        "nameRow": "It can change values of static fields.",
        "nameColumns": "Constructor",
        "check": true
      },
      {
        "nameRow": "It\u0027s possible to call static methods inside.",
        "nameColumns": "Static initialization block",
        "check": true
      },
      {
        "nameRow": "It\u0027s possible to call static methods inside.",
        "nameColumns": "Constructor",
        "check": true
      },
      {
        "nameRow": "It\u0027s called for each new instance.",
        "nameColumns": "Static initialization block",
        "check": false
      },
      {
        "nameRow": "It\u0027s called for each new instance.",
        "nameColumns": "Constructor",
        "check": true
      },
      {
        "nameRow": "It can change values of fields for the current instance.",
        "nameColumns": "Static initialization block",
        "check": false
      },
      {
        "nameRow": "It can change values of fields for the current instance.",
        "nameColumns": "Constructor",
        "check": true
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3025",
    "checked": false,
    "mode": 4,
    "answerStr": "40"
  },
  {
    "url": "https://hyperskill.org/learn/step/3026",
    "checked": false,
    "mode": 1,
    "answerStr": "1) block A; 2) block B; 3) constructor"
  },
  {
    "url": "https://hyperskill.org/learn/step/3027",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "4",
      "5"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3028",
    "checked": false,
    "mode": 5,
    "answerStr": "1 4 9 18 35 68 7 10"
  },
  {
    "url": "https://hyperskill.org/learn/step/3029",
    "checked": false,
    "mode": 1,
    "answerStr": "8"
  },
  {
    "url": "https://hyperskill.org/learn/step/3031",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "static { } defines a new static initialization block",
      "a class can have multiple static blocks which will execute in the order that they appear in the source code"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2559",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "An anonymous class can have fields.",
      "An anonymous class can have any number of methods.",
      "It\u0027s possible to pass an instance of an anonymous class to a method as an argument."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2548",
    "checked": false,
    "mode": 3,
    "answerStr": "class CalculatorWrapper {\n    static Calculator anonymousCalculator \u003d new Calculator() {\n        @Override\n        public long sum(long val1, long val2) {\n            return val1 + val2;\n        }\n\n        @Override\n        public long subtraction(long val1, long val2) {\n            return val1 - val2;\n        }\n    };\n}\n\nabstract class Calculator {\n\n    public abstract long sum(long val1, long val2);\n\n    public abstract long subtraction(long val1, long val2);\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2551",
    "checked": false,
    "mode": 3,
    "answerStr": "class IteratorExecutor {\n\n    static void performIterationsWithCallback(int numberOfIterations, LoopCallback callback) {\n        for (int i \u003d 0; i \u003c numberOfIterations; i++) {\n            callback.onNewIteration(i);\n        }\n    }\n\n    static void startIterations(int numberOfIterations) {\n         performIterationsWithCallback(numberOfIterations, new LoopCallback() {\n             public void onNewIteration(int iteration) {\n                 System.out.println(\"Iteration: \" + iteration);\n             };\n         });\n    }\n}\n\n// Don\u0027t change the code below\ninterface LoopCallback {\n\n    void onNewIteration(int iteration);\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2552",
    "checked": false,
    "mode": 1,
    "answerStr": "Add semicolon on the 15th line."
  },
  {
    "url": "https://hyperskill.org/learn/step/2550",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\npublic class Main {\n\n    private static String message;\n    private static int errorCode;\n\n    public static void main(String[] args) {\n\n        final Scanner scanner \u003d new Scanner(System.in);\n        message \u003d scanner.nextLine();\n        errorCode \u003d Integer.parseInt(scanner.nextLine());\n\n        startLongProcess(new Callback() {\n            @Override\n            public void onStarted() {\n                System.out.println(\"The process started\" );\n            }\n\n            @Override\n            public void onStopped(String cause) {\n                System.out.println(cause);\n            }\n\n            @Override\n            public void onFinished(int code) {\n                if(code \u003d\u003d 0) {\n                    System.out.println(\"The process successfully finished\");\n                } else {\n                    System.out.println(\"The process is finished with error: \" + code);\n                }  \n            }\n        });\n\n    }\n\n    public static void startLongProcess(Callback callback) {\n        callback.onStarted();\n        callback.onStopped(message);\n        callback.onStarted();\n        callback.onFinished(errorCode);\n    }\n\n}\n\ninterface Callback {\n\n    void onStarted();\n\n    void onStopped(String cause);\n\n    void onFinished(int code);\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11895",
    "checked": false,
    "mode": 3,
    "answerStr": "class CreateInstance {\n\n    public static SuperClass create() {\n\n        SuperClass instance \u003d new SuperClass() {\n            @Override\n            public void method2() {\n                System.out.println(\"method2\");\n            }\n\n            @Override\n            public void method3() {\n                System.out.println(\"method3\");\n            };\n        };\n\n        instance.method2();\n        instance.method3();\n        \n        return instance;\n    }\n}\n\n// Don\u0027t change the code below\n\nabstract class SuperClass {\n\n    public static void method1() { \n        System.out.println(\"It\u0027s a static method.\");\n    }\n\n    public void method2() {\n        System.out.println(\"It\u0027s not a static method.\");\n    }\n\n    public abstract void method3();\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2961",
    "checked": false,
    "mode": 1,
    "answerStr": "object"
  },
  {
    "url": "https://hyperskill.org/learn/step/2962",
    "checked": false,
    "mode": 1,
    "answerStr": "methods"
  },
  {
    "url": "https://hyperskill.org/learn/step/7930",
    "checked": false,
    "mode": 1,
    "answerStr": "Mutable objects can be changed after creation and immutable cannot."
  },
  {
    "url": "https://hyperskill.org/learn/step/7931",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Weakly immutable object",
        "Some fields of the object are immutable and some are mutable"
      ],
      [
        "Strongly immutable object",
        "All fields of the object are immutable"
      ],
      [
        "Mutable object",
        "All fields of the object are mutable"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7932",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "When you want to incorporate multi-threading into your program.",
      "When you want the value of the object to stay the same the whole time."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7934",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Look at the kittens that are in the box",
      "Get a box of puppies and say that now this box is my_favorite_box"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7935",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "MyObject is a weakly immutable object.",
      "field2 cannot have a different value unless we create a new object"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/7936",
    "checked": false,
    "mode": 5,
    "answerStr": "mutable"
  },
  {
    "url": "https://hyperskill.org/learn/step/18496",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "Computer",
        "nameColumns": "strongly immutable",
        "check": false
      },
      {
        "nameRow": "Computer",
        "nameColumns": "weakly immutable",
        "check": false
      },
      {
        "nameRow": "Computer",
        "nameColumns": "mutable",
        "check": true
      },
      {
        "nameRow": "Smartphone",
        "nameColumns": "strongly immutable",
        "check": true
      },
      {
        "nameRow": "Smartphone",
        "nameColumns": "weakly immutable",
        "check": false
      },
      {
        "nameRow": "Smartphone",
        "nameColumns": "mutable",
        "check": false
      },
      {
        "nameRow": "Watch",
        "nameColumns": "strongly immutable",
        "check": false
      },
      {
        "nameRow": "Watch",
        "nameColumns": "weakly immutable",
        "check": true
      },
      {
        "nameRow": "Watch",
        "nameColumns": "mutable",
        "check": false
      },
      {
        "nameRow": "Headphones",
        "nameColumns": "strongly immutable",
        "check": true
      },
      {
        "nameRow": "Headphones",
        "nameColumns": "weakly immutable",
        "check": false
      },
      {
        "nameRow": "Headphones",
        "nameColumns": "mutable",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/30908",
    "checked": false,
    "mode": 1,
    "answerStr": "mutable"
  },
  {
    "url": "https://hyperskill.org/learn/step/2806",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "NullPointerException",
      "ArithmeticException"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/43050",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\n\npublic class Main {\n    static class Box\u003cT\u003e {\n        // your code here\n        private T box;\n\n        public Box(T box) {\n            this.box \u003d box;\n        }\n\n        public T getBox() {\n            return this.box;\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner sc \u003d new Scanner(System.in);\n\n        if(sc.hasNextInt()) {\n            int num \u003d sc.nextInt();\n            // your code here\n            System.out.println(new Box(num).getBox());\n        } else if (sc.hasNextFloat()) {\n            float num \u003d sc.nextFloat();\n            // your code here\n            System.out.println(new Box(num).getBox());\n        } else {\n            String str \u003d sc.next();\n            // your code here\n            System.out.println(new Box(str).getBox());\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2089",
    "checked": false,
    "mode": 1,
    "answerStr": "class A\u003cT\u003e { /* ... */ }"
  },
  {
    "url": "https://hyperskill.org/learn/step/3530",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Boolean[]",
      "boolean[]",
      "Boolean"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2087",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Character",
      "String"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2595",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "An array of primitive types (e.g., int[]).",
      "Class type (e.g., String)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2597",
    "checked": false,
    "mode": 3,
    "answerStr": "/**\n    Box for cakes\n*/\nclass CakeBox {\n\n    private Cake cake;\n\n    public void put(Cake cake) {\n    \tthis.cake \u003d cake;\n    }\n\n    public Cake get() {\n        return this.cake;\n    }\n}\n\n/**\n    Box for pies\n*/\nclass PieBox {\n\n    private Pie pie;\n\n    public void put(Pie pie) {\n    \tthis.pie \u003d pie;\n    }\n\n    public Pie get() {\n        return this.pie;\n    }\n}\n\n\n/**\n    Box for tarts\n*/\nclass TartBox {\n\n    private Tart tart;\n\n    public void put(Tart tart) {\n    \tthis.tart \u003d tart;\n    }\n\n    public Tart get() {\n        return this.tart;\n    }\n}\n\n/*\n    Hundred more such boring classes OR ...\n    magic class for everything everybody is waiting for\n*/\nclass Box\u003cT\u003e {\n    private T box;\n    \n    public void put(T box) {\n    \tthis.box \u003d box;\n    }\n\n    public T get() {\n        return this.box;\n    }\n}\n\n// Don\u0027t change classes below\nclass Cake { }\n\nclass Pie { }\n\nclass Tart { }\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3420",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "String[]",
      "int[]",
      "String"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2088",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Generics enhance type safety by shifting more type checking responsibilities to compiler",
      "Generics can work with multiple classes without explicit type-casting"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2598",
    "checked": false,
    "mode": 3,
    "answerStr": "/**\n\nObject-based box class that requires casting every time you want to get some specific stuff from it, e.g.:\n\n    Box cakeBox \u003d new Box();\n    cakeBox.put(new Cake());\n    // Without casting only object can be retrieved out of the box\n    Cake cake \u003d (Cake) cakeBox.get();\n\nCasting is not desirable and can fall at runtime, could you create more... generic solution?\n\n*/\nclass Box\u003cT\u003e {\n\n    private T item;\n\n    public void put(T item) {\n    \tthis.item \u003d item;\n    }\n\n    public T get() {\n        return this.item;\n    }\n\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3537",
    "checked": false,
    "mode": 1,
    "answerStr": "It will return a reference of Object type"
  },
  {
    "url": "https://hyperskill.org/learn/step/7078",
    "checked": false,
    "mode": 1,
    "answerStr": "Integer num \u003d (Integer) instance.get();"
  },
  {
    "url": "https://hyperskill.org/learn/step/11178",
    "checked": false,
    "mode": 3,
    "answerStr": "class Holder\u003cT\u003e {\n    private T value;\n\n    public void set(T value) {\n        this.value \u003d value;\n    }\n\n    public T get() {\n        return value;\n    }\n}\n\nclass Main {\n    public static void main(String... args) {\n        // initialize an instance of Holder to make the code below compiled\n        Holder\u003cString\u003e holder \u003d new Holder\u003c\u003e();\n\n        // do not change the code below\n        holder.set(\"This is an instance of String\");\n\n        String value \u003d holder.get();\n        System.out.println(value);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11179",
    "checked": false,
    "mode": 3,
    "answerStr": "class Holder {\n    private Object value;\n\n    public void set(Object value) {\n        this.value \u003d value;\n    }\n\n    public Object get() {\n        return value;\n    }\n}\n\nclass Main {\n    public static void main(String... args) {\n        Holder holder \u003d new Holder();\n        holder.set(256);\n\n        // correct the line to make the code compile\n        Integer value \u003d (int) holder.get();\n\n        // do not change\n        System.out.println(value);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11180",
    "checked": false,
    "mode": 1,
    "answerStr": "Object"
  },
  {
    "url": "https://hyperskill.org/learn/step/11181",
    "checked": false,
    "mode": 1,
    "answerStr": "Compile-time: incompatible types: long cannot be converted to java.lang.String"
  },
  {
    "url": "https://hyperskill.org/learn/step/45727",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\nimport java.util.function.Function;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        int n \u003d scanner.nextInt();\n\n        Function\u003cInteger, Boolean\u003e f \u003d x -\u003e x % 5 \u003d\u003d 0 \u0026\u0026 x % 3 \u003d\u003d 0;\n\n        System.out.println(f.apply(n));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2358",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "(x, y) -\u003e x + y",
      "x -\u003e x",
      "(z) -\u003e z"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2359",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "If a lambda expression has only one parameter, parentheses () are not mandatory.",
      "A lambda expression can contain multiple statements within the body."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2361",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "void method(Function\u003cT, R\u003e f)",
      "Function\u003cT, R\u003e method(int n)",
      "Function\u003cT, R\u003e method(Function\u003cT, R\u003e f,  int n)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2362",
    "checked": false,
    "mode": 1,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/2363",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.function.IntBinaryOperator;\n\nclass Operator {\n\n    public static IntBinaryOperator binaryOperator \u003d (x, y) -\u003e x \u003e y ? x : y;\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2364",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.function.LongUnaryOperator;\n\nclass Operator {\n\n    public static LongUnaryOperator unaryOperator \u003d x -\u003e x % 2 \u003d\u003d 0 ? x + 2 : x + 1;\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2365",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.function.*;\n\n\nclass Operator {\n\n    public static LongBinaryOperator binaryOperator \u003d (x, y) -\u003e {\n        long product \u003d 1L;\n        while (x \u003c\u003d y) {\n            product *\u003d x;\n            x++;\n        }\n        return product;\n    };\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2367",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.function.DoubleUnaryOperator;\n\nclass Operator {\n\n    public static int a \u003d 10;\n    public static int b \u003d 20;\n    public static int c \u003d 30;\n\n    public static DoubleUnaryOperator unaryOperator \u003d x -\u003e a * (x * x) + b * x + c;\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/2368",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.function.UnaryOperator;\n\nclass PrefixSuffixOperator {\n\n    public static final String PREFIX \u003d \"__pref__\";\n    public static final String SUFFIX \u003d \"__suff__\";\n\n    public static UnaryOperator\u003cString\u003e operator \u003d text -\u003e PREFIX + text.trim() + SUFFIX;\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/4330",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.*;\nimport java.util.function.*;\n\n\npublic class Main {\n\n    public static \u003cT\u003e void applyFunction(T[] array, Function\u003cT, T\u003e func) {\n        // write your code here\n        for (int i \u003d 0; i \u003c array.length; i++) {\n            array[i] \u003d func.apply(array[i]);\n        }\n    }\n\n    // do not change code below\n    public static void main(String[] args) {\n        Scanner scanner \u003d new Scanner(System.in);\n        String method \u003d scanner.nextLine();\n        String[] array \u003d scanner.nextLine().split(\" \");\n        applyFunction(array,\n                \"lower\".equals(method) ? String::toLowerCase :\n                \"upper\".equals(method) ? String::toUpperCase :\n                \"new\".equals(method) ? String::new :\n                \"trim\".equals(method) ? String::trim : String::intern);\n        Arrays.stream(array).forEach(e -\u003e System.out.print(e + \" \"));\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3439",
    "checked": false,
    "mode": 1,
    "answerStr": "introduce their own type parameters"
  },
  {
    "url": "https://hyperskill.org/learn/step/3604",
    "checked": false,
    "mode": 1,
    "answerStr": "public static \u003cT\u003e void method(T arg) { }"
  },
  {
    "url": "https://hyperskill.org/learn/step/3605",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The return type of this method",
      "The type of an argument of this method",
      "The type of a local variable inside this method"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/8679",
    "checked": false,
    "mode": 1,
    "answerStr": "Yes, if this method is not static"
  },
  {
    "url": "https://hyperskill.org/learn/step/8680",
    "checked": false,
    "mode": 1,
    "answerStr": "public \u003cT\u003e void method(T t) {"
  },
  {
    "url": "https://hyperskill.org/learn/step/11022",
    "checked": false,
    "mode": 3,
    "answerStr": "// do not remove imports\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.function.Function;\n\nclass ArrayUtils {\n    // define getFirst method here\n    public static \u003cT\u003e T getFirst(T[] t) {\n        return t.length \u003e 0 ? t[0] : null;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11023",
    "checked": false,
    "mode": 3,
    "answerStr": "// do not remove imports\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.function.Function;\nimport java.util.Arrays;\n\nclass ArrayUtils {\n    // define info method here\n    public static \u003cT\u003e String info(T[] list) {\n        return Arrays.toString(list);\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11024",
    "checked": false,
    "mode": 3,
    "answerStr": "// do not remove imports\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.function.Function;\n\nclass ArrayUtils {\n    // define hasNull method here\n    public static \u003cT\u003e boolean hasNull(T[] list) {\n        for (T t : list) {\n            if (t \u003d\u003d null) {\n                return true;\n            }\n        }\n        \n        return false;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11025",
    "checked": false,
    "mode": 3,
    "answerStr": "// do not remove imports\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.function.Function;\nimport java.util.Arrays;\n\nclass ArrayUtils {\n    // define invert method here\n    public static \u003cT\u003e T[] invert(T[] arr) {\n        if (arr.length \u003c 1) {\n            return arr;\n        }\n\n        int lastIndex \u003d arr.length - 1;\n        for (int i \u003d 0; i \u003c\u003d lastIndex / 2; i++) {\n            T tmp \u003d arr[i];\n            arr[i] \u003d arr[lastIndex - i];\n            arr[lastIndex - i] \u003d tmp;\n        }\n        return arr;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/36347",
    "checked": false,
    "mode": 10,
    "answerArr": [
      ")).calculateFactorial(input);",
      "Assertions.assertThat"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/36434",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Assertions.assertThat(\"AssertJ\").startsWith(\"Assert\");",
      "assertThat(\"AssertJ\").startsWith(\"Assert\");"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/36435",
    "checked": false,
    "mode": 1,
    "answerStr": "matches()"
  },
  {
    "url": "https://hyperskill.org/learn/step/36436",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Used for check whether a string ends with a specific substring.",
        "endsWith()"
      ],
      [
        "Used for check if a string starts with a specific substring.",
        "startsWith()"
      ],
      [
        "Used for compares two strings, ignoring their case.",
        "isEqualToIgnoringCase()"
      ],
      [
        "Doesn\u0027t exist",
        "startWith()"
      ],
      [
        "Used for check whether a string contains a specific substring.",
        "contains()"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/36439",
    "checked": false,
    "mode": 1,
    "answerStr": "A)  assertThatThrownBy(() -\u003e { ... }).isInstanceOf(Exception.class);"
  },
  {
    "url": "https://hyperskill.org/learn/step/36441",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Case: A",
        "java.lang.AssertionError: Errors: - Animal types are different!"
      ],
      [
        "Case: B",
        "java.lang.AssertionError: Errors: - Animal names are different!"
      ],
      [
        "Case: C",
        "java.lang.AssertionError: Errors: - Animal names are different! - Animal types are different!"
      ],
      [
        "Case: D",
        "Tests passed"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3771",
    "checked": false,
    "mode": 1,
    "answerStr": "primitive types"
  },
  {
    "url": "https://hyperskill.org/learn/step/6063",
    "checked": false,
    "mode": 1,
    "answerStr": "A collection is a container for grouping elements into a single unit."
  },
  {
    "url": "https://hyperskill.org/learn/step/8342",
    "checked": false,
    "mode": 1,
    "answerStr": "collection.get(index)"
  },
  {
    "url": "https://hyperskill.org/learn/step/8343",
    "checked": false,
    "mode": 1,
    "answerStr": "Collections are representations of different data structures."
  },
  {
    "url": "https://hyperskill.org/learn/step/8344",
    "checked": false,
    "mode": 4,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/8345",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Collections have a rich set of embedded operations for processing elements.",
      "There are mutable collections which are good when the size is not fixed.",
      "It is possible to choose the most effective collection for this problem."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/11574",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.ArrayList;\n\nclass Main {\n    ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();\n\n    void init() {\n        // add \"one\", \"two\", \"three\" to list field in this order\n        list.add(\"one\");\n        list.add(\"two\");\n        list.add(\"three\");\n    }\n}\n\nclass Test {\n    public static void main(String[] args) {\n        Main main \u003d new Main();\n        main.init();\n\n        for (String str : main.list) {\n            System.out.println(str);\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/11577",
    "checked": false,
    "mode": 5,
    "answerStr": "035"
  },
  {
    "url": "https://hyperskill.org/learn/step/12248",
    "checked": false,
    "mode": 1,
    "answerStr": "mutable collections"
  },
  {
    "url": "https://hyperskill.org/learn/step/2328",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "list1.equals(list1)",
      "list1.equals(list3)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3300",
    "checked": false,
    "mode": 1,
    "answerStr": "The code just looks nice"
  },
  {
    "url": "https://hyperskill.org/learn/step/3303",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "They improve flexibility and maintainability of object-oriented systems.",
      "They provide tested and established solutions for recurring problems."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3305",
    "checked": false,
    "mode": 1,
    "answerStr": "classes and objects"
  },
  {
    "url": "https://hyperskill.org/learn/step/3306",
    "checked": false,
    "mode": 1,
    "answerStr": "The \"rules\" to organize your code in a logical and well-readable structure"
  },
  {
    "url": "https://hyperskill.org/learn/step/3307",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "have a unique name to identify it",
      "describe the problem and the solution"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/16842",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "your code design is general",
      "the solution you provide can be reused",
      "your code design matches the problem"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/16843",
    "checked": false,
    "mode": 1,
    "answerStr": "tasks where the pattern\u0027s application is sensible"
  },
  {
    "url": "https://hyperskill.org/learn/step/3321",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "A factory encapsulates a logic for creating objects.",
      "It is possible to create several simple factories for the same class hierarchy."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3323",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Instead of using the new operator, clients receive objects from factories.",
      "There are several types of factories."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3324",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass ClockFactory {\n\n    private boolean produceToyClock;\n\n    public ClockFactory(boolean produceToyClock) {\n        this.produceToyClock \u003d produceToyClock;\n    }\n\n    /**\n     * It produces a clock according to a specified type: SAND, DIGITAL or MECH.\n     * If some other type is passed, the method produces ToyClock.\n     */\n    public Clock produce(String type) {\n        // write your code here\n        if (type.equals(\"SAND\")) {\n            return new SandClock();\n        } else if (type.equals(\"DIGITAL\")) {\n            return new DigitalClock();\n        } else if (type.equals(\"MECH\")) {\n            return new MechanicalClock();\n        } else {\n            return produceToyClock ? new ToyClock() : null;\n        }\n    }\n}\n\n/* Do not change code below */\ninterface Clock {\n\n    void tick();\n}\n\nclass SandClock implements Clock {\n\n    @Override\n    public void tick() {\n        System.out.println(\"...sand noise...\");\n    }\n}\n\nclass DigitalClock implements Clock {\n\n    @Override\n    public void tick() {\n        System.out.println(\"...pim...\");\n    }\n}\n\nclass MechanicalClock implements Clock {\n\n    @Override\n    public void tick() {\n        System.out.println(\"...clang mechanism...\");\n    }\n}\n\nclass ToyClock implements Clock {\n\n    @Override\n    public void tick() {\n        System.out.println(\"...tick...\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        final Scanner scanner \u003d new Scanner(System.in);\n        final String type \u003d scanner.next();\n        final boolean produceToy \u003d scanner.nextBoolean();\n        final ClockFactory factory \u003d new ClockFactory(produceToy);\n        final Clock clock \u003d factory.produce(type);\n        if (clock \u003d\u003d null) {\n            System.out.println(clock);\n        } else {\n            clock.tick();\n        }\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3325",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass MotorStaticFactory {\n\n    /**\n     * It returns an initialized motor according to the specified type by the first character:\n     * \u0027P\u0027 or \u0027p\u0027 - pneumatic, \u0027H\u0027 or \u0027h\u0027 - hydraulic, \u0027E\u0027 or \u0027e\u0027 - electric, \u0027W\u0027 or \u0027w\u0027 - warp.\n     */\n    public static Motor make(char type, String model, long power) {\n        // write your code here\n        if (String.valueOf(type).equalsIgnoreCase(\"P\")) {\n            return new PneumaticMotor(model, power);\n        } else if (String.valueOf(type).equalsIgnoreCase(\"H\")) {\n            return new HydraulicMotor(model, power);\n        } else if (String.valueOf(type).equalsIgnoreCase(\"E\")) {\n            return new ElectricMotor(model, power);\n        } else if (String.valueOf(type).equalsIgnoreCase(\"W\")) {\n            return new WarpDrive(model, power);\n        }\n        return null;\n    }\n}\n\n/* Do not change code below */\nclass Motor {\n\n    String model;\n    long power;\n\n    public Motor(String model, long power) {\n        this.model \u003d model;\n        this.power \u003d power;\n    }\n}\n\nclass PneumaticMotor extends Motor {\n\n    public PneumaticMotor(String model, long power) {\n        super(model, power);\n    }\n}\n\nclass HydraulicMotor extends Motor {\n\n    public HydraulicMotor(String model, long power) {\n        super(model, power);\n    }\n}\n\nclass ElectricMotor extends Motor {\n\n    public ElectricMotor(String model, long power) {\n        super(model, power);\n    }\n}\n\nclass WarpDrive extends Motor {\n\n    public WarpDrive(String model, long power) {\n        super(model, power);\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        final Scanner scanner \u003d new Scanner(System.in);\n        final char type \u003d scanner.next().charAt(0);\n        final String model \u003d scanner.next();\n        final long power \u003d scanner.nextLong();\n        final Motor motor \u003d MotorStaticFactory.make(type, model, power);\n        if (motor \u003d\u003d null) {\n            System.out.println(motor);\n        } else {\n            System.out.println(motor.getClass().getName() + \" \" + motor.model + \" \" + motor.power);\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3326",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "ShapeFactory factory \u003d new ShapeFactory(); factory.getShape(\"polygon\");",
      "new Polygon();"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3327",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Factories protect the client code from changes related to an extension of a class hierarchy.",
      "A client invokes a factory to create an object.",
      "A factory can be used by multiple clients."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3328",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Scanner;\n\nclass Time {\n\n    int hour;\n    int minute;\n    int second;\n\n    public static Time noon() {\n        // write your code here\n        Time time \u003d new Time();\n        time.hour \u003d 12;\n        time.minute \u003d 0;\n        time.second \u003d 0;\n        return time;\n    }\n\n    public static Time midnight() {\n        // write your code here\n        Time time \u003d new Time();\n        time.hour \u003d 0;\n        time.minute \u003d 0;\n        time.second \u003d 0;\n        return time;\n    }\n\n    public static Time ofSeconds(long seconds) {\n        // write your code here\n        Time time \u003d new Time();\n        int temp \u003d (int) (seconds / 3600);\n        time.hour \u003d temp \u003c 23 ? temp : temp % 24;\n        time.minute \u003d (int) (seconds % 3600) / 60;\n        time.second \u003d (int) seconds % 60;\n        return time;\n    }\n\n    public static Time of(int hour, int minute, int second) {\n        // write your code here\n        Time time \u003d new Time();\n        if ((hour \u003e\u003d 0 \u0026\u0026 hour \u003c\u003d 23)\n                \u0026\u0026 (minute \u003e\u003d 0 \u0026\u0026 minute \u003c\u003d 59)\n                \u0026\u0026 (second \u003e\u003d 0 \u0026\u0026 second \u003c\u003d 59)) {\n            time.hour \u003d hour;\n            time.minute \u003d minute;\n            time.second \u003d second;\n            return time;\n        }\n        return null;\n    }\n}\n\n/* Do not change code below */\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner scanner \u003d new Scanner(System.in);\n\n        final String type \u003d scanner.next();\n        Time time \u003d null;\n\n        switch (type) {\n            case \"noon\":\n                time \u003d Time.noon();\n                break;\n            case \"midnight\":\n                time \u003d Time.midnight();\n                break;\n            case \"hms\":\n                int h \u003d scanner.nextInt();\n                int m \u003d scanner.nextInt();\n                int s \u003d scanner.nextInt();\n                time \u003d Time.of(h, m, s);\n                break;\n            case \"seconds\":\n                time \u003d Time.ofSeconds(scanner.nextInt());\n                break;\n            default:\n                time \u003d null;\n                break;\n        }\n\n        if (time \u003d\u003d null) {\n            System.out.println(time);\n        } else {\n            System.out.printf(\"%s %s %s\", time.hour, time.minute, time.second);\n        }\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3460",
    "checked": false,
    "mode": 1,
    "answerStr": "We create an instance of a class in a special place and then return it to the client code."
  },
  {
    "url": "https://hyperskill.org/learn/step/3316",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The context holds a reference to a strategy.",
      "An abstract strategy can be implemented by multiple concrete strategies."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3317",
    "checked": false,
    "mode": 1,
    "answerStr": "It isolates the code of algorithms from clients."
  },
  {
    "url": "https://hyperskill.org/learn/step/3319",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It helps to avoid changes in existing classes when adding new strategies.",
      "It defines a family of algorithms and encapsulates each one in a separated class."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3331",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Finder {\n\n    private FindingStrategy strategy;\n\n    public Finder(FindingStrategy strategy) {\n        // write your code here\n        this.strategy \u003d strategy;\n    }\n\n    /**\n     * It performs the search algorithm according to the given strategy\n     */\n    public int find(int[] numbers) {\n        // write your code here\n        return this.strategy.getResult(numbers);\n    }\n}\n\ninterface FindingStrategy {\n\n    /**\n     * Returns search result\n     */\n    int getResult(int[] numbers);\n\n}\n\nclass MaxFindingStrategy implements FindingStrategy {\n\n    public int getResult(int[] numbers) {\n        // write your code here\n        if (numbers.length \u003d\u003d 0) {\n            return Integer.MIN_VALUE;\n        }\n        return Arrays.stream(numbers).max().getAsInt();\n    }\n}\n\nclass MinFindingStrategy implements FindingStrategy {\n\n    public int getResult(int[] numbers) {\n        // write your code here\n        if (numbers.length \u003d\u003d 0) {\n            return Integer.MAX_VALUE;\n        }\n        return Arrays.stream(numbers).min().getAsInt();\n    }\n}\n\n/* Do not change code below */\npublic class Main {\n\n    public static void main(String[] args) {\n\n        final Scanner scanner \u003d new Scanner(System.in);\n\n        final String[] elements \u003d scanner.nextLine().split(\"\\\\s+\");\n        int[] numbers \u003d null;\n\n        if (\"EMPTY\".equals(elements[0])) {\n            numbers \u003d new int[0];   \n        } else {\n            numbers \u003d new int[elements.length];\n            for (int i \u003d 0; i \u003c elements.length; i++) {\n                numbers[i] \u003d Integer.parseInt(elements[i]);\n            }\n        }\n\n        final String type \u003d scanner.nextLine();\n\n        Finder finder \u003d null;\n\n        switch (type) {\n            case \"MIN\":\n                finder \u003d new Finder(new MinFindingStrategy());\n                break;\n            case \"MAX\":\n                finder \u003d new Finder(new MaxFindingStrategy());\n                break;\n            default:\n                break;\n        }\n\n        if (finder \u003d\u003d null) {\n            throw new RuntimeException(\n                    \"Unknown strategy type passed. Please, write to the author of the problem.\");\n        }\n\n        System.out.println(finder.find(numbers));\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/3332",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It can represent a general behavior, while strategies represent specific details of algorithms.",
      "It may provide a method to set a new strategy.",
      "It stores a reference to a strategy."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3780",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "It enables to choose an algorithm at run-time.",
      "It isolates the code of algorithms from the client code."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3311",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The method getInstance2 breaks the pattern.",
      "The constructor should be hidden (declared as private)."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3312",
    "checked": false,
    "mode": 1,
    "answerStr": "data1 data1 data4"
  },
  {
    "url": "https://hyperskill.org/learn/step/3313",
    "checked": false,
    "mode": 1,
    "answerStr": "2100 https://hyperskill.org/topics/knowledge-graph"
  },
  {
    "url": "https://hyperskill.org/learn/step/3314",
    "checked": false,
    "mode": 3,
    "answerStr": "class Singleton {\n    // write your code here\n    private static Singleton singleton;\n\n    private Singleton(){}\n\n    public static Singleton getInstance() {\n        if (singleton \u003d\u003d null) {\n            singleton \u003d new Singleton();\n        }\n        return singleton;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3315",
    "checked": false,
    "mode": 3,
    "answerStr": "class SimpleCounter {\n    // write your code here\n    private static SimpleCounter instance \u003d new SimpleCounter();\n    public int counter;\n\n    private SimpleCounter() {}\n\n    public static SimpleCounter getInstance() {\n        return instance;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/3308",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "a field that keeps an instance of the class",
      "a public static method that always returns the same instance of the class"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3309",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The pattern restricts the instantiation of a class to one object.",
      "Lazy initialization of a singleton means that the instance is not created until needed."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3310",
    "checked": false,
    "mode": 1,
    "answerStr": "4"
  },
  {
    "url": "https://hyperskill.org/learn/step/3459",
    "checked": false,
    "mode": 1,
    "answerStr": "It introduces a global state into the application."
  },
  {
    "url": "https://hyperskill.org/learn/step/31543",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "In asynchronous processing, the server places incoming requests into a buffer, and signals are used to start processing them. In synchronous processing, requests are processed immediately as they come in and no signals are required.",
      "In synchronous processing, the server handles one request at a time, blocking all others until it is fully processed, while in asynchronous processing, multiple requests can be processed at the same time without blocking."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/31151",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Allowing multiple instances of the app to run on different cores of the processor",
      "Implementing asynchronous API calls allowing users to continue using the app while the data is being fetched from the server",
      "Dividing data parsing task into multiple subtasks handled by different threads"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9333",
    "checked": false,
    "mode": 1,
    "answerStr": "Tasks execution goes one by one; the next task starts only if the previous one finished."
  },
  {
    "url": "https://hyperskill.org/learn/step/9334",
    "checked": false,
    "mode": 1,
    "answerStr": "Tasks can start at any time; they don\u0027t have to wait until the previous one finished."
  },
  {
    "url": "https://hyperskill.org/learn/step/9335",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Asynchronous tasks execution process can come in parallel",
      "A synchronous task blocks the whole process till the task is completed"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9337",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "Blocks the execution until it\u0027s finished",
        "nameColumns": "Synchronous",
        "check": true
      },
      {
        "nameRow": "Blocks the execution until it\u0027s finished",
        "nameColumns": "Asynchronous",
        "check": false
      },
      {
        "nameRow": "Blocks the execution until it\u0027s finished",
        "nameColumns": "Parallel",
        "check": false
      },
      {
        "nameRow": "Occurs only for multiple tasks",
        "nameColumns": "Synchronous",
        "check": false
      },
      {
        "nameRow": "Occurs only for multiple tasks",
        "nameColumns": "Asynchronous",
        "check": true
      },
      {
        "nameRow": "Occurs only for multiple tasks",
        "nameColumns": "Parallel",
        "check": false
      },
      {
        "nameRow": "Possible only if there are multiple executors",
        "nameColumns": "Synchronous",
        "check": false
      },
      {
        "nameRow": "Possible only if there are multiple executors",
        "nameColumns": "Asynchronous",
        "check": false
      },
      {
        "nameRow": "Possible only if there are multiple executors",
        "nameColumns": "Parallel",
        "check": true
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9338",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Tell the story",
        "Synchronous"
      ],
      [
        "Iron your shirt and wash your clothes",
        "Asynchronous"
      ],
      [
        "Deliver 10 packages with 10 couriers",
        "Parallel"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9339",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "Dishes: step #1. Rinse the dishes.",
      "Vacuuming the carpet: step #2. Start cleaning the carpet.",
      "Vacuuming the carpet: step #1. Plug in a vacuum cleaner.",
      "Vacuuming the carpet: step #3. When the carpet is clean, turn the vacuum cleaner off.",
      "Dishes: step #2. Load dishes to the dishwasher and start it.",
      "Dishes: step #3. When the dishwasher has finished, put the dishes to the cupboard."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9340",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "Dishes: step #3. When the dishwasher has finished, put the dishes to the cupboard.",
      "Dishes: step #1. Rinse the dishes.",
      "Vacuuming the carpet: step #1. Start cleaning the carpet.",
      "Vacuuming the carpet: step #2. When the carpet is clean, turn the vacuum cleaner off.",
      "Dishes: step #2. Load dishes to the dishwasher and start it."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9421",
    "checked": false,
    "mode": 1,
    "answerStr": "an independent unit containing an execution environment, shared resources, and threads of its tasks"
  },
  {
    "url": "https://hyperskill.org/learn/step/9422",
    "checked": false,
    "mode": 1,
    "answerStr": "a stream of instructions inside a process that can be scheduled and run independently"
  },
  {
    "url": "https://hyperskill.org/learn/step/9424",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "Borrows shared resources",
        "nameColumns": "Process",
        "check": false
      },
      {
        "nameRow": "Borrows shared resources",
        "nameColumns": "Thread",
        "check": true
      },
      {
        "nameRow": "Owns system resources",
        "nameColumns": "Process",
        "check": true
      },
      {
        "nameRow": "Owns system resources",
        "nameColumns": "Thread",
        "check": false
      },
      {
        "nameRow": "Run a unit of work",
        "nameColumns": "Process",
        "check": false
      },
      {
        "nameRow": "Run a unit of work",
        "nameColumns": "Thread",
        "check": true
      },
      {
        "nameRow": "Schedule other units of work",
        "nameColumns": "Process",
        "check": true
      },
      {
        "nameRow": "Schedule other units of work",
        "nameColumns": "Thread",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9425",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "supporting inter-thread communications (communications between pizza workers)",
      "arranging access to scarce shared resources (ingredients)",
      "organizing the runtime environment (the kitchen for pizza workers)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9426",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "getting access to scarce shared resources",
      "executing the tasks"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/9423",
    "checked": false,
    "mode": 1,
    "answerStr": "inside the same thread"
  },
  {
    "url": "https://hyperskill.org/learn/step/9427",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Serving customers and chatting with friends on the phone",
      "Slicing pizza and telling the cook to make one more pepperoni"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15369",
    "checked": false,
    "mode": 1,
    "answerStr": "Structure that represents inner components of an application and describes interactions between them"
  },
  {
    "url": "https://hyperskill.org/learn/step/15370",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Architecture decision record(ADR)",
      "UML diagram"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15371",
    "checked": false,
    "mode": 1,
    "answerStr": "Human Dynamics"
  },
  {
    "url": "https://hyperskill.org/learn/step/15372",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "UML diagrams",
      "Description of architectural pattern"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15373",
    "checked": false,
    "mode": 1,
    "answerStr": "Visually represent application processes in form of a scheme/model/diagram"
  },
  {
    "url": "https://hyperskill.org/learn/step/15374",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Network architecture",
        "Shows relations between network components"
      ],
      [
        "Database architecture",
        "Develops and maintains DBMS"
      ],
      [
        "Information architecture",
        "Describes functions of user interface"
      ],
      [
        "Application architecture",
        "Describes patterns for building an application"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15375",
    "checked": false,
    "mode": 1,
    "answerStr": "Network architecture"
  },
  {
    "url": "https://hyperskill.org/learn/step/18502",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "When you need to provide a roadmap to the development team",
      "When you need to describe interactions between app parts"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18503",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Database architecture",
      "Application architecture",
      "Information architecture"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/23821",
    "checked": false,
    "mode": 1,
    "answerStr": "Architecture Decision Record"
  },
  {
    "url": "https://hyperskill.org/learn/step/17199",
    "checked": false,
    "mode": 1,
    "answerStr": "An architectural pattern that separates user interface from the business logic and data access logic."
  },
  {
    "url": "https://hyperskill.org/learn/step/17200",
    "checked": false,
    "mode": 1,
    "answerStr": "Controller"
  },
  {
    "url": "https://hyperskill.org/learn/step/17201",
    "checked": false,
    "mode": 1,
    "answerStr": "For all data and its related logic"
  },
  {
    "url": "https://hyperskill.org/learn/step/17202",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "View",
      "Controller",
      "Model"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17203",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "1",
        "Model"
      ],
      [
        "2",
        "View"
      ],
      [
        "3",
        "Controller"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17205",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "In-memory data",
      "Data in a database"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6751",
    "checked": false,
    "mode": 4,
    "answerStr": "443"
  },
  {
    "url": "https://hyperskill.org/learn/step/6741",
    "checked": false,
    "mode": 1,
    "answerStr": "Uniform Resource Locator"
  },
  {
    "url": "https://hyperskill.org/learn/step/6743",
    "checked": false,
    "mode": 1,
    "answerStr": "The name of a site, its address in the global network"
  },
  {
    "url": "https://hyperskill.org/learn/step/6746",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "https://www.123t,omato.com",
      "https://www.l-i+mon.org"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6747",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "https://www.iwant-tobeabird.com",
      "https://www.itgets9better.org"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6750",
    "checked": false,
    "mode": 5,
    "answerStr": "https://freenews.org:9999/world"
  },
  {
    "url": "https://hyperskill.org/learn/step/6762",
    "checked": false,
    "mode": 4,
    "answerStr": "404"
  },
  {
    "url": "https://hyperskill.org/learn/step/6758",
    "checked": false,
    "mode": 4,
    "answerStr": "200"
  },
  {
    "url": "https://hyperskill.org/learn/step/6473",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "GET",
      "POST"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6753",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "responses",
      "requests"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6754",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Headers",
      "Start line"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6755",
    "checked": false,
    "mode": 1,
    "answerStr": "data"
  },
  {
    "url": "https://hyperskill.org/learn/step/6756",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "GET",
        "getting data from the server"
      ],
      [
        "POST",
        "sending data to the server"
      ],
      [
        "HEAD",
        "retrieving data from a server without a message body"
      ],
      [
        "BODY",
        "no such method exists"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6757",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "1xx",
        "it means the request has been received and the process is continuing"
      ],
      [
        "2xx",
        "messages of this class inform that the action requested by the client has been successfully accepted for processing"
      ],
      [
        "3xx",
        "it means further action must be taken in order to complete the request"
      ],
      [
        "4xx",
        "it reports errors on the client\u0026#x27;s side"
      ],
      [
        "5xx",
        "It reports server side errors"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/6759",
    "checked": false,
    "mode": 1,
    "answerStr": "5xx"
  },
  {
    "url": "https://hyperskill.org/learn/step/6760",
    "checked": false,
    "mode": 1,
    "answerStr": "POST"
  },
  {
    "url": "https://hyperskill.org/learn/step/7835",
    "checked": false,
    "mode": 1,
    "answerStr": "REpresentational State Transfer"
  },
  {
    "url": "https://hyperskill.org/learn/step/7836",
    "checked": false,
    "mode": 1,
    "answerStr": "Full Idempotence"
  },
  {
    "url": "https://hyperskill.org/learn/step/7838",
    "checked": false,
    "mode": 1,
    "answerStr": "PUT articles/3"
  },
  {
    "url": "https://hyperskill.org/learn/step/7839",
    "checked": false,
    "mode": 1,
    "answerStr": "DELETE poems/12"
  },
  {
    "url": "https://hyperskill.org/learn/step/7840",
    "checked": false,
    "mode": 1,
    "answerStr": "GET /books/4"
  },
  {
    "url": "https://hyperskill.org/learn/step/7841",
    "checked": false,
    "mode": 1,
    "answerStr": "POST articles"
  },
  {
    "url": "https://hyperskill.org/learn/step/21777",
    "checked": false,
    "mode": 1,
    "answerStr": "It is a type of app that follows the REST rules"
  },
  {
    "url": "https://hyperskill.org/learn/step/21779",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "PUT articles/1",
      "PUT articles/2",
      "GET articles/1",
      "DELETE articles/2"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/22666",
    "checked": false,
    "mode": 1,
    "answerStr": "404"
  },
  {
    "url": "https://hyperskill.org/learn/step/6859",
    "checked": false,
    "mode": 4,
    "answerStr": "2"
  },
  {
    "url": "https://hyperskill.org/learn/step/6855",
    "checked": false,
    "mode": 1,
    "answerStr": "JavaScript Object Notation"
  },
  {
    "url": "https://hyperskill.org/learn/step/6856",
    "checked": false,
    "mode": 1,
    "answerStr": "{ }"
  },
  {
    "url": "https://hyperskill.org/learn/step/6857",
    "checked": false,
    "mode": 1,
    "answerStr": ":"
  },
  {
    "url": "https://hyperskill.org/learn/step/6858",
    "checked": false,
    "mode": 1,
    "answerStr": "{ \"first_name\": \"Sophie\", \"last_name\": \"Goodwin\" }"
  },
  {
    "url": "https://hyperskill.org/learn/step/6860",
    "checked": false,
    "mode": 1,
    "answerStr": "{ \"name\": \"Yasha\", \"type\": \"parrot\" }"
  },
  {
    "url": "https://hyperskill.org/learn/step/6861",
    "checked": false,
    "mode": 5,
    "answerStr": "{\"name\":\"name\",\"age\":0}"
  },
  {
    "url": "https://hyperskill.org/learn/step/6862",
    "checked": false,
    "mode": 5,
    "answerStr": "{\"song\":\"Hot\",\"musician\":\"Avril Lavigne\"}"
  },
  {
    "url": "https://hyperskill.org/learn/step/6863",
    "checked": false,
    "mode": 5,
    "answerStr": "{\"books\":[{\"title\":\"title1\",\"author\":\"author1\"},{\"title\":\"title2\",\"author\":\"author2\"},{\"title\":\"title3\",\"author\":\"author3\"}]}"
  },
  {
    "url": "https://hyperskill.org/learn/step/34583",
    "checked": false,
    "mode": 10,
    "answerArr": [
      "newHttpClient()",
      "newBuilder()",
      "uri",
      "GET()",
      "build()"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/14269",
    "checked": false,
    "mode": 1,
    "answerStr": "HttpClient"
  },
  {
    "url": "https://hyperskill.org/learn/step/14270",
    "checked": false,
    "mode": 1,
    "answerStr": "It is a library that can be used to organize a communication with an external resource over HTTP"
  },
  {
    "url": "https://hyperskill.org/learn/step/14272",
    "checked": false,
    "mode": 1,
    "answerStr": "send"
  },
  {
    "url": "https://hyperskill.org/learn/step/14273",
    "checked": false,
    "mode": 1,
    "answerStr": "GET"
  },
  {
    "url": "https://hyperskill.org/learn/step/14274",
    "checked": false,
    "mode": 1,
    "answerStr": "It is a GET request, the target is https://www.google.com/, and the request doesn\u0027t have a timeout"
  },
  {
    "url": "https://hyperskill.org/learn/step/14276",
    "checked": false,
    "mode": 1,
    "answerStr": "HttpRequest.newBuilder().uri(someUrl).POST(HttpRequest.BodyPublishers.ofString(\"123\")).build();"
  },
  {
    "url": "https://hyperskill.org/learn/step/14277",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Exception handling is worth using for HTTP interactions",
      "It\u0027s recommended setting duration for every request not to wait too much time"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/5351",
    "checked": false,
    "mode": 1,
    "answerStr": "FIFO"
  },
  {
    "url": "https://hyperskill.org/learn/step/5352",
    "checked": false,
    "mode": 1,
    "answerStr": "45"
  },
  {
    "url": "https://hyperskill.org/learn/step/5354",
    "checked": false,
    "mode": 1,
    "answerStr": "30 20"
  },
  {
    "url": "https://hyperskill.org/learn/step/20717",
    "checked": false,
    "mode": 1,
    "answerStr": "Patients waiting outside the clinic"
  },
  {
    "url": "https://hyperskill.org/learn/step/20718",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "Insertion",
        "nameColumns": "$O(n \\cdot log n)$",
        "check": false
      },
      {
        "nameRow": "Insertion",
        "nameColumns": "$O(1)$",
        "check": true
      },
      {
        "nameRow": "Insertion",
        "nameColumns": "$O(n^2)$",
        "check": false
      },
      {
        "nameRow": "Insertion",
        "nameColumns": "$O(n)$",
        "check": false
      },
      {
        "nameRow": "Deletion",
        "nameColumns": "$O(n \\cdot log n)$",
        "check": false
      },
      {
        "nameRow": "Deletion",
        "nameColumns": "$O(1)$",
        "check": true
      },
      {
        "nameRow": "Deletion",
        "nameColumns": "$O(n^2)$",
        "check": false
      },
      {
        "nameRow": "Deletion",
        "nameColumns": "$O(n)$",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20719",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "$q[front]$",
        "Determines the front of a queue"
      ],
      [
        "$q[rear]$",
        "Determines the rear of a queue"
      ],
      [
        "Adding an element",
        "Variable $rear$ is increased by one"
      ],
      [
        "Deleting an element",
        "Variable $front$ is increased by one"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20720",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "All elements are copied to a new data structure when memory overflows",
        "nameColumns": "Array",
        "check": true
      },
      {
        "nameRow": "All elements are copied to a new data structure when memory overflows",
        "nameColumns": "Linkedlist",
        "check": false
      },
      {
        "nameRow": "Comparatively more memory is required",
        "nameColumns": "Array",
        "check": false
      },
      {
        "nameRow": "Comparatively more memory is required",
        "nameColumns": "Linkedlist",
        "check": true
      },
      {
        "nameRow": "Comparatively less memory is required",
        "nameColumns": "Array",
        "check": true
      },
      {
        "nameRow": "Comparatively less memory is required",
        "nameColumns": "Linkedlist",
        "check": false
      },
      {
        "nameRow": "Uses dynamic memory",
        "nameColumns": "Array",
        "check": false
      },
      {
        "nameRow": "Uses dynamic memory",
        "nameColumns": "Linkedlist",
        "check": true
      },
      {
        "nameRow": "Is limited by the size of the data structure",
        "nameColumns": "Array",
        "check": true
      },
      {
        "nameRow": "Is limited by the size of the data structure",
        "nameColumns": "Linkedlist",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20721",
    "checked": false,
    "mode": 1,
    "answerStr": "Bob, dequeue"
  },
  {
    "url": "https://hyperskill.org/learn/step/20722",
    "checked": false,
    "mode": 5,
    "answerStr": "10,5"
  },
  {
    "url": "https://hyperskill.org/learn/step/20723",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "function enqueue(int element): ",
      "if (size(queue) !\u003d maximum_size) then",
      "queue[rear+1] \u003d element",
      "rear\u003d (rear+ 1) % maximum_size"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2385",
    "checked": false,
    "mode": 8,
    "matrixList": [
      {
        "nameRow": "filter",
        "nameColumns": "Intermediate",
        "check": true
      },
      {
        "nameRow": "filter",
        "nameColumns": "Terminal",
        "check": false
      },
      {
        "nameRow": "sorted",
        "nameColumns": "Intermediate",
        "check": true
      },
      {
        "nameRow": "sorted",
        "nameColumns": "Terminal",
        "check": false
      },
      {
        "nameRow": "max",
        "nameColumns": "Intermediate",
        "check": false
      },
      {
        "nameRow": "max",
        "nameColumns": "Terminal",
        "check": true
      },
      {
        "nameRow": "collect",
        "nameColumns": "Intermediate",
        "check": false
      },
      {
        "nameRow": "collect",
        "nameColumns": "Terminal",
        "check": true
      },
      {
        "nameRow": "skip",
        "nameColumns": "Intermediate",
        "check": true
      },
      {
        "nameRow": "skip",
        "nameColumns": "Terminal",
        "check": false
      },
      {
        "nameRow": "anyMatch",
        "nameColumns": "Intermediate",
        "check": false
      },
      {
        "nameRow": "anyMatch",
        "nameColumns": "Terminal",
        "check": true
      },
      {
        "nameRow": "count",
        "nameColumns": "Intermediate",
        "check": false
      },
      {
        "nameRow": "count",
        "nameColumns": "Terminal",
        "check": true
      },
      {
        "nameRow": "reduce",
        "nameColumns": "Intermediate",
        "check": false
      },
      {
        "nameRow": "reduce",
        "nameColumns": "Terminal",
        "check": true
      },
      {
        "nameRow": "limit",
        "nameColumns": "Intermediate",
        "check": true
      },
      {
        "nameRow": "limit",
        "nameColumns": "Terminal",
        "check": false
      },
      {
        "nameRow": "average (LongStream)",
        "nameColumns": "Intermediate",
        "check": false
      },
      {
        "nameRow": "average (LongStream)",
        "nameColumns": "Terminal",
        "check": true
      },
      {
        "nameRow": "distinct",
        "nameColumns": "Intermediate",
        "check": true
      },
      {
        "nameRow": "distinct",
        "nameColumns": "Terminal",
        "check": false
      },
      {
        "nameRow": "map",
        "nameColumns": "Intermediate",
        "check": true
      },
      {
        "nameRow": "map",
        "nameColumns": "Terminal",
        "check": false
      }
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/2383",
    "checked": false,
    "mode": 1,
    "answerStr": "10, 11, 12"
  },
  {
    "url": "https://hyperskill.org/learn/step/14220",
    "checked": false,
    "mode": 1,
    "answerStr": "the act of validating that users are who they claim to be"
  },
  {
    "url": "https://hyperskill.org/learn/step/14221",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "biometrics",
      "authentication apps",
      "one-time pins",
      "passwords"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/14222",
    "checked": false,
    "mode": 1,
    "answerStr": "access the content or resources to which you have requested access"
  },
  {
    "url": "https://hyperskill.org/learn/step/14224",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "changing the story",
      "removing some parts from the story",
      "downloading the story"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/14226",
    "checked": false,
    "mode": 1,
    "answerStr": "biometrics"
  },
  {
    "url": "https://hyperskill.org/learn/step/14754",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "accept the password and username",
      "generate a long one-time access code"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/20510",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "token expiration date",
      "user login"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17650",
    "checked": false,
    "mode": 1,
    "answerStr": "design patterns that describe relations between the system\u0027s components"
  },
  {
    "url": "https://hyperskill.org/learn/step/17651",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Decorator",
      "Adapter"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17652",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "You can implement composite pattern when you want your client to work with different elements of a structure uniformly",
      "Structural design patterns simplify the structure by identifying the relationship"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17653",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Adapter",
        "connects objects with incompatible interfaces"
      ],
      [
        "Facade",
        "provides interface for a complex set of objects"
      ],
      [
        "Flyweight",
        "fits more objects into memory"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/17654",
    "checked": false,
    "mode": 1,
    "answerStr": "Prototype"
  },
  {
    "url": "https://hyperskill.org/learn/step/17655",
    "checked": false,
    "mode": 1,
    "answerStr": "separation of abstraction and implementation, allowing for their independent development"
  },
  {
    "url": "https://hyperskill.org/learn/step/17656",
    "checked": false,
    "mode": 1,
    "answerStr": "connecting objects with incompatible interfaces"
  },
  {
    "url": "https://hyperskill.org/learn/step/3252",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The garbage collector cleans unused objects from the heap.",
      "Each thread has its own stack to store local variables and the class of methods."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3253",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The heap is shared by multiple threads.",
      "The runtime data areas represents JVM memory.",
      "The class loader subsystem loads and verifies bytecode, and also performs other activities."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3241",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Class loader",
        "loads, verifies, and then allocates memory for bytecode"
      ],
      [
        "PC register",
        " holds the address of the currently executing instruction"
      ],
      [
        "Method area",
        "stores all the class level information"
      ],
      [
        "Garbage collector",
        "cleans the memory of unused objects"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3242",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Stack area",
        "stores method calls and local variables"
      ],
      [
        "Heap",
        "stores all created objects"
      ],
      [
        "Bytecode interpreter",
        "interprets the bytecode line by line and executes it"
      ],
      [
        "JIT compiler",
        "translates bytecode into native machine language while executing the program"
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3244",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Stack area",
      "Heap",
      "PC register"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3245",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The runtime data areas represent JVM memory.",
      "JVM runs as an application on top of an operating system and provides an environment for Java programs."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3246",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "The execution engine is responsible for executing the bytecode.",
      "Every thread has its own PC register and stack."
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/3249",
    "checked": false,
    "mode": 1,
    "answerStr": "heap"
  },
  {
    "url": "https://hyperskill.org/learn/step/3250",
    "checked": false,
    "mode": 1,
    "answerStr": "class loader"
  },
  {
    "url": "https://hyperskill.org/learn/step/15589",
    "checked": false,
    "mode": 1,
    "answerStr": "A UML diagram that visually represents object-oriented structure."
  },
  {
    "url": "https://hyperskill.org/learn/step/15590",
    "checked": false,
    "mode": 1,
    "answerStr": "A concept that defines connections between classes."
  },
  {
    "url": "https://hyperskill.org/learn/step/15591",
    "checked": false,
    "mode": 1,
    "answerStr": "Realization"
  },
  {
    "url": "https://hyperskill.org/learn/step/15592",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Private",
        "You need to make a unique attribute for one class."
      ],
      [
        "Public",
        "You need to make a method that will be used in all the classes."
      ],
      [
        "Protected",
        "You need to make a method that will be used in a child class."
      ],
      [
        "Package",
        "You need to make a method that will be shared across the package of classes."
      ]
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/15593",
    "checked": false,
    "mode": 1,
    "answerStr": "-"
  },
  {
    "url": "https://hyperskill.org/learn/step/15594",
    "checked": false,
    "mode": 1,
    "answerStr": "(1...*) for Patient and (*) for Doctor"
  },
  {
    "url": "https://hyperskill.org/learn/step/15595",
    "checked": false,
    "mode": 1,
    "answerStr": "3"
  },
  {
    "url": "https://hyperskill.org/learn/step/23162",
    "checked": false,
    "mode": 1,
    "answerStr": "Realization"
  },
  {
    "url": "https://hyperskill.org/learn/step/23163",
    "checked": false,
    "mode": 1,
    "answerStr": "When you need to visually represent relations within your program"
  },
  {
    "url": "https://hyperskill.org/learn/step/23859",
    "checked": false,
    "mode": 1,
    "answerStr": "Aggregation"
  },
  {
    "url": "https://hyperskill.org/learn/step/18645",
    "checked": false,
    "mode": 1,
    "answerStr": "an object that works with your initial object in a way that alters it"
  },
  {
    "url": "https://hyperskill.org/learn/step/18646",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "Common interface for initial object and wrapper",
      "Initial object",
      "Wrapper (or Decorator)"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18647",
    "checked": false,
    "mode": 1,
    "answerStr": "Description: Pizza Hot Pepper"
  },
  {
    "url": "https://hyperskill.org/learn/step/18648",
    "checked": false,
    "mode": 1,
    "answerStr": "It allows you to add new functions to a class without changing it"
  },
  {
    "url": "https://hyperskill.org/learn/step/18649",
    "checked": false,
    "mode": 7,
    "answerArr": [
      "Extend basic wrapper in individual wrappers and add new functions",
      "Write basic wrapper(decorator) that will share an interface with the initial object",
      "Write initial object that cannot be rewritten",
      "Write an interface that describes methods for your object",
      "Create object instances using individual wrappers"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18650",
    "checked": false,
    "mode": 2,
    "answerArr": [
      "You can create and combine multiple wrappers that extend the base wrapper",
      "Wrappers share interface with initial objects"
    ]
  },
  {
    "url": "https://hyperskill.org/learn/step/18651",
    "checked": false,
    "mode": 1,
    "answerStr": "Activity act \u003d new GPU(new SSD(new ComputerParts()))"
  },
  {
    "url": "https://hyperskill.org/learn/step/5217",
    "checked": false,
    "mode": 1,
    "answerStr": "Write Java code. Make code review. Send week report to customers."
  },
  {
    "url": "https://hyperskill.org/learn/step/5218",
    "checked": false,
    "mode": 1,
    "answerStr": "it is difficult to configure multiple wrapped objects"
  },
  {
    "url": "https://hyperskill.org/learn/step/5219",
    "checked": false,
    "mode": 1,
    "answerStr": "allows to add new functionality dynamically"
  },
  {
    "url": "https://hyperskill.org/learn/step/6009",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Locale;\n\nclass TestDrive {\n    public static void main(String[] args) {\n        Pizza simpleVeganPizza \u003d new Vegan();\n        System.out.println(simpleVeganPizza.getDescription() + \" $\" + formatSum(simpleVeganPizza.cost()));\n\n        Pizza veganPizzaDecor \u003d new Vegan();\n        veganPizzaDecor \u003d new Broccoli(veganPizzaDecor);\n        veganPizzaDecor \u003d new Tomato(veganPizzaDecor);\n        veganPizzaDecor \u003d new Spinach(veganPizzaDecor);\n        System.out.println(veganPizzaDecor.getDescription() + \" $\" + formatSum(veganPizzaDecor.cost()));\n\n        Pizza meatPizzaDecor \u003d new MeatHeaven();\n        meatPizzaDecor \u003d new Ham(meatPizzaDecor);\n        meatPizzaDecor \u003d new Chicken(meatPizzaDecor);\n        meatPizzaDecor \u003d new Cheese(meatPizzaDecor);\n        System.out.println(meatPizzaDecor.getDescription() + \" $\" + formatSum(meatPizzaDecor.cost()));\n\n    }\n\n    private static String formatSum(double sum) {\n        return String.format(Locale.ROOT, \"%.2f\", sum);\n    }\n}\n\nabstract class Pizza {\n    String description;\n\n    String getDescription() {\n        return description;\n    }\n\n    abstract double cost();\n}\n\nclass Vegan extends Pizza {\n\n    Vegan() {\n        description \u003d \"Vegan\";\n    }\n\n    @Override\n    double cost() {\n        return 4.99;\n    }\n}\n\nclass MeatHeaven extends Pizza {\n\n    MeatHeaven() {\n        description \u003d \"MeatHeaven\";\n    }\n\n    @Override\n    double cost() {\n        return 4.0;\n    }\n}\n\nabstract class Decorator extends Pizza {\n    abstract String getDescription();\n}\n\nclass Ham extends Decorator {\n    private Pizza pizza;\n\n    Ham(Pizza pizza) {\n        this.pizza \u003d pizza;\n    }\n\n    @Override\n    String getDescription() {\n        return pizza.getDescription() + \", Ham\";\n    }\n\n    @Override\n    double cost() {\n        return 1.0 + pizza.cost();\n    }\n}\n\nclass Chicken extends Decorator {\n\n    private Pizza pizza;\n\n    Chicken(Pizza pizza) {\n        this.pizza \u003d pizza;\n    }\n\n    @Override\n    String getDescription() {\n        return pizza.getDescription() + \", Chicken\";\n    }\n\n    @Override\n    double cost() {\n        return 1.5 + pizza.cost();\n    }\n}\n\nclass Cheese extends Decorator {\n\n    private Pizza pizza;\n\n    Cheese(Pizza pizza) {\n        this.pizza \u003d pizza;\n    }\n\n    @Override\n    String getDescription() {\n        return pizza.getDescription() + \", Cheese\";\n    }\n\n    @Override\n    double cost() {\n        return .20 + pizza.cost();\n    }\n}\n\nclass Broccoli extends Decorator {\n\n    private Pizza pizza;\n\n    Broccoli(Pizza pizza) {\n        this.pizza \u003d pizza;\n    }\n\n    @Override\n    String getDescription() {\n        return pizza.getDescription() + \", Broccoli\";\n    }\n\n    @Override\n    double cost() {\n        return .10 + pizza.cost();\n    }\n}\n\nclass Tomato extends Decorator {\n\n    private Pizza pizza;\n\n    Tomato(Pizza pizza) {\n        this.pizza \u003d pizza;\n    }\n\n    @Override\n    String getDescription() {\n        return pizza.getDescription() + \", Tomato\";\n    }\n\n    @Override\n    double cost() {\n        return .09 + pizza.cost();\n    }\n}\n\nclass Spinach extends Decorator {\n\n    private Pizza pizza;\n\n    Spinach(Pizza pizza) {\n        this.pizza \u003d pizza;\n    }\n\n    @Override\n    String getDescription() {\n        return pizza.getDescription() + \", Spinach\";\n    }\n\n    @Override\n    double cost() {\n        return .09 + pizza.cost();\n    }\n}"
  },
  {
    "url": "https://hyperskill.org/learn/step/6010",
    "checked": false,
    "mode": 3,
    "answerStr": "class TestDrive {\n    public static void main(String[] args) {\n        Breakfast bagel \u003d new Bread();\n        bagel \u003d new Butter(bagel);\n        bagel \u003d new Cheese(bagel);\n        System.out.println(bagel.getSummary());\n\n        Breakfast bun \u003d new Bread();\n        bun \u003d new Butter(bun);\n        bun \u003d new Jam(bun);\n        System.out.println(bun.getSummary());\n    }\n}\n\ninterface Breakfast {\n    String getDescription();\n\n    int getKcal();\n\n    default String getSummary() {\n        return getDescription() + \". kCal: \" + getKcal();\n    }\n}\n\nclass Bread implements Breakfast {\n    String description \u003d \"Bread\";\n    int kCal \u003d 200;\n\n    @Override\n    public String getDescription() {\n        return description;\n    }\n\n    @Override\n    public int getKcal() {\n        return kCal;\n    }\n}\n\nclass Butter implements Breakfast {\n    private final Breakfast breakfast;\n\n    Butter(Breakfast breakfast) {\n        this.breakfast \u003d breakfast;\n    }\n\n    @Override\n    public String getDescription() {\n        return \"Butter on top of \" + breakfast.getDescription();\n    }\n\n    @Override\n    public int getKcal() {\n        return breakfast.getKcal() + 50;\n    }\n}\n\nclass Jam implements Breakfast {\n    private final Breakfast breakfast;\n\n    Jam(Breakfast breakfast) {\n        this.breakfast \u003d breakfast;\n    }\n\n    @Override\n    public String getDescription() {\n        return \"Jam on top of \" + breakfast.getDescription();\n    }\n\n    @Override\n    public int getKcal() {\n        return breakfast.getKcal() + 120;\n    }\n}\n\nclass Cheese implements Breakfast {\n    private final Breakfast breakfast;\n\n    Cheese(Breakfast breakfast) {\n        this.breakfast \u003d breakfast;\n    }\n\n    @Override\n    public String getDescription() {\n        return \"Cheese on top of \" + breakfast.getDescription();\n    }\n\n    @Override\n    public int getKcal() {\n        return breakfast.getKcal() + 40;\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/6011",
    "checked": false,
    "mode": 3,
    "answerStr": "import java.util.Locale;\n\nclass TestDrive {\n    public static void main(String[] args) throws InterruptedException {\n        Coffee simpleEspresso \u003d new Espresso();\n        System.out.println(simpleEspresso.getDescription() + \" $\" + formatSum(simpleEspresso.cost()));\n\n        Coffee espressoWithDecor \u003d new Espresso();\n        espressoWithDecor \u003d new Milk(espressoWithDecor);\n        espressoWithDecor \u003d new Sugar(espressoWithDecor);\n        System.out.println(espressoWithDecor.getDescription() + \" $\" + formatSum(espressoWithDecor.cost()));\n\n        Coffee instantWithDecor \u003d new InstantCoffee();\n        instantWithDecor \u003d new WhippedCream(instantWithDecor);\n        instantWithDecor \u003d new Sugar(instantWithDecor);\n        instantWithDecor \u003d new Sugar(instantWithDecor);\n        instantWithDecor \u003d new Sugar(instantWithDecor);\n        System.out.println(instantWithDecor.getDescription() + \" $\" + formatSum(instantWithDecor.cost()));\n\n        System.out.println(\"I\u0027m drinking my \" + instantWithDecor.getDescription());\n        Thread.sleep(1500);\n        System.out.println(\"-I want to add some Whipped Cream to my coffee. And don\u0027t make a new one! Just add Whipped Cream\");\n        Thread.sleep(1500);\n        System.out.println(\"-Okay! But the final price will change\");\n        Thread.sleep(1500);\n        System.out.println(\"-I understand\");\n\n        instantWithDecor \u003d new WhippedCream(instantWithDecor);\n        System.out.println((instantWithDecor.getDescription() + \" $\" + formatSum(instantWithDecor.cost())));\n    }\n\n    private static String formatSum(double sum) {\n        return String.format(Locale.ROOT, \"%.2f\", sum);\n    }\n}\n\nabstract class Coffee {\n    String description;\n\n    String getDescription() {\n        return description;\n    }\n\n    abstract double cost();\n}\n\nclass Espresso extends Coffee {\n\n    Espresso() {\n        description \u003d \"Espresso\";\n    }\n\n    @Override\n    double cost() {\n        return 1.99;\n    }\n}\n\nclass InstantCoffee extends Coffee {\n\n    InstantCoffee() {\n        description \u003d \"Instant Coffee\";\n    }\n\n    @Override\n    double cost() {\n        return 1.0;\n    }\n}\n\nabstract class Decorator extends Coffee {\n    abstract String getDescription();\n}\n\nclass Milk extends Decorator {\n\n    private Coffee coffee;\n\n    public Milk(Coffee coffee) {\n\t\tthis.coffee \u003d coffee;\n\t}\n\n    @Override\n    String getDescription() {\n        return coffee.getDescription() + \", Milk\";\n    }\n\n    @Override\n    double cost() {\n        return .13 + coffee.cost();\n    }\n}\n\nclass Sugar extends Decorator {\n\n    private Coffee coffee;\n\n    public Sugar(Coffee coffee) {\n\t\tthis.coffee \u003d coffee;\n\t}\n\n    @Override\n    String getDescription() {\n        return coffee.getDescription() + \", Sugar\";\n    }\n\n    @Override\n    double cost() {\n        return .02 + coffee.cost();\n    }\n}\n\nclass WhippedCream extends Decorator {\n\n    private Coffee coffee;\n\n    public WhippedCream(Coffee coffee) {\n\t\tthis.coffee \u003d coffee;\n\t}\n\n    @Override\n    String getDescription() {\n        return coffee.getDescription() + \", Whipped Cream\";\n    }\n\n    @Override\n    double cost() {\n        return .10 + coffee.cost();\n    }\n}\n"
  },
  {
    "url": "https://hyperskill.org/learn/step/24141",
    "checked": false,
    "mode": 1,
    "answerStr": "Standard flags"
  },
  {
    "url": "https://hyperskill.org/learn/step/24142",
    "checked": false,
    "mode": 1,
    "answerStr": "Yes, with manageable flags"
  },
  {
    "url": "https://hyperskill.org/learn/step/24143",
    "checked": false,
    "mode": 1,
    "answerStr": "Non-standard"
  },
  {
    "url": "https://hyperskill.org/learn/step/24144",
    "checked": false,
    "mode": 1,
    "answerStr": "-XX"
  },
  {
    "url": "https://hyperskill.org/learn/step/24145",
    "checked": false,
    "mode": 1,
    "answerStr": "byte"
  },
  {
    "url": "https://hyperskill.org/learn/step/24146",
    "checked": false,
    "mode": 5,
    "answerStr": "-verbose:gc"
  },
  {
    "url": "https://hyperskill.org/learn/step/24147",
    "checked": false,
    "mode": 5,
    "answerStr": "java -jar Application.jar"
  },
  {
    "url": "https://hyperskill.org/learn/step/24148",
    "checked": false,
    "mode": 1,
    "answerStr": "-verbose:class"
  },
  {
    "url": "https://hyperskill.org/learn/step/24150",
    "checked": false,
    "mode": 1,
    "answerStr": "-XX:+PrintCommandLineFlags"
  },
  {
    "url": "https://hyperskill.org/learn/step/7779",
    "checked": false,
    "mode": 1,
    "answerStr": "The status code 401 and the WWW-Authenticate header"
  },
  {
    "url": "https://hyperskill.org/learn/step/7780",
    "checked": false,
    "mode": 1,
    "answerStr": "Authorization"
  },
  {
    "url": "https://hyperskill.org/learn/step/7781",
    "checked": false,
    "mode": 1,
    "answerStr": "the authenticated user has no rights to access the resource"
  },
  {
    "url": "https://hyperskill.org/learn/step/7782",
    "checked": false,
    "mode": 5,
    "answerStr": "Authorization: Basic YWRtaW46MTIzNDU2"
  },
  {
    "url": "https://hyperskill.org/learn/step/7783",
    "checked": false,
    "mode": 5,
    "answerStr": "Authorization: Basic aXJvdDo5MTkyMDg1MjUxOTIwbWVvdw\u003d\u003d"
  },
  {
    "url": "https://hyperskill.org/learn/step/7784",
    "checked": false,
    "mode": 5,
    "answerStr": "world"
  },
  {
    "url": "https://hyperskill.org/learn/step/7785",
    "checked": false,
    "mode": 5,
    "answerStr": "I_admire:your_skills"
  },
  {
    "url": "https://hyperskill.org/learn/step/18141",
    "checked": false,
    "mode": 6,
    "answerListArr": [
      [
        "Strong",
        "Does not allow deleting an object as long as it has a reference."
      ],
      [
        "Soft",
        "The object will be removed only when memory runs out."
      ],
      [
        "Weak",
        "The object will be removed during the next garbage collection."
      ],
      [
        "Phantom",
        "Allows to determine the time of object deletion."
      ]
    ]
  }
]